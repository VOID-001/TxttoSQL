from sqlalchemy import create_engine, text
from sqlalchemy.orm import sessionmaker
from sqlalchemy.exc import SQLAlchemyError

# Define the DATABASE_URL for your 'sqltest' database
DATABASE_URL = "postgresql://postgres:123@localhost:5432/sqltest"

# Create the engine
engine = create_engine(DATABASE_URL)

# Create a session factory
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

class DatabaseClient:
    def __init__(self):
        # Initialize the session
        self.db = SessionLocal()

    def run_query(self, query: str):
        try:
            # Execute the query using SQLAlchemy's text function
            result = self.db.execute(text(query)).fetchall()
            return [dict(row) for row in result]  # Convert rows to dict for JSON response
        except SQLAlchemyError as e:
            # Handle SQLAlchemy errors and rollback the transaction
            self.db.rollback()
            raise HTTPException(status_code=400, detail=f"SQLAlchemy Error: {str(e)}")
        finally:
            self.db.close()

    def close(self):
        # Explicitly close the session
        self.db.close()

# Initialize the db client
db_client = DatabaseClient()
