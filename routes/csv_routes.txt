from fastapi import APIRouter, UploadFile, File, HTTPException
import pandas as pd
from utils.pgvector_client import PGVectorClient
from utils.embedding import embedding_function

csv_router = APIRouter()

# Initialize PGVector Client (replace the credentials with your own)
pgvector_client = PGVectorClient("postgresql://postgres:password@localhost:5432/vector")


@csv_router.post("/upload-csv/")
async def upload_csv(file: UploadFile = File(...)):
    if not file.filename.endswith(".csv"):
        raise HTTPException(status_code=400, detail="Only CSV files are allowed.")

    try:
        df = pd.read_csv(file.file)
    except Exception as e:
        raise HTTPException(status_code=400, detail=f"Error reading CSV file: {str(e)}")

    try:
        for _, row in df.iterrows():
            row_data = row.to_dict()
            row_text = " ".join([f"{key}: {value}" for key, value in row_data.items()])

            # Generate embedding
            embedding = embedding_function([row_text])[0].tolist()

            # Store in PGVector
            pgvector_client.add_embedding(embedding, row_data)

    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error storing data: {str(e)}")

    return {"detail": "CSV data uploaded and embedded successfully"}
