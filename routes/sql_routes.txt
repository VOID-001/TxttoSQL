from fastapi import APIRouter, HTTPException
from utils.sql_model import generate_sql_query
from utils.db_client import db_client
import logging

# Create a logger for debugging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

sql_router = APIRouter()

@sql_router.post("/execute-sql/")
async def execute_sql(prompt: str):
    try:
        # Generate SQL query from the prompt using RAG
        sql_query = generate_sql_query(prompt)

        # Log the generated SQL query for debugging
        logger.info(f"Generated SQL query: {sql_query}")
        print(f"Generated SQL query: {sql_query}")  # Print SQL query to help debugging

        # Execute the generated SQL query
        result = db_client.run_query(sql_query)

        if not result:
            return {"sql_query": sql_query, "result": "No results found."}

        return {"sql_query": sql_query, "result": result}

    except HTTPException as http_exc:
        raise http_exc  # Re-raise HTTP exceptions as they are
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error executing SQL query: {str(e)}")
