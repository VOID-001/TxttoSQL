Unnamed: 0,question,query,schema
64455,What are the top 3 flights by departure date?,SELECT * FROM flight ORDER BY departure_date DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64456,Which stadium has the highest average attendance?,"SELECT s.name, AVG(s.capacity) AS average FROM stadium s GROUP BY s.name ORDER BY average DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
64457,Which injury has affected the most players?,"SELECT i.injury, COUNT(*) AS num_affected_players FROM injury_accident i GROUP BY i.injury ORDER BY num_affected_players DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
64458,Which injury has the longest recovery time?,"SELECT i.injury, MAX(CAST(i.number_of_matches AS integer)) AS longest_recovery_time FROM injury_accident i GROUP BY i.injury ORDER BY longest_recovery_time DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
64459,Which injury has the most frequent occurrence?,"SELECT i.injury, COUNT(*) AS num_occurrences FROM injury_accident i GROUP BY i.injury ORDER BY num_occurrences DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
64460,How many gas stations are there?,SELECT COUNT(*) FROM gas_station,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64461,What companies operate in the automotive industry?,SELECT name FROM company WHERE industry LIKE '%automotive%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64463,In what year did most gas stations open?,SELECT AVG(open_year) FROM gas_station,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64464,What is the total assets in billion for each company?,"SELECT name, SUM(assets_in_billion) as total_assets FROM company GROUP BY name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64465,How many gas stations are operated by each company?,"SELECT c.name, COUNT(gs.station_id) as num_stations FROM gas_station gs JOIN company c ON gs.station_id = c.company_id GROUP BY gs.station_id, c.name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64466,What is the average profits in billion for companies in the tech industry?,SELECT AVG(profits_in_billion) FROM company WHERE industry LIKE '%tech%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64467,How many companies operate in the finance industry?,SELECT COUNT(*) FROM company WHERE industry LIKE '%finance%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64468,What is the average sales in billion for companies in the tech industry?,SELECT AVG(sales_in_billion) FROM company WHERE industry LIKE '%tech%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64470,How many gas stations have more than 10 employees?,SELECT COUNT(*) FROM gas_station WHERE station_id > 10,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64471,What is the total profits in billion for each company?,"SELECT name, SUM(profits_in_billion) as total_profits FROM company GROUP BY name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64472,How many companies are in the auto parts industry?,SELECT COUNT(*) FROM company WHERE industry LIKE '%auto parts%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64473,What is the average assets in billion for companies in the energy sector?,SELECT AVG(assets_in_billion) FROM company WHERE industry LIKE '%energy%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64474,What is the average market value in billion for companies in the real estate industry?,SELECT AVG(market_value_in_billion) FROM company WHERE industry LIKE '%real estate%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64475,How many companies have operations in more than 3 countries?,SELECT COUNT(*) FROM company WHERE market_value_in_billion > 3,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64476,What is the average sales in billion for companies in the real estate industry?,SELECT AVG(sales_in_billion) FROM company WHERE industry LIKE '%real estate%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64477,What is the average assets in billion for companies in the financial sector?,SELECT AVG(assets_in_billion) FROM company WHERE industry LIKE '%financial%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64478,What are the top 3 companies with the highest profits in billion?,"SELECT name, profits_in_billion FROM company ORDER BY profits_in_billion DESC LIMIT 3","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64479,How many gas stations are operated by companies in the tech industry?,SELECT COUNT(*) FROM gas_station gs JOIN company c ON gs.station_id = c.company_id WHERE c.industry LIKE '%tech%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64480,What is the average profits in billion for companies in the financial sector?,SELECT AVG(profits_in_billion) FROM company WHERE industry LIKE '%financial%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64481,What is the average market value in billion for companies in the energy sector?,SELECT AVG(market_value_in_billion) FROM company WHERE industry LIKE '%energy%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64483,What is the average sales in billion for companies in the financial sector?,SELECT AVG(sales_in_billion) FROM company WHERE industry LIKE '%financial%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64484,What are the top 3 companies with the highest assets in billion?,"SELECT name, assets_in_billion FROM company ORDER BY assets_in_billion DESC LIMIT 3","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64485,How many gas stations are operated by companies in the real estate industry?,SELECT COUNT(*) FROM gas_station gs JOIN company c ON gs.station_id = c.company_id WHERE c.industry LIKE '%real estate%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64486,What is the average profits in billion for companies in the real estate sector?,SELECT AVG(profits_in_billion) FROM company WHERE industry LIKE '%real estate%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64487,What is the average assets in billion for companies in the software industry?,SELECT AVG(assets_in_billion) FROM company WHERE industry LIKE '%software%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
64489,What is the highest population density state in the USA?,"SELECT state_name, AVG(density) AS density FROM state GROUP BY state_name ORDER BY density DESC LIMIT 1","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64490,What is the longest river in the world?,SELECT river_name FROM river WHERE LENGTH >= (SELECT MAX(length) FROM river),"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64492,What are the top 3 states with the highest populations?,"SELECT state_name, population FROM state ORDER BY population DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64493,What is the largest lake in the world?,SELECT lake_name FROM lake WHERE area = (SELECT MAX(area) FROM lake),"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64495,What is the lowest point on the Earth's surface?,SELECT lowest_point FROM highlow WHERE lowest_point = (SELECT MIN(lowest_point) FROM highlow),"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64496,What is the longest river in South America?,SELECT river_name FROM river WHERE LENGTH >= (SELECT MAX(length) FROM river) AND country_name = 'South America',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64497,What is the capital of the state with the highest population?,SELECT capital FROM state WHERE population = (SELECT MAX(population) FROM state),"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64498,What is the highest mountain in Asia?,SELECT name FROM mountain WHERE height = (SELECT MAX(height) FROM mountain) AND country = 'Asia',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64499,What are the top 3 lakes by area?,"SELECT lake_name, area FROM lake ORDER BY area DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64501,What is the longest river in Asia?,SELECT river_name FROM river WHERE LENGTH >= (SELECT MAX(length) FROM river) AND country_name = 'Asia',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64502,What is the highest city in the world by elevation?,SELECT city FROM city WHERE regional_population = (SELECT MAX(regional_population) FROM city) AND hanzi = (SELECT MAX(hanzi) FROM city),"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64503,What is the largest state in the USA by population?,"SELECT state_name, population FROM state ORDER BY population DESC LIMIT 1","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64504,What is the highest mountain in South America?,SELECT name FROM mountain WHERE height = (SELECT MAX(height) FROM mountain) AND country = 'South America',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64505,What is the longest river in Africa?,SELECT river_name FROM river WHERE LENGTH >= (SELECT MAX(length) FROM river) AND country_name = 'Africa',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64506,What is the highest mountain in Europe?,SELECT name FROM mountain WHERE height = (SELECT MAX(height) FROM mountain) AND country = 'Europe',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64509,What is the longest river in North America?,SELECT river_name FROM river WHERE LENGTH >= (SELECT MAX(length) FROM river) AND country_name = 'North America',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64510,What is the highest mountain in Africa?,SELECT name FROM mountain WHERE height = (SELECT MAX(height) FROM mountain) AND country = 'Africa',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64511,What are the top 3 mountains by height?,"SELECT name, height FROM mountain ORDER BY height DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64513,What is the largest lake in North America?,SELECT lake_name FROM lake WHERE area = (SELECT MAX(area) FROM lake) AND country_name = 'North America',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
64519,Who are the top 3 gymnasts by total points?,"SELECT gymnast_id, total_points FROM gymnast ORDER BY total_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64520,What are the average heights and weights of gymnasts?,"SELECT AVG(height) AS avg_height, AVG(weight) AS avg_weight FROM people;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64521,What is the date range of birth dates?,"SELECT MIN(birth_date) AS min_date, MAX(birth_date) AS max_date FROM people;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64522,What are the average heights and weights of top 3 gymnasts?,"SELECT AVG(height) AS avg_height, AVG(weight) AS avg_weight FROM people WHERE height IN (SELECT height FROM people ORDER BY height DESC LIMIT 3);","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64523,Who are the top 3 gymnasts by parallel bars points?,"SELECT gymnast_id, parallel_bars_points FROM gymnast ORDER BY parallel_bars_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64524,Who are the top 3 gymnasts by vault points?,"SELECT gymnast_id, vault_points FROM gymnast ORDER BY vault_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64525,What are the top 3 gymnasts by rings points?,"SELECT gymnast_id, rings_points FROM gymnast ORDER BY rings_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64526,Who are the top 3 gymnasts by floor exercise points?,"SELECT gymnast_id, floor_exercise_points FROM gymnast ORDER BY floor_exercise_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64527,What is the average total points of gymnasts?,SELECT AVG(total_points) AS avg_total_points FROM gymnast;,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64528,What are the top 3 gymnasts by pommel horse points?,"SELECT gymnast_id, pommel_horse_points FROM gymnast ORDER BY pommel_horse_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64529,What are the top 3 gymnasts by horizontal bar points?,"SELECT gymnast_id, horizontal_bar_points FROM gymnast ORDER BY horizontal_bar_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64531,What are the top 3 gymnasts by rings points and vault points?,"SELECT gymnast_id, SUM(rings_points), SUM(vault_points) AS sum_points FROM gymnast GROUP BY gymnast_id ORDER BY sum_points DESC LIMIT 3;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64534,What are the departments with the most employees in each region?,"SELECT r.region_name, d.department_name, COUNT(e.employee_id) AS num_employees FROM employees e JOIN job_history j ON e.employee_id = j.employee_id JOIN departments d ON j.department_id = d.department_id JOIN locations l ON d.dept_store_id = l.location_id JOIN regions r ON l.location_id = r.region_id GROUP BY r.region_name, d.department_name ORDER BY num_employees DESC;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64535,What are the top 5 job roles with the highest average salary?,"SELECT j.job_title, AVG(j.max_salary) AS avg_salary FROM jobs j GROUP BY j.job_title ORDER BY avg_salary DESC LIMIT 5;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64536,How many employees have changed jobs?,SELECT COUNT(DISTINCT e.employee_id) FROM employees e JOIN job_history j ON e.employee_id = j.employee_id;,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64537,What are the dates of the earliest and latest job records?,"SELECT MIN(start_date), MAX(end_date) FROM job_history;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64538,What is the average job duration?,SELECT AVG(CAST(EXTRACT(EPOCH FROM (j.end_date - j.start_date)) AS INT) / 3600) AS avg_job_duration FROM job_history j;,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64539,What are the job titles with the highest increase in salary?,"SELECT j.job_title, AVG(j.max_salary) AS avg_salary FROM jobs j GROUP BY j.job_title ORDER BY avg_salary DESC;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64542,What are the departments with the most employees?,"SELECT d.department_name, COUNT(DISTINCT e.employee_id) AS num_employees FROM employees e JOIN job_history j ON e.employee_id = j.employee_id JOIN departments d ON j.department_id = d.department_id GROUP BY d.department_name ORDER BY num_employees DESC;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
64547,What is the quality ranking of machines in the first quarter?,SELECT quality_rank FROM machine WHERE class LIKE 'Q1%',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64550,What is the average age of technicians in each team?,"SELECT team, AVG(age) FROM technician GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64552,Which technician has the most experience?,"SELECT name, age FROM technician ORDER BY age DESC LIMIT 1","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64555,What is the machine series with the highest average value points?,"SELECT machine_series, AVG(value_points) FROM machine GROUP BY machine_series ORDER BY AVG(value_points) DESC","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64556,What is the most common machine class?,"SELECT class, COUNT(*) FROM machine GROUP BY class ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64557,What is the technician with the most experience's name?,SELECT name FROM technician ORDER BY age DESC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64560,What is the team with the highest average age?,"SELECT team, AVG(age) FROM technician GROUP BY team ORDER BY AVG(age) DESC","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64564,What is the machine with the lowest quality ranking?,SELECT * FROM machine ORDER BY quality_rank ASC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64566,What is the technician with the most repairs?,SELECT name FROM technician t JOIN repair_assignment ra ON t.technician_id = ra.technician_id GROUP BY t.name ORDER BY COUNT(ra.repair_id) DESC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64567,What is the most recent machine in each team?,SELECT * FROM machine WHERE making_year = (SELECT MAX(making_year) FROM machine),"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64568,What is the machine with the highest value points?,SELECT * FROM machine ORDER BY value_points DESC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
64571,List all furniture items,SELECT * FROM furniture,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64574,What is the average price of furniture items by manufacturer?,"SELECT manufacturer.name, AVG(price_in_dollar) AS avg_price FROM furniture_manufacte JOIN manufacturer ON furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id GROUP BY manufacturer.name ORDER BY avg_price","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64575,What are the top 3 manufacturers by number of factories?,"SELECT manufacturer.name, COUNT(*) AS num_factories FROM manufacturer GROUP BY manufacturer.name ORDER BY num_factories DESC LIMIT 3","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64576,What are the top 2 best-selling furniture items by market rate?,SELECT * FROM furniture ORDER BY market_rate DESC LIMIT 2,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64577,What are the top 2 best-selling furniture items by component count?,SELECT * FROM furniture ORDER BY num_of_component DESC LIMIT 2,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64578,What is the total sales of furniture items sold by component count?,"SELECT num_of_component, SUM(market_rate) AS total_sales FROM furniture GROUP BY num_of_component ORDER BY total_sales DESC","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64579,What is the total number of furniture items sold by market rate?,"SELECT market_rate, COUNT(*) AS num_items FROM furniture GROUP BY market_rate ORDER BY num_items DESC","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64580,What is the total number of furniture items sold by manufacturer and price?,"SELECT manufacturer.name, price_in_dollar, COUNT(*) AS num_items FROM furniture_manufacte JOIN manufacturer ON furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id GROUP BY manufacturer.name, price_in_dollar ORDER BY num_items DESC","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64581,What are the top 2 best-selling furniture items by component count and market rate?,SELECT * FROM furniture ORDER BY (num_of_component * market_rate) DESC LIMIT 2,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64582,What are the top 2 best-selling furniture items by manufacturer and price?,"SELECT manufacturer.name, price_in_dollar, COUNT(*) AS num_items FROM furniture_manufacte JOIN manufacturer ON furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id GROUP BY manufacturer.name, price_in_dollar ORDER BY num_items DESC LIMIT 2","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64583,What is the total number of furniture items sold by component count and market rate?,"SELECT num_of_component, market_rate, COUNT(*) AS num_items FROM furniture GROUP BY num_of_component, market_rate ORDER BY num_items DESC","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64584,What are the top 2 best-selling furniture items by market rate and component count?,SELECT * FROM furniture ORDER BY (market_rate + num_of_component) DESC LIMIT 2,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
64587,What is the list of all camera lens names?,SELECT name FROM camera_lens;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64589,What is the list of all mountain names?,SELECT name FROM mountain;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64590,What photos have been taken at tourist attractions?,SELECT * FROM photos WHERE tourist_attraction_id > 0;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64591,What are the top 3 camera lens brands by focal length?,"SELECT brand, AVG(focal_length_mm) AS avg_focal_length FROM camera_lens GROUP BY brand ORDER BY avg_focal_length DESC LIMIT 3;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64592,What is the earliest and latest filename of all photos?,"SELECT MIN(filename) AS earliest_filename, MAX(filename) AS latest_filename FROM photos;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64596,What is the list of all photos taken?,SELECT * FROM photos;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64599,What photos have been taken in the last week?,SELECT * FROM photos WHERE filename LIKE '%2022-02-15%';,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64600,What are the top 3 countries with mountains?,"SELECT country, COUNT(*) AS country_count FROM mountain GROUP BY country ORDER BY country_count DESC LIMIT 3;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64602,What photos have been taken by a specific tourist attraction?,SELECT * FROM photos WHERE tourist_attraction_id = 1;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64603,What are the top 5 tourist attractions by most photos taken?,"SELECT tourist_attraction_id, COUNT(*) AS photo_count FROM photos GROUP BY tourist_attraction_id ORDER BY photo_count DESC LIMIT 5;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64605,What is the earliest photo taken?,SELECT MIN(filename) AS earliest_filename FROM photos;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64606,What are the top 2 countries with the most mountains?,"SELECT country, COUNT(*) AS mountain_count FROM mountain GROUP BY country ORDER BY mountain_count DESC LIMIT 2;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64608,What is the list of all photos with descriptions?,SELECT * FROM photos WHERE description IS NOT NULL;,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64609,What photos have been taken in the last 3 months?,SELECT * FROM photos WHERE filename LIKE '%2022-03-01%';,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64611,What is the average height of mountains in a specific range?,SELECT AVG(height) FROM mountain WHERE range = 'Appalachian';,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64612,What is the average max aperture of camera lenses by brand?,"SELECT brand, AVG(max_aperture) AS avg_max_aperture FROM camera_lens GROUP BY brand;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64613,What are the top 2 tourist attractions with the most photos taken?,"SELECT tourist_attraction_id, COUNT(*) AS photo_count FROM photos GROUP BY tourist_attraction_id ORDER BY photo_count DESC LIMIT 2;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64614,What are the top 3 camera lens brands by max aperture?,"SELECT brand, AVG(max_aperture) AS avg_max_aperture FROM camera_lens GROUP BY brand ORDER BY avg_max_aperture DESC LIMIT 3;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64615,What is the average height of mountains by country and range?,"SELECT country, range, AVG(height) AS avg_height FROM mountain GROUP BY country, range;","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
64617,What is the average age of visitors who have a high level of membership?,SELECT AVG(v.age) AS average_age FROM visitor v WHERE v.level_of_membership = 2;,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64618,What is the total revenue generated by each museum in 2020?,"SELECT m.name, SUM(v.total_spent) AS total_revenue FROM museum m JOIN visit v ON m.museum_id = v.museum_id WHERE m.open_year = '2020' GROUP BY m.name;","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64619,What is the highest average spending per ticket among museums?,"SELECT m.name, AVG(v.total_spent / v.num_of_ticket) AS avg_spending FROM museum m JOIN visit v ON m.museum_id = v.museum_id GROUP BY m.name ORDER BY avg_spending DESC LIMIT 1;","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64620,What is the average age of visitors who have an intermediate level of membership?,SELECT AVG(v.age) AS average_age FROM visitor v WHERE v.level_of_membership = 1;,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64621,What is the total revenue generated by each museum in the year 2018?,"SELECT m.name, SUM(v.total_spent) AS total_revenue FROM museum m JOIN visit v ON m.museum_id = v.museum_id WHERE m.open_year = '2018' GROUP BY m.name;","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64622,What is the average age of visitors who have a low level of membership?,SELECT AVG(v.age) AS average_age FROM visitor v WHERE v.level_of_membership = 0;,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64623,What is the total revenue generated by each museum in the year 2022?,"SELECT m.name, SUM(v.total_spent) AS total_revenue FROM museum m JOIN visit v ON m.museum_id = v.museum_id WHERE m.open_year = '2022' GROUP BY m.name;","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64627,What is the total revenue generated by each museum in the year 2021?,"SELECT m.name, SUM(v.total_spent) AS total_revenue FROM museum m JOIN visit v ON m.museum_id = v.museum_id WHERE m.open_year = '2021' GROUP BY m.name;","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
64637,Who is the youngest journalist?,"SELECT name, age FROM journalist ORDER BY age DESC LIMIT 1","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64639,What is the nationality of the oldest journalist?,"SELECT name, nationality FROM journalist WHERE age = (SELECT MIN(age) FROM journalist)","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64640,What is the nationality of the youngest journalist?,"SELECT name, nationality FROM journalist WHERE age = (SELECT MAX(age) FROM journalist)","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64641,How many journalists are working for each type of event?,"SELECT work_type, COUNT(*) FROM news_report GROUP BY work_type","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64643,When was the first event covered by a journalist?,SELECT event.date FROM event JOIN news_report ON event.event_id = news_report.event_id ORDER BY date ASC LIMIT 1,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64644,When was the last event covered by a journalist?,SELECT event.date FROM event JOIN news_report ON event.event_id = news_report.event_id ORDER BY date DESC LIMIT 1,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64645,How many journalists covered each event?,"SELECT event_id, COUNT(*) FROM news_report GROUP BY event_id","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64648,Who covered the most events?,"SELECT name, COUNT(*) FROM journalist GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64649,Who covered the least events?,"SELECT name, COUNT(*) FROM journalist GROUP BY name ORDER BY COUNT(*) ASC LIMIT 1","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64651,What was the total number of events held by each journalist?,"SELECT name, COUNT(*) FROM journalist JOIN news_report ON journalist.journalist_id = news_report.journalist_id GROUP BY name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64654,What was the majority of events attended?,"SELECT name, COUNT(*) FROM event GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64655,How many journalists are working in each field?,"SELECT work_type, COUNT(DISTINCT journalist_id) FROM news_report GROUP BY work_type","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64656,How many events were held in each region?,"SELECT venue, COUNT(*) FROM event GROUP BY venue","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
64657,What is the average age of conductors from the United States?,SELECT AVG(age) FROM conductor WHERE nationality = 'United States';,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64658,Which orchestra has been around for the longest?,SELECT * FROM orchestra ORDER BY year_of_founded DESC LIMIT 1;,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64659,What is the name of the conductor who has worked with the most bands?,SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id ORDER BY COUNT(*) DESC LIMIT 1);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64660,What is the attendance average for the last 5 shows?,SELECT AVG(attendance) FROM show WHERE show_id IN (SELECT show_id FROM show ORDER BY show_id DESC LIMIT 5);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64662,Which band has performed the most songs?,SELECT bandmate FROM performance GROUP BY bandmate ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64663,What is the birth country of the youngest conductor?,SELECT nationality FROM conductor ORDER BY age ASC LIMIT 1;,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64666,What is the average age of conductors who have worked with more than 5 different bands?,SELECT AVG(age) FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id HAVING COUNT(*) > 5);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64667,How many shows have been held in the last year?,SELECT COUNT(*) FROM show WHERE show_id IN (SELECT show_id FROM show ORDER BY show_id DESC LIMIT 365);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64668,What is the name of the conductor who has conducted the most shows?,SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM show GROUP BY conductor_id ORDER BY COUNT(*) DESC LIMIT 1);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64669,What is the average attendance for the shows in the last 2 years?,SELECT AVG(attendance) FROM show WHERE show_id IN (SELECT show_id FROM show ORDER BY show_id DESC LIMIT 730);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64670,How many songs have been performed by the band with the most songs performed?,SELECT COUNT(*) FROM performance WHERE bandmate IN (SELECT bandmate FROM performance GROUP BY bandmate ORDER BY COUNT(*) DESC LIMIT 1);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64671,What is the attendance average for the top 3 shows by attendance?,SELECT AVG(attendance) FROM show WHERE show_id IN (SELECT show_id FROM show ORDER BY attendance DESC LIMIT 3);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64672,How many orchestras have been founded in the last 20 years?,SELECT COUNT(*) FROM orchestra WHERE year_of_founded >= (SELECT year - 20 FROM (SELECT EXTRACT(YEAR FROM NOW())) t(year));,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64673,What is the name of the oldest record company?,SELECT record_company FROM orchestra ORDER BY year_of_founded ASC LIMIT 1;,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64674,What is the attendance average for the top 5 shows by attendance?,SELECT AVG(attendance) FROM show WHERE show_id IN (SELECT show_id FROM show ORDER BY attendance DESC LIMIT 5);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64675,How many performers have performed on stage?,SELECT COUNT(DISTINCT bandmate) FROM performance;,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64676,What is the name of the youngest conductor?,SELECT name FROM conductor ORDER BY age ASC LIMIT 1;,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64677,How many orchestras have been founded in the last 10 years?,SELECT COUNT(*) FROM orchestra WHERE year_of_founded >= (SELECT year - 10 FROM (SELECT EXTRACT(YEAR FROM NOW())) t(year));,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64678,What is the average attendance for the shows held in the last 5 years?,SELECT AVG(attendance) FROM show WHERE show_id IN (SELECT show_id FROM show ORDER BY show_id DESC LIMIT 1826);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64679,How many conductors have worked with more than 10 different bands?,SELECT COUNT(*) FROM conductor WHERE conductor_id IN (SELECT DISTINCT conductor_id FROM performance GROUP BY conductor_id HAVING COUNT(*) > 10);,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64680,How many orchestras use major record format?,SELECT COUNT(*) FROM orchestra WHERE major_record_format = 'major';,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
64682,What are the total hosts born after 1960?,SELECT COUNT(*) FROM host WHERE EXTRACT(YEAR FROM age::DATE) > 1960,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64683,List all hosts names starting with 'A',SELECT name FROM host WHERE name LIKE 'A%',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64684,Which hosts are between 30-40 years old?,SELECT * FROM host WHERE age::INTEGER BETWEEN 30 AND 40,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64686,List all hosts with nationality 'American'?,SELECT * FROM host WHERE nationality = 'American',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64687,What is the total number of years served by US Senators?,SELECT SUM(year) FROM party WHERE us_senate = 'true',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64688,List all hosts born in the 1980s?,SELECT * FROM host WHERE EXTRACT(YEAR FROM age::DATE) >= 1980 AND EXTRACT(YEAR FROM age::DATE) <= 1989,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64689,What is the average age of hosts?,SELECT AVG(age::INTEGER) FROM host,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64690,Which hosts are not nationals of their place of residence?,SELECT * FROM host WHERE nationality != name,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64692,List all hosts with nationality 'British',SELECT * FROM host WHERE nationality = 'British',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64693,What is the total number of US Senators served?,SELECT COUNT(*) FROM party WHERE us_senate = 'true',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64694,What are the total hosts born in 1960,SELECT * FROM host WHERE EXTRACT(YEAR FROM age::DATE) = 1960,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64695,Which hosts are over 55 years old?,SELECT * FROM host WHERE age::INTEGER > 55,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64696,What is the total number of years served by Comptrollers?,SELECT SUM(year) FROM party WHERE comptroller = 'true',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64697,List all hosts with nationality 'French',SELECT * FROM host WHERE nationality = 'French',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64698,How many parties were formed by party?,"SELECT party, COUNT(*) FROM party GROUP BY party","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64699,What is the total number of years served by Lieutenants,SELECT SUM(year) FROM party WHERE lieutenant_governor = 'true',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64700,What are the total hosts born in 1980,SELECT * FROM host WHERE EXTRACT(YEAR FROM age::DATE) = 1980,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64701,Which hosts are under 30 years old?,SELECT * FROM host WHERE age::INTEGER < 30,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64702,What is the total number of years served by AttorneysGeneral,SELECT SUM(year) FROM party WHERE attorney_general = 'true',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64703,List all hosts starting with the letter 'B',SELECT * FROM host WHERE name LIKE 'B%',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64704,What is the total number of years served by other positions?,SELECT SUM(year) FROM party WHERE comptroller = 'true' OR lieutenant_governor = 'true' OR attorney_general = 'true',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64705,List all hosts with nationality excluding 'American',SELECT * FROM host WHERE nationality != 'American',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64706,What is the total number of years served by hosts?,SELECT SUM(age::INTEGER) FROM host,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64707,How many hosts are non-citizens?,SELECT COUNT(*) FROM host WHERE nationality != name,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64708,Which hosts are exactly 30 years old?,SELECT * FROM host WHERE age::INTEGER = 30,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64710,What is the total number of years served by Governors?,SELECT SUM(year) FROM party WHERE party = 'Governor',"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64711,What are the total hosts born between 1970 and 1979,SELECT * FROM host WHERE EXTRACT(YEAR FROM age::DATE) BETWEEN 1970 AND 1979,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64712,Which hosts are under 40 years old?,SELECT * FROM host WHERE age::INTEGER < 40,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
64714,What are the most frequent level of memberships for members?,"SELECT level_of_membership, COUNT(*) FROM member GROUP BY level_of_membership ORDER BY COUNT(*) DESC;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
64715,What are the most frequent governor positions?,"SELECT governor, COUNT(*) FROM party GROUP BY governor ORDER BY COUNT(*) DESC;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
64718,What are the most frequent lieutenant governor positions?,"SELECT lieutenant_governor, COUNT(*) FROM party GROUP BY lieutenant_governor ORDER BY COUNT(*) DESC;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
64719,What are the top 3 most frequent governor positions?,"SELECT governor, COUNT(*) FROM party GROUP BY governor ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
64720,What are the top 3 most frequent lieutenant governor positions?,"SELECT lieutenant_governor, COUNT(*) FROM party GROUP BY lieutenant_governor ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
64722,What are the most frequent attorney generals?,"SELECT attorney_general, COUNT(*) FROM party GROUP BY attorney_general ORDER BY COUNT(*) DESC;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
64723,What are the total attendance numbers for each performance?,"SELECT m.name, p.songid, SUM(ma.num_of_pieces) as total_attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id JOIN performance p ON ma.performance_id = p.songid GROUP BY m.name, p.songid","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64724,What are the top 3 attendance numbers by member?,"SELECT m.name, SUM(ma.num_of_pieces) as total_attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.name ORDER BY total_attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64725,What is the overall average attendance per performance?,SELECT AVG(ma.num_of_pieces) as avg_attendance FROM member_attendance ma,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64726,What are the top 3 performances by attendance?,"SELECT p.songid, SUM(ma.num_of_pieces) as total_attendance FROM member_attendance ma JOIN performance p ON ma.performance_id = p.songid GROUP BY p.songid ORDER BY total_attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64727,What is the total attendance for all members?,SELECT SUM(ma.num_of_pieces) as total_attendance FROM member_attendance ma,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64728,What are the top 3 membership levels by attendance?,"SELECT m.level_of_membership, SUM(ma.num_of_pieces) as total_attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.level_of_membership ORDER BY total_attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64729,What is the average attendance per level of membership?,"SELECT m.level_of_membership, AVG(ma.num_of_pieces) as avg_attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.level_of_membership","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64730,What are the top 3 members by attendance?,"SELECT m.name, SUM(ma.num_of_pieces) as attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.name ORDER BY attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64731,What are the top 3 performances by attendance without regards to date?,"SELECT p.songid, SUM(ma.num_of_pieces) as attendance FROM member_attendance ma JOIN performance p ON ma.performance_id = p.songid GROUP BY p.songid ORDER BY attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64733,What are the top 3 members by average attendance?,"SELECT m.name, AVG(ma.num_of_pieces) as avg_attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.name ORDER BY avg_attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64735,What are the attendance numbers for each performance and member?,"SELECT m.name, p.songid, SUM(ma.num_of_pieces) as attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id JOIN performance p ON ma.performance_id = p.songid GROUP BY m.name, p.songid","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64737,What are the top 3 member attendance numbers in chronological order?,"SELECT m.name, SUM(ma.num_of_pieces) as attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.name ORDER BY attendance ASC","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64738,What are the top 3 performance attendance numbers in chronological order?,"SELECT p.songid, SUM(ma.num_of_pieces) as attendance FROM member_attendance ma JOIN performance p ON ma.performance_id = p.songid GROUP BY p.songid ORDER BY attendance ASC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64739,What are the average attendance numbers for each level of membership and performance?,"SELECT m.level_of_membership, p.songid, AVG(ma.num_of_pieces) as avg_attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id JOIN performance p ON ma.performance_id = p.songid GROUP BY m.level_of_membership, p.songid","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64740,What are the top 3 attendance numbers for each level of membership and performance?,"SELECT m.level_of_membership, p.songid, SUM(ma.num_of_pieces) as attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id JOIN performance p ON ma.performance_id = p.songid GROUP BY m.level_of_membership, p.songid ORDER BY attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64742,What are the top 3 attendance numbers by level of membership?,"SELECT m.level_of_membership, SUM(ma.num_of_pieces) as attendance FROM member m JOIN member_attendance ma ON m.member_id = ma.member_id GROUP BY m.level_of_membership ORDER BY attendance DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64743,What is the overall average attendance by performance?,"SELECT p.songid, AVG(ma.num_of_pieces) as avg_attendance FROM member_attendance ma JOIN performance p ON ma.performance_id = p.songid GROUP BY p.songid","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
64746,What are the models of chip released in 2020?,SELECT DISTINCT model_name FROM chip_model WHERE launch_year = 2020;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64747,What are the phone models released in 2020?,SELECT hardware_model_name FROM phone WHERE date LIKE '%2020%' GROUP BY hardware_model_name;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64748,Which chip models have Bluetooth?,SELECT DISTINCT model_name FROM chip_model WHERE bluetooth LIKE 'Yes' OR bluetooth IS NOT NULL;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64749,How many chip models have RAM > 4GB?,SELECT COUNT(DISTINCT model_name) FROM chip_model WHERE ram_mib > 4;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64750,What are the accreditation levels of phones released in 2020?,SELECT accreditation_level FROM phone WHERE date LIKE '%2020%' GROUP BY accreditation_level;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64751,Which chip models have Wi-Fi?,SELECT DISTINCT model_name FROM chip_model WHERE wifi LIKE 'Yes' OR wifi IS NOT NULL;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64752,What are the screen modes of phones released in 2020?,SELECT screen_mode FROM phone WHERE date LIKE '%2020%' GROUP BY screen_mode;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64753,How many phone models have screen modes with > 1.5MP resolution?,SELECT COUNT(DISTINCT hardware_model_name) FROM phone WHERE screen_mode LIKE '%> 1.5MP' GROUP BY hardware_model_name;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64754,What are the chip models with RAM > 8GB and ROM > 16GB?,SELECT DISTINCT model_name FROM chip_model WHERE ram_mib > 8 AND rom_mib > 16;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64755,What are the accreditation types of phones released in 2020?,SELECT accreditation_type FROM phone WHERE date LIKE '%2020%' GROUP BY accreditation_type;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64756,How many chip models have ROM > 4GB?,SELECT COUNT(DISTINCT model_name) FROM chip_model WHERE rom_mib > 4;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64757,How many phone models have accreditation type 'Tier 1'?,SELECT COUNT(DISTINCT hardware_model_name) FROM phone WHERE accreditation_type = 'Tier 1';,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64758,How many chip models have RAM > 8GB and ROM > 16GB?,SELECT COUNT(DISTINCT model_name) FROM chip_model WHERE ram_mib > 8 AND rom_mib > 16;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64759,How many phone models have screen modes with > 2MP resolution?,SELECT COUNT(DISTINCT hardware_model_name) FROM phone WHERE screen_mode LIKE '%> 2MP' GROUP BY hardware_model_name;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64760,What are the phone models released in 2020 with accreditation level 'Expert'?,SELECT DISTINCT hardware_model_name FROM phone WHERE date LIKE '%2020%' AND accreditation_level = 'Expert';,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64761,How many phone models have accreditation level 'Basic'?,SELECT COUNT(DISTINCT hardware_model_name) FROM phone WHERE accreditation_level = 'Basic';,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64762,What are the chip models with ram_mib > 16?,SELECT DISTINCT model_name FROM chip_model WHERE ram_mib > 16;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64764,How many chip models have RAM > 8GB?,SELECT COUNT(DISTINCT model_name) FROM chip_model WHERE ram_mib > 8;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64765,What are the chip models with rom_mib > 16?,SELECT DISTINCT model_name FROM chip_model WHERE rom_mib > 16;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64766,How many phone models have accreditation type 'Tier 2'?,SELECT COUNT(DISTINCT hardware_model_name) FROM phone WHERE accreditation_type = 'Tier 2';,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64767,What are the chip models with ram_mib > 12?,SELECT DISTINCT model_name FROM chip_model WHERE ram_mib > 12;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64769,How many chip models have rom_mib > 12?,SELECT COUNT(DISTINCT model_name) FROM chip_model WHERE rom_mib > 12;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
64770,What are the countries where we have the most number of cities?,"SELECT country, COUNT(number_cities) FROM market GROUP BY country ORDER BY COUNT(number_cities) DESC LIMIT 1;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64771,What is the accreditation level of the phone 'Galaxy S22'?,SELECT accreditation_level FROM phone WHERE hardware_model_name = 'Galaxy S22';,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64772,What is the total number of phones in stock in the 'US' market?,SELECT SUM(num_of_stock) FROM phone_market WHERE market_id IN (SELECT market_id FROM market WHERE country = 'US');,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64773,What is the most popular phone model in terms of accreditation level?,"SELECT chip_model, COUNT(*) FROM phone GROUP BY chip_model ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64775,What is the accreditation level of the phone with the most accreditation level?,SELECT MAX(accreditation_level) FROM phone;,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64777,Which phone model has the highest number of screen modes?,"SELECT screen_mode, COUNT(*) FROM phone GROUP BY screen_mode ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64778,What is the most popular phone model?,"SELECT hardware_model_name, COUNT(*) FROM phone GROUP BY hardware_model_name ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64782,Which phone model has the highest accreditation level?,"SELECT chip_model, MAX(accreditation_level) FROM phone GROUP BY chip_model;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64783,What is the most popular accreditation level?,"SELECT accreditation_level, COUNT(*) FROM phone GROUP BY accreditation_level ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64787,Which phone model has the lowest accreditation level?,"SELECT chip_model, MIN(accreditation_level) FROM phone GROUP BY chip_model;","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
64798,Which pilots flew on the earliest flight?,"SELECT name FROM pilot, pilot_record WHERE pilot.pilot_id = pilot_record.pilot_id ORDER BY date ASC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64800,Which pilot flew the most flights?,"SELECT pilot.name, COUNT(pilot_record) AS flight_count FROM pilot JOIN pilot_record ON pilot.pilot_id = pilot_record.pilot_id GROUP BY pilot.name ORDER BY flight_count DESC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64801,On which date did the earliest flight occur?,SELECT date FROM pilot_record ORDER BY date ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64802,What is the total disk area of all commercial aircraft?,SELECT total_disk_area FROM aircraft WHERE aircraft = 'commercial',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64804,What is the total disk area of a specific aircraft?,SELECT total_disk_area FROM aircraft WHERE aircraft = 'specific',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64805,Which pilots are over 50 years old?,SELECT * FROM pilot WHERE age > 50,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64806,Who flew on the most recent flight?,"SELECT name FROM pilot, pilot_record WHERE pilot.pilot_id = pilot_record.pilot_id ORDER BY date DESC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64807,What is the total disk area of all aircraft grouped by disk area?,"SELECT total_disk_area, COUNT(*) FROM aircraft GROUP BY total_disk_area","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64808,On which date did the latest flight occur?,SELECT date FROM pilot_record ORDER BY date DESC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64809,What is the maximum disk loading of a specific aircraft?,SELECT max_disk_loading FROM aircraft WHERE aircraft = 'specific',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64810,What is the name of the oldest pilot over 50 years old?,SELECT name FROM pilot WHERE age > 50 ORDER BY age ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64812,What is the name of the youngest pilot under 30 years old?,SELECT name FROM pilot WHERE age < 30 ORDER BY age ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64813,What is the total disk area of a specific aircraft grouped by disk area?,"SELECT total_disk_area, COUNT(*) FROM aircraft WHERE aircraft = 'specific' GROUP BY total_disk_area","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64816,What is the name of the oldest pilot under 50 years old?,SELECT name FROM pilot WHERE age < 50 ORDER BY age ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64817,What is the total disk area of all aircraft grouped by disk area and count sorted by disk area?,"SELECT total_disk_area, COUNT(*) FROM aircraft GROUP BY total_disk_area ORDER BY total_disk_area","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64819,What is the name of the youngest pilot over 40 years old?,SELECT name FROM pilot WHERE age > 40 ORDER BY age ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64820,Who flew on the earliest flight on a specific date?,"SELECT name FROM pilot, pilot_record WHERE pilot.pilot_id = pilot_record.pilot_id AND date = 'specific_date' ORDER BY date ASC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
64821,What is the average height of people born in the 1990s?,SELECT AVG(height) FROM people WHERE birth_date LIKE '%199%';,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64822,"How many people are between 5'8"" and 6'0"" tall?",SELECT COUNT(*) FROM people WHERE height > 68.0 AND height < 72.0;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64823,What are the top 3 money ranks of poker players?,"SELECT DISTINCT money_rank, COUNT(*) FROM poker_player GROUP BY money_rank ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64824,What is the average earnings of poker players who have made the final table?,SELECT AVG(earnings) FROM poker_player WHERE final_table_made = 1;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64826,"How many people are taller than 6'5""",SELECT COUNT(*) FROM people WHERE height > 77.0;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64827,What are the top 2 earnings of poker players?,"SELECT DISTINCT earnings, COUNT(*) FROM poker_player GROUP BY earnings ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64828,What is the height of the person with the highest weight?,SELECT height FROM people ORDER BY weight DESC LIMIT 1;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64829,How many men are there in the people table?,SELECT COUNT(*) FROM people WHERE name LIKE '%%';,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64830,What are the top 3 best finishes of poker players?,"SELECT DISTINCT best_finish, COUNT(*) FROM poker_player GROUP BY best_finish ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64831,What is the average weight of people who have earned more than $1 million?,SELECT AVG(weight) FROM people WHERE weight > (SELECT AVG(weight) FROM people);,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64834,What are the top 2 earnings of poker players who have made the final table?,"SELECT DISTINCT earnings, COUNT(*) FROM poker_player WHERE final_table_made = 1 GROUP BY earnings ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64835,What is the average height of people born in the 1980s?,SELECT AVG(height) FROM people WHERE birth_date LIKE '%198%';,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64837,"How many people are shorter than 5'4""",SELECT COUNT(*) FROM people WHERE height < 64.0;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64838,What are the top 3 final table appearances of poker players?,"SELECT DISTINCT final_table_made, COUNT(*) FROM poker_player GROUP BY final_table_made ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64839,What is the average weight of people who have not made the final table?,SELECT AVG(weight) FROM people WHERE weight NOT IN (SELECT weight FROM poker_player);,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64840,What are the top 2 money ranks of poker players?,"SELECT DISTINCT money_rank, COUNT(*) FROM poker_player GROUP BY money_rank ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64841,How many people are not from the US?,SELECT COUNT(*) FROM people WHERE birth_place NOT LIKE '%USA%';,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64842,What are the top 2 earnings of poker players who have not made the final table?,"SELECT DISTINCT earnings, COUNT(*) FROM poker_player WHERE final_table_made = 0 GROUP BY earnings ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64843,What are the top 3 money ranks of poker players who have not made the final table?,"SELECT DISTINCT money_rank, COUNT(*) FROM poker_player WHERE final_table_made = 0 GROUP BY money_rank ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64844,What are the top 2 best finishes of poker players who have made the final table?,"SELECT DISTINCT best_finish, COUNT(*) FROM poker_player WHERE final_table_made = 1 GROUP BY best_finish ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64845,What is the average height of people who have not made the final table?,SELECT AVG(height) FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player);,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64846,What are the top 3 earnings of poker players who have made the final table?,"SELECT DISTINCT earnings, COUNT(*) FROM poker_player WHERE final_table_made = 1 GROUP BY earnings ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64847,"What is the average weight of people who are taller than 6'0""",SELECT AVG(weight) FROM people WHERE height > 72.0;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
64851,How many clubs have a gold medal?,SELECT COUNT(*) FROM match_result WHERE gold > 0,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64852,What is the highest score by a club?,SELECT MAX(points) FROM match_result,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64853,What is the weight of the lightest player?,SELECT MIN(weight) FROM player,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64854,How many players have won a bronze medal?,SELECT COUNT(*) FROM match_result WHERE bronze > 0,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64855,What is the tallest player?,SELECT MAX(height) FROM player,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64861,How many clubs have won a silver medal?,SELECT COUNT(*) FROM match_result WHERE small_silver > 0 OR big_silver > 0,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64864,What is the total number of medals won by clubs?,SELECT SUM(gold + big_silver + small_silver + bronze) FROM match_result,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64865,What is the average points of gold medal winners?,SELECT AVG(points) FROM match_result WHERE gold > 0,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64869,Who is the shortest player?,SELECT MIN(height) FROM player,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64870,What is the most common death day of players?,SELECT AVG(death_day) FROM player,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
64871,Which countries have roller coasters?,"SELECT country_name FROM country, roller_coaster WHERE country.country_id = roller_coaster.country_id GROUP BY country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64872,What is the total length of roller coasters in each country?,"SELECT country_name, SUM(length) AS total_length FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64875,What are the top 5 roller coasters in terms of speed?,"SELECT name, speed FROM roller_coaster ORDER BY speed DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64876,What is the total number of roller coasters per country?,"SELECT country_name, COUNT(*) AS total_coasters FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64877,What are the countries with the most roller coasters?,"SELECT country_name, COUNT(*) AS total_coasters FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name ORDER BY total_coasters DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64878,What is the total height of roller coasters in each country?,"SELECT country_name, SUM(height) AS total_height FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64879,What is the total length of roller coasters in each park?,"SELECT park, SUM(length) AS total_length FROM roller_coaster GROUP BY park;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64880,What are the top 5 parks with the most roller coasters?,"SELECT park, COUNT(*) AS total_coasters FROM roller_coaster GROUP BY park ORDER BY total_coasters DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64881,What are the top 5 roller coasters with the highest height?,"SELECT name, height FROM roller_coaster ORDER BY height DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64882,What are the countries with the most roller coasters with the highest height?,"SELECT country_name, COUNT(*) AS total_coasters FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id AND height > (SELECT AVG(height) FROM roller_coaster) GROUP BY country_name ORDER BY total_coasters DESC;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64883,What is the total number of roller coasters with each status?,"SELECT status, COUNT(*) AS total_coasters FROM roller_coaster GROUP BY status;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64884,What are the countries with the most roller coasters with each status?,"SELECT country_name, status, COUNT(*) AS total_coasters FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name, status ORDER BY total_coasters DESC;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64886,What are the top 5 parks with the longest roller coasters?,"SELECT park, length FROM roller_coaster ORDER BY length DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64887,Which roller coasters are the oldest?,"SELECT name, opened FROM roller_coaster ORDER BY opened ASC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64888,What is the average age of roller coasters?,"SELECT AVG(EXTRACT('year' FROM TO_DATE(opened, 'yyyy-mm-dd'))) AS avg_age FROM roller_coaster;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64889,What are the countries with the oldest roller coasters?,"SELECT country_name, COUNT(*) AS oldest_coasters FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name ORDER BY oldest_coasters ASC;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64890,What is the average cost of roller coasters in each country?,"SELECT country_name, AVG(length * 10) AS avg_cost FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64891,What are the top 5 roller coasters with the highest cost?,"SELECT name, length, (length * 10) AS cost FROM roller_coaster ORDER BY cost DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64892,What is the average cost of roller coasters in each park?,"SELECT park, AVG(length * 10) AS avg_cost FROM roller_coaster GROUP BY park;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64893,What are the top 5 parks with the highest cost roller coasters?,"SELECT park, AVG((length * 10)) AS cost FROM roller_coaster GROUP BY park ORDER BY cost DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64894,What are the top 5 roller coasters in each country in terms of length?,"SELECT country_name, name FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id ORDER BY length DESC;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64895,What are the top 5 roller coasters in each country in terms of speed?,"SELECT country_name, name, speed FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id ORDER BY speed DESC;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64896,What is the total cost of roller coasters in each country?,"SELECT country_name, SUM((length * 10)) AS total_cost FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64897,What are the top 5 countries with the highest total cost of roller coasters?,"SELECT country_name, SUM((length * 10)) AS total_cost FROM roller_coaster, country WHERE roller_coaster.country_id = country.country_id GROUP BY country_name ORDER BY total_cost DESC;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
64899,What is the total rental revenue for the year 2020?,SELECT SUM(amount) FROM payment WHERE EXTRACT(YEAR FROM payment_date) = 2020,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64900,What are the top 5 film categories with the most film assignments?,"SELECT c.name, COUNT(*) as film_count FROM film_category fc JOIN film f ON fc.film_id = f.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY film_count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64902,What is the total number of staff members with inventory management responsibilities?,SELECT COUNT(*) FROM staff WHERE staff_id IN (SELECT staff_id FROM inventory),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64903,What is the total number of film categories with film assignments?,SELECT COUNT(*) FROM film_category,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64907,What is the total number of film actors in the database?,SELECT COUNT(*) FROM film_actor,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64909,What is the total number of film categories?,SELECT COUNT(*) FROM category,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64910,What is the top 5 language with the most film assignments?,"SELECT l.name, COUNT(*) as film_count FROM film_category fc JOIN film f ON fc.film_id = f.film_id JOIN category c ON fc.category_id = c.category_id JOIN language l ON c.category_id = l.language_id GROUP BY l.name ORDER BY film_count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
64911,What is the birth month of the most players in the player table?,SELECT birth_month FROM player GROUP BY birth_month ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64912,What is the most frequent league in the school_details table?,SELECT league FROM school_details GROUP BY league ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64914,What is the height of the lightest player in the player table?,SELECT height FROM player ORDER BY height ASC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64915,What is the most common birth country in the player table?,SELECT birth_country FROM player GROUP BY birth_country ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64917,What is the most common nickname in the school_details table?,SELECT nickname FROM school_details GROUP BY nickname ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64919,What is the color of the school with the most colors in the school_details table?,SELECT colors FROM school_details GROUP BY colors ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64920,What is the tallest player in the player table?,SELECT height FROM player ORDER BY height DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64924,What are the top 3 lightest players in the player table?,SELECT * FROM player ORDER BY height ASC LIMIT 3,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64925,What is the most frequent location in the school table?,SELECT location FROM school GROUP BY location ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64926,What are the top 2 most common throws in the player table?,"SELECT throws, COUNT(*) FROM player GROUP BY throws ORDER BY COUNT(*) DESC LIMIT 2","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64927,What is the most common nickname of the lightest player in the school_details table?,SELECT nickname FROM school_details WHERE nickname IN (SELECT nickname FROM school_details GROUP BY nickname ORDER BY COUNT(*) DESC LIMIT 1),"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64936,What is the weight of the heaviest player in the player table?,SELECT weight FROM player ORDER BY weight DESC LIMIT 1,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64941,What are the top 2 most common bats in the player table?,"SELECT bats, COUNT(*) FROM player GROUP BY bats ORDER BY COUNT(*) DESC LIMIT 2","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
64943,How many members are over 50 years old?,SELECT COUNT(*) as total_members FROM (SELECT age FROM member WHERE age > 50) AS seniors;,"
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
64944,What is the total revenue generated from album sales?,"SELECT SUM(invoice_lines.unit_price * invoice_lines.quantity) FROM invoice_lines, invoices WHERE invoices.order_id = invoice_lines.invoice_id","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64945,What is the average price of all albums?,SELECT AVG(tracks.unit_price) FROM tracks,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64946,What is the total revenue generated from media types?,"SELECT SUM(invoice_lines.unit_price * invoice_lines.quantity) FROM invoice_lines, invoices, tracks WHERE invoices.order_id = invoice_lines.invoice_id AND tracks.id = invoice_lines.track_id GROUP BY tracks.media_type_id","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64947,What are the top 3 most popular genres?,"SELECT genres.name, COUNT(tracks.id) FROM tracks, genres WHERE tracks.genre_id = genres.id GROUP BY genres.name ORDER BY COUNT DESC LIMIT 3","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64948,What are the top 3 most popular playlist tracks?,"SELECT tracks.name, COUNT(playlist_tracks.track_id) FROM tracks, playlist_tracks WHERE tracks.id = playlist_tracks.track_id GROUP BY tracks.name ORDER BY COUNT DESC LIMIT 3","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64949,What is the total revenue generated from specific sales channels?,"SELECT SUM(invoice_lines.unit_price * invoice_lines.quantity) FROM invoice_lines, invoices WHERE invoices.order_id = invoice_lines.invoice_id AND invoices.payment_method_code = 'Specific Payment Method'","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64950,Who are the top 5 best-selling tracks?,"SELECT tracks.name, SUM(invoice_lines.quantity) FROM invoice_lines, tracks WHERE tracks.id = invoice_lines.track_id GROUP BY tracks.name ORDER BY SUM DESC LIMIT 5","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64951,What is the total revenue generated from different tracks?,"SELECT SUM(invoice_lines.unit_price * invoice_lines.quantity) FROM invoice_lines, invoices, tracks WHERE invoices.order_id = invoice_lines.invoice_id AND tracks.id = invoice_lines.track_id","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64952,What is the total revenue generated from different albums?,"SELECT SUM(invoice_lines.unit_price * invoice_lines.quantity) FROM invoice_lines, invoices, tracks WHERE invoices.order_id = invoice_lines.invoice_id AND tracks.id = invoice_lines.track_id GROUP BY tracks.album_id","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
64953,What is the list of students in the 5th grade?,SELECT * FROM list WHERE grade = 5;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64957,What are the top 5 classes with the highest number of students?,"SELECT classroom, COUNT(*) FROM list GROUP BY classroom ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64958,What is the list of students in the 8th grade?,SELECT * FROM list WHERE grade = 8;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64959,What is the total number of male teachers?,SELECT COUNT(*) FROM teachers WHERE gender = 'M';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64960,What is the total number of classes in the school?,SELECT COUNT(DISTINCT classroom) FROM list;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64961,What is the list of students with a grade higher than 6?,SELECT * FROM list WHERE grade > 6;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64962,What is the name of the teacher with the most students?,SELECT * FROM teachers ORDER BY (SELECT COUNT(*) FROM list WHERE grade = 5) DESC LIMIT 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64963,What is the percentage of students in each class?,"SELECT classroom, ROUND(COUNT(*)*100.0/(SELECT COUNT(*) FROM list), 2) AS percentage FROM list GROUP BY classroom;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64964,What is the list of teachers in administration?,"SELECT * FROM teachers WHERE first_name IN ('John', 'Michael');","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64965,What is the total number of students in each class with more than 20 students?,"SELECT classroom, COUNT(*) FROM list GROUP BY classroom HAVING COUNT(*) > 20;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64967,What is the highest grade offered in the school?,SELECT MAX(grade) FROM list;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64968,What is the list of students with a grade lower than 4?,SELECT * FROM list WHERE grade < 4;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64969,What is the total number of students in each class with more than 10 students?,"SELECT classroom, COUNT(*) FROM list GROUP BY classroom HAVING COUNT(*) > 10;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64971,What is the list of students in the 1st grade?,SELECT * FROM list WHERE grade = 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64972,What is the total number of female teachers?,SELECT COUNT(*) FROM teachers WHERE gender = 'F';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64973,What is the name of the student in classroom 5?,SELECT * FROM list WHERE classroom = 5;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64975,What is the list of students with a grade average?,"SELECT * FROM list WHERE grade IN (1, 2, 3);","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
64979,What are the top 5 venues with the most events?,"SELECT venue, COUNT(*) AS num_events FROM event GROUP BY venue ORDER BY num_events DESC LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64980,What is the average attendance per event by date?,"SELECT date, AVG(event_attendance) AS avg_attendance FROM event GROUP BY date","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64982,What is the total attendance for each event excluding events held at the colosseum?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event WHERE venue != 'colosseum' GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64983,What are the top 3 events with the highest attendance?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event GROUP BY event.name ORDER BY total_attendance DESC LIMIT 3","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64984,What is the top 5 attendance for each event?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event GROUP BY event.name ORDER BY total_attendance DESC","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64985,What is the attendance for each event by date and venue?,"SELECT date, venue, event_attendance FROM event","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64986,What is the average attendance per event by swimmer?,"SELECT swimmer.name, AVG(event_attendance) AS avg_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64987,What is the top 5 swimmer with the highest attendance?,"SELECT swimmer.name, SUM(event_attendance) AS total_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name ORDER BY total_attendance DESC LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64988,What is the total attendance for each event excluding events held after 2020-12-31?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event WHERE date <= '2020-12-31' GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64989,What are the 5 events with the highest average attendance?,"SELECT event.name, AVG(event_attendance) AS avg_attendance FROM event GROUP BY event.name ORDER BY avg_attendance DESC LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64990,What is the top 5 events with the lowest attendance?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event GROUP BY event.name ORDER BY total_attendance LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64991,What is the average attendance per event by stadium?,"SELECT stadium.name, AVG(event_attendance) AS avg_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64992,What is the top 5 swimmer with the highest average attendance?,"SELECT swimmer.name, AVG(event_attendance) AS avg_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name ORDER BY avg_attendance DESC LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64993,What is the total attendance for each event held at the colosseum?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event WHERE venue = 'colosseum' GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64994,What is the attendance for each event on a specific date?,"SELECT date, event_attendance FROM event WHERE date = '2020-01-01'","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64995,What is the top 5 events with the lowest average attendance?,"SELECT event.name, AVG(event_attendance) AS avg_attendance FROM event GROUP BY event.name ORDER BY avg_attendance LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64996,What is the average attendance per event by date and venue?,"SELECT date, venue, AVG(event_attendance) AS avg_attendance FROM event GROUP BY date, venue","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64998,What is the total attendance for each event held at the stadium named 'Stadium-1'?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event WHERE venue = 'Stadium-1' GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
64999,What is the average attendance per event by swimmer and event?,"SELECT swimmer.name, event.name, AVG(event_attendance) AS avg_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name, event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65000,What is the top 5 swimmer with the lowest average attendance?,"SELECT swimmer.name, AVG(event_attendance) AS avg_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name ORDER BY avg_attendance LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65001,What is the total attendance for each event held at the stadium named 'Stadium-2'?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event WHERE venue = 'Stadium-2' GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65002,What is the average attendance per event by stadium and date?,"SELECT stadium.name, date, AVG(event_attendance) AS avg_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name, date","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65004,What is the average attendance per event by event and swimmer?,"SELECT event.name, swimmer.name, AVG(event_attendance) AS avg_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY event.name, swimmer.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65005,What is the total attendance for each event excluding events held in 2020?,"SELECT event.name, SUM(event_attendance) AS total_attendance FROM event WHERE date >= '2021-01-01' GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65007,What is the average attendance per event by stadium and swimmer?,"SELECT stadium.name, swimmer.name, AVG(event_attendance) AS avg_attendance FROM event JOIN stadium ON event.venue = stadium.name JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY stadium.name, swimmer.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65008,What is the top 5 swimmer with the lowest total attendance?,"SELECT swimmer.name, SUM(event_attendance) AS total_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name ORDER BY total_attendance LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65011,What is the average attendance per event by swimmer and date?,"SELECT swimmer.name, date, AVG(event_attendance) AS avg_attendance FROM event JOIN record ON event.event_id = record.event_id JOIN swimmer ON record.swimmer_id = swimmer.id GROUP BY swimmer.name, date","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
65012,What is the average ticket price for exhibitions in 2020?,SELECT AVG(ticket_price) FROM exhibition WHERE year = 2020,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65013,What is the average attendance for exhibitions in the 2010s?,SELECT AVG(attendance) FROM exhibition_record WHERE date >= '2010-01-01' AND date < '2020-01-01',"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65014,Which exhibitions had more than 100 attendees?,SELECT * FROM exhibition_record WHERE attendance > 100,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65015,What is the most popular exhibition theme?,"SELECT theme, COUNT(*) AS frequency FROM exhibition GROUP BY theme ORDER BY frequency DESC LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65016,What is the average ticket price for exhibitions in the 2010s?,SELECT AVG(ticket_price) FROM exhibition WHERE year >= 2010 AND year < 2020,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65021,What is the most popular exhibition theme in the Americas?,"SELECT theme, COUNT(*) AS frequency FROM exhibition WHERE year >= 2010 AND year < 2020 GROUP BY theme ORDER BY frequency DESC LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65024,What is the total attendance for all exhibitions in the 2010s in the Asia-Pacific region?,SELECT SUM(attendance) FROM exhibition_record WHERE date >= '2010-01-01' AND date < '2020-01-01',"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
65028,What is the most populous city with a train station?,"SELECT city, COUNT(*) as population from station GROUP BY city ORDER BY population DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65030,Which city installed the most train stations?,"SELECT city, COUNT(*) as installed_stations from station GROUP BY city ORDER BY installed_stations DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65032,What are the top 5 cities with the most train stations?,"SELECT city, COUNT(*) as stations from station GROUP BY city ORDER BY stations DESC LIMIT 5;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65033,What dates had a decrease in train station installations?,SELECT * FROM station WHERE installation_date NOT IN (SELECT MIN(installation_date) FROM station);,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65035,What is the number of train stations in each city?,"SELECT city, COUNT(*) as stations from station GROUP BY city ORDER BY stations;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65036,What are the train stations that are located by the ocean?,SELECT * FROM station WHERE lat < 0 OR lat > 0;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65037,What are the train stations with the most docks?,"SELECT name, SUM(dock_count) FROM station GROUP BY name ORDER BY SUM(dock_count) DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65038,What is the date range when train stations were installed?,"SELECT MIN(installation_date), MAX(installation_date) FROM station;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65041,What is the earliest train schedule in the morning?,SELECT MIN(time) FROM train WHERE time LIKE '% AM';,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65042,What are the top 5 train stations with the most remote location?,SELECT * FROM station ORDER BY (lat^2 + long^2) LIMIT 5;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65043,What is the number of train stations in northern hemisphere?,SELECT COUNT(*) FROM station WHERE lat > 0;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
65046,What is the total number of tweets with the word 'hello'?,SELECT COUNT(*) FROM tweets WHERE text ILIKE '%hello%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65047,What is the number of tweets created in January?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(MONTH FROM createdate) = 1,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65048,What is the number of users whose email starts with 'a'?,SELECT COUNT(*) FROM user_profiles WHERE email ILIKE 'a%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65050,What is the number of tweets created on weekends?,"SELECT COUNT(*) FROM tweets WHERE EXTRACT(DAYOFWEEK FROM createdate) IN (1, 7)","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65051,What is the total number of unique tweets?,SELECT COUNT(DISTINCT id) FROM tweets,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65052,What is the number of users whose name is longer than 5 characters?,SELECT COUNT(*) FROM user_profiles WHERE LENGTH(name) > 5,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65053,What is the total number of tweets with more than 100 characters?,SELECT COUNT(*) FROM tweets WHERE LENGTH(text) > 100,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65054,What is the number of users with at least 50 followers?,SELECT COUNT(*) FROM user_profiles WHERE followers >= 50,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65055,What is the total number of tweets created in the last 30 days?,SELECT COUNT(*) FROM tweets WHERE createdate > NOW() - INTERVAL '30 days',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65056,What is the number of users who follow at most 10 people?,SELECT COUNT(*) FROM user_profiles WHERE followers <= 10,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65058,What is the number of tweets created in the last 7 days?,SELECT COUNT(*) FROM tweets WHERE createdate > NOW() - INTERVAL '7 days',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65059,What is the total number of users who have at least 1 tweet?,SELECT COUNT(*) FROM user_profiles JOIN tweets ON user_profiles.uid = tweets.uid GROUP BY user_profiles.uid HAVING COUNT(tweets.id) > 0,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65060,What is the number of tweets with the word 'hello' and 'world'?,SELECT COUNT(*) FROM tweets WHERE text ILIKE '%hello%' AND text ILIKE '%world%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65061,What is the total number of unique tweets with the word 'hello'?,SELECT COUNT(DISTINCT id) FROM tweets WHERE text ILIKE '%hello%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65062,What is the number of users whose name starts with 'a'?,SELECT COUNT(*) FROM user_profiles WHERE name ILIKE 'a%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65063,"What is the total number of tweets created before January 1, 2022?",SELECT COUNT(*) FROM tweets WHERE createdate < '2022-01-01',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65065,What is the total number of unique tweets created on weekends?,"SELECT COUNT(DISTINCT id) FROM tweets WHERE EXTRACT(DAYOFWEEK FROM createdate) IN (1, 7)","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65066,"What is the number of tweets created on January 1, 2022?",SELECT COUNT(*) FROM tweets WHERE createdate = '2022-01-01',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65067,What is the total number of users who have at least 5 followers?,SELECT COUNT(*) FROM user_profiles WHERE followers >= 5,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65068,"What is the number of tweets created before 12:00 PM on January 1, 2022?",SELECT COUNT(*) FROM tweets WHERE createdate < '2022-01-01 12:00:00',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65069,What is the total number of unique tweets with at least 100 characters?,SELECT COUNT(DISTINCT id) FROM tweets WHERE LENGTH(text) > 100,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65070,What is the number of users who have at most 50 followers?,SELECT COUNT(*) FROM user_profiles WHERE followers <= 50,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65071,What is the total number of unique tweets created in January?,SELECT COUNT(DISTINCT id) FROM tweets WHERE EXTRACT(MONTH FROM createdate) = 1,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65072,What is the number of users who follow at least 500 people?,SELECT COUNT(*) FROM user_profiles WHERE followers > 500,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65073,"What is the total number of tweets created on January 1, 2022 between 12:00 PM and 1:00 PM?",SELECT COUNT(*) FROM tweets WHERE createdate BETWEEN '2022-01-01 12:00:00' AND '2022-01-01 13:00:00',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65074,What is the number of tweets created by users who have at least 100 followers?,SELECT COUNT(*) FROM tweets JOIN user_profiles ON tweets.uid = user_profiles.uid WHERE followers >= 100,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
65077,"What is the total number of matches played by universities with more than 20,000 enrollment?","SELECT COUNT(*) FROM basketball_match, university WHERE basketball_match.school_id = university.school_id AND university.enrollment > 20000;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
65078,What is the total number of matches played by universities with a founding year before 1800?,"SELECT COUNT(*) FROM basketball_match, university WHERE basketball_match.school_id = university.school_id AND university.founded < 1800;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
65079,What is the total number of matches played by universities with a sport nickname?,"SELECT COUNT(*) FROM basketball_match, university WHERE basketball_match.school_id = university.school_id AND nickname IS NOT NULL;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
65080,What is the total number of matches played by universities with a sport nickname and from the Big 10 conference?,"SELECT COUNT(*) FROM basketball_match, university WHERE basketball_match.school_id = university.school_id AND nickname IS NOT NULL AND primary_conference = 'Big 10';","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
65081,"What is the total number of matches played by universities with more than 10,000 enrollment and from the ACC conference?","SELECT COUNT(*) FROM basketball_match, university WHERE basketball_match.school_id = university.school_id AND university.enrollment > 10000 AND primary_conference = 'ACC';","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
65082,What is the total number of matches played by universities with a founding year after 1800?,"SELECT COUNT(*) FROM basketball_match, university WHERE basketball_match.school_id = university.school_id AND university.founded > 1800;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
65083,How many churches were opened between 1950 and 2000?,SELECT COUNT(DISTINCT church_id) FROM church WHERE open_date BETWEEN 1950 AND 2000,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65085,What is the average height of women?,SELECT AVG(height) FROM people WHERE birth_date >= '1970-01-01' GROUP BY height,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65086,What is the name of the person who is the shortest?,SELECT name FROM people WHERE height = (SELECT MIN(height) FROM people),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65087,What is the average weight of people with a height of less than 170 cm?,SELECT AVG(weight) FROM people WHERE height < 1.70,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65088,What is the average weight of people with a height of greater than 183 cm?,SELECT AVG(weight) FROM people WHERE height > 1.83,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65089,What is the name of the person who is an average height?,SELECT name FROM people WHERE height = (SELECT AVG(height) FROM people),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65090,What is the average weight of people with a height of less than 155 cm?,SELECT AVG(weight) FROM people WHERE height < 155.00,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
65091,What is the regional population of cities in Asia?,"SELECT city, SUM(regional_population) FROM city WHERE hanzi LIKE '%A%AS%' GROUP BY city;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65092,What are the top 5 countries by total population?,"SELECT country_name, SUM(regional_population) as total_pop FROM city JOIN country ON city.city_id = country.country_id GROUP BY country_name ORDER BY total_pop DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65093,What is the average GDP of cities in Europe?,SELECT AVG(gdp) FROM city WHERE hanzi LIKE '%E%ROPE%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65094,What is the average percentage of languages with more than 50% speakers?,SELECT AVG(percentage) FROM countrylanguage WHERE percentage > 50;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65095,What is the top 5 cities by regional population in North America?,"SELECT city, SUM(regional_population) as total_pop FROM city WHERE hanzi LIKE '%NOR%AM%' GROUP BY city ORDER BY total_pop DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65096,What is the total regional population of cities in Africa?,SELECT SUM(regional_population) FROM city WHERE hanzi LIKE '%AFR%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65097,What is the average GDP of cities in South America?,SELECT AVG(gdp) FROM city WHERE hanzi LIKE '%SOA%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65098,What are the top 3 countries with the highest GDP?,"SELECT country_name, SUM(gdp) as gdp FROM city JOIN country ON city.city_id = country.country_id GROUP BY country_name ORDER BY gdp DESC LIMIT 3;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65099,What is the average GDP of cities in Australia?,SELECT AVG(gdp) FROM city WHERE hanzi LIKE '%A%STRA%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65100,What are the top 5 languages by the percentage of speakers?,"SELECT language, AVG(percentage) as average_percentage FROM countrylanguage GROUP BY language ORDER BY average_percentage DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65101,What is the total regional population of cities in Oceania?,SELECT SUM(regional_population) FROM city WHERE hanzi LIKE '%OCE%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65102,What are the top 3 languages with the highest percentage of speakers?,"SELECT language, AVG(percentage) as average_percentage FROM countrylanguage GROUP BY language ORDER BY average_percentage DESC LIMIT 3;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65103,What is the average percentage of languages with less than 10% speakers?,SELECT AVG(percentage) FROM countrylanguage WHERE percentage < 10;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65104,What is the top 5 cities by regional population in Asia?,"SELECT city, SUM(regional_population) as total_pop FROM city WHERE hanzi LIKE '%A%AS%' GROUP BY city ORDER BY total_pop DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65106,What is the total number of cities in each country?,"SELECT country_name, COUNT(*) as num_cities FROM city JOIN country ON city.city_id = country.country_id GROUP BY country_name;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65109,What is the average GDP of cities in Asia?,SELECT AVG(gdp) FROM city WHERE hanzi LIKE '%A%AS%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65110,What is the average percentage of languages with more than 20% speakers?,SELECT AVG(percentage) FROM countrylanguage WHERE percentage > 20;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65111,What is the average GDP of cities in Oceania?,SELECT AVG(gdp) FROM city WHERE hanzi LIKE '%OCE%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65112,What is the total regional population of cities in Europe?,SELECT SUM(regional_population) FROM city WHERE hanzi LIKE '%E%ROPE%';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
65113,What is the earliest tourney_date?,SELECT MIN(tourney_date) FROM matches;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65114,What is the latest tourney_date?,SELECT MAX(tourney_date) FROM matches;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65115,How many matches were played in 2015?,SELECT COUNT(*) FROM matches WHERE year = 2015;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65117,What is the number of winners who are left-handed?,SELECT COUNT(*) FROM matches WHERE winner_hand = 'L';,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65118,What is the ranking of the winner at the start of the season?,"SELECT ranking, ranking_date FROM rankings WHERE player_id = (SELECT winner_id FROM matches);","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65119,What is the number of players who are left-handed?,SELECT COUNT(*) FROM players WHERE hand = 'L';,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65120,What is the average height of the winners?,SELECT AVG(winner_ht) FROM matches;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65121,What is the ranking of winners over the course of the season?,SELECT ranking FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking_date;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65122,What is the ranking of winners over the course of the season with varying tournament rankings?,"SELECT ranking_date, ranking FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking_date;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65123,What is the ranking of winners at the end of the previous season?,SELECT ranking FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking_date DESC LIMIT 1;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65124,What is the ranking of winners in ascending order?,SELECT ranking FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65125,What is the ranking of winners in descending order?,SELECT ranking FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking DESC;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65126,What is the ranking points of winners in ascending order?,SELECT ranking_points FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking_points;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65127,What is the ranking points of winners in descending order?,SELECT ranking_points FROM rankings WHERE player_id = (SELECT winner_id FROM matches) ORDER BY ranking_points DESC;,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65128,What is the distribution of winners by surface type?,"SELECT surface, COUNT(*) FROM matches GROUP BY surface;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65129,What is the distribution of winners by year and tourney name?,"SELECT year, tourney_name, COUNT(*) FROM matches GROUP BY year, tourney_name;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65130,What is the distribution of winners by tourney level?,"SELECT tourney_level, COUNT(*) FROM matches GROUP BY tourney_level;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65131,What is the distribution of winners by best_of?,"SELECT best_of, COUNT(*) FROM matches GROUP BY best_of;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65132,What is the distribution of losers by draw_size?,"SELECT draw_size, COUNT(*) FROM matches WHERE loser_age IS NOT NULL GROUP BY draw_size;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65133,What is the distribution of losers by tourney_level?,"SELECT tourney_level, COUNT(*) FROM matches WHERE loser_age IS NOT NULL GROUP BY tourney_level;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65134,What is the distribution of losers by tourney_name?,"SELECT tourney_name, COUNT(*) FROM matches WHERE loser_age IS NOT NULL GROUP BY tourney_name;","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65135,What is the distribution of losers by tourney_date?,"SELECT DATE_TRUNC('month', tourney_date), COUNT(*) FROM matches WHERE loser_age IS NOT NULL GROUP BY DATE_TRUNC('month', tourney_date);","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
65136,Which author has written the most publications?,"SELECT author.name, COUNT(*) AS count FROM writes JOIN author ON writes.aid = author.aid GROUP BY author.name ORDER BY COUNT DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65137,What was the most cited publication in the journal?,"SELECT publication.title, COUNT(cited) AS citations FROM publication JOIN cite ON publication.pid = cite.cited GROUP BY publication.title ORDER BY citations DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65138,Which conference had the most organizers?,"SELECT conference.name, COUNT(DISTINCT domain_conference.cid) AS count FROM domain_conference JOIN conference ON domain_conference.cid = conference.cid GROUP BY conference.name ORDER BY COUNT DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65139,What was the most common keyword in publications?,"SELECT keyword.keyword, COUNT(*) AS count FROM publication_keyword JOIN keyword ON publication_keyword.kid = keyword.kid GROUP BY keyword.keyword ORDER BY COUNT DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65140,Which publication had the most authors?,"SELECT publication.title, COUNT(DISTINCT writes.pid) AS authors FROM writes JOIN publication ON writes.pid = publication.pid GROUP BY publication.title ORDER BY authors DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65143,Which publication had the most citations?,"SELECT publication.title, COUNT(*) AS citations FROM publication JOIN cite ON publication.pid = cite.cited GROUP BY publication.title ORDER BY citations DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65145,Which author wrote the most publications in a journal?,"SELECT author.name, COUNT(*) AS count FROM writes JOIN author ON writes.aid = author.aid JOIN publication ON writes.pid = publication.pid GROUP BY author.name ORDER BY COUNT DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65148,What was the most common journal?,"SELECT journal.name, COUNT(*) AS count FROM publication JOIN journal ON publication.jid = journal.jid GROUP BY journal.name ORDER BY COUNT DESC LIMIT 1","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
65149,Which architect designed the most bridges?,SELECT name FROM architect GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65150,Which mill is the oldest?,"SELECT name, built_year FROM mill ORDER BY built_year ASC LIMIT 1;","
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65151,What mill was built in the 18th century?,SELECT name FROM mill WHERE built_year BETWEEN 1700 AND 1800;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65152,What is the shortest bridge?,SELECT * FROM bridge ORDER BY length_feet ASC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65153,What is the longest bridge?,SELECT * FROM bridge ORDER BY length_feet DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65155,What architect designed the most mills?,SELECT name FROM mill GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65156,Which mill is the newest?,"SELECT name, built_year FROM mill ORDER BY built_year DESC LIMIT 1;","
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65159,What mill was built in the 20th century?,SELECT name FROM mill WHERE built_year BETWEEN 1900 AND 2000;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
65160,What are the battles took place in April 1173?,SELECT * FROM battle WHERE date = 'April 1173';,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65161,Who are the Bulgarian commanders?,SELECT DISTINCT bulgarian_commander FROM battle;,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65162,How many battles took place between 1150 and 1180?,SELECT COUNT(*) FROM battle WHERE date BETWEEN '1150-01-01' AND '1180-12-31';,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65163,What are the ships that took part in the battle?,SELECT ship.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle;,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65165,What are the tonnages of the ships that took part in the battle?,SELECT ship.tonnage FROM battle JOIN ship ON battle.id = ship.lost_in_battle;,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65166,What were the causes of deaths in each battle?,"SELECT note, COUNT(*) AS count FROM death GROUP BY note;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65168,How many battles took place in 1160?,SELECT COUNT(*) FROM battle WHERE date = '1160';,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65169,Who were the Latin commanders?,SELECT DISTINCT latin_commander FROM battle;,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65170,What were the locations where the battles took place?,"SELECT location, COUNT(*) AS count FROM ship GROUP BY location;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65171,What were the dispositions of the ships after the battles?,"SELECT disposition_of_ship, COUNT(*) AS count FROM ship GROUP BY disposition_of_ship;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65172,What were the commanders involved in each battle?,"SELECT bulgarian_commander, latin_commander, COUNT(*) AS count FROM battle GROUP BY bulgarian_commander, latin_commander;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65173,How many battles took place during the Crusades?,SELECT COUNT(*) FROM battle WHERE date BETWEEN '1095-11-27' AND '1291-05-02';,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65174,What were the results of the battles during the Crusades?,SELECT result FROM battle WHERE date BETWEEN '1095-11-27' AND '1291-05-02';,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65177,What were the commanders involved in the battles during the Crusades?,"SELECT bulgarian_commander, latin_commander, COUNT(*) AS count FROM battle WHERE date BETWEEN '1095-11-27' AND '1291-05-02' GROUP BY bulgarian_commander, latin_commander;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
65180,List all people born in 1990.,SELECT * FROM people WHERE birth_date LIKE '%1990%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65181,What is the sum of all clean and jerk efforts by people from USA?,SELECT SUM(clean_jerk) FROM body_builder WHERE people_id IN (SELECT people_id FROM people WHERE birth_place = 'USA'),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65183,List all people born in a year greater than 1990.,"SELECT * FROM people WHERE CAST(REPLACE(birth_date, '-', '') AS INTEGER) > 1990","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65184,What is the sum of all clean and jerk efforts by lifters with height greater than 185cm?,SELECT SUM(clean_jerk) FROM body_builder WHERE people_id IN (SELECT people_id FROM people WHERE height > 185),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65187,What is the sum of all snatch efforts by people born in 1990?,SELECT SUM(snatch) FROM body_builder WHERE people_id IN (SELECT people_id FROM people WHERE birth_date = '1990-01-01'),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65189,List all people born in the year 2000.,SELECT * FROM people WHERE birth_date = '2000-01-01',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65190,What is the sum of all total efforts by people from Asia?,SELECT SUM(total) FROM body_builder WHERE people_id IN (SELECT people_id FROM people WHERE birth_place LIKE '%Asia%' OR birth_place IS NULL),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65191,What is the average weight of people with height greater than 175cm and born in 1995?,SELECT AVG(weight) FROM people WHERE height > 175 AND people_id IN (SELECT people_id FROM people WHERE birth_date = '1995-01-01'),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65192,List all people with weight greater than 75kg and born in the year 1990.,SELECT * FROM people WHERE weight > 75 AND people_id IN (SELECT people_id FROM people WHERE birth_date = '1990-01-01'),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65193,What is the sum of all snatch efforts by lifters with height greater than 180cm?,SELECT SUM(snatch) FROM body_builder WHERE people_id IN (SELECT people_id FROM people WHERE height > 180),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65194,What is the average height of people with weight greater than 75kg?,SELECT AVG(height) FROM people WHERE weight > 75,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65196,What is the average weight of people with height greater than 185cm and born in 1995?,SELECT AVG(weight) FROM people WHERE height > 185 AND people_id IN (SELECT people_id FROM people WHERE birth_date = '1995-01-01'),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65197,What is the sum of all clean and jerk efforts by people from Europe?,SELECT SUM(clean_jerk) FROM body_builder WHERE people_id IN (SELECT people_id FROM people WHERE birth_place LIKE '%Europe%' OR birth_place IS NULL),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65198,List all people with weight greater than 80kg and born in the year 1990.,SELECT * FROM people WHERE weight > 80 AND people_id IN (SELECT people_id FROM people WHERE birth_date = '1990-01-01'),"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65199,What is the total number of books published in each year?,"SELECT year, COUNT(*) as total_books FROM publication GROUP BY year ORDER BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65200,What are the top 5 writers with the most published books?,"SELECT writer, COUNT(*) as book_count FROM book GROUP BY writer ORDER BY book_count DESC LIMIT 5","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65201,What is the average number of issues for a book?,SELECT AVG(issues) as average_issues FROM book,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65202,What percentage of publications have more than 100 citations?,SELECT COUNT(*) as portion_fromatted_publications FROM publication WHERE citation_num > 100,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65203,What is the total number of publications made in each decade?,"SELECT FLOOR(year/10)*10 as decade, COUNT(*) as total_publications FROM publication GROUP BY decade ORDER BY decade","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65204,What is the most common citation type?,"SELECT cid, COUNT(*) as citation_count FROM publication GROUP BY cid ORDER BY citation_count DESC LIMIT 1","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65205,Which book has the highest number of issues?,"SELECT title, MAX(issues) as highest_issues FROM book GROUP BY title ORDER BY highest_issues DESC LIMIT 1","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65206,What is the total number of publications in each year of the 21st century?,"SELECT year, COUNT(*) as total_publications FROM publication WHERE year BETWEEN 2000 AND 2020 GROUP BY year ORDER BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65207,What percentage of books have more than 50 issues?,SELECT COUNT(*) as portion_fromatted_books FROM book WHERE issues > 50,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65208,"What is the total number of books in each literary genre (sci-fi, fantasy, romance)?","SELECT 'sci-fi' as genre, COUNT(*) as total_books FROM book WHERE writer LIKE '%sci-fi%' GROUP BY genre UNION SELECT 'fantasy' as genre, COUNT(*) as total_books FROM book WHERE writer LIKE '%fantasy%' GROUP BY genre UNION SELECT 'romance' as genre, COUNT(*) as total_books FROM book WHERE writer LIKE '%romance%' GROUP BY genre","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65209,What is the most published decade?,"SELECT FLOOR(year/10)*10 as decade, COUNT(*) as total_publications FROM publication GROUP BY decade ORDER BY total_publications DESC LIMIT 1","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65210,What is the total number of publications in each year since 2010?,"SELECT year, COUNT(*) as total_publications FROM publication WHERE year BETWEEN 2010 AND 2020 GROUP BY year ORDER BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65211,What percentage of publications have between 50 and 100 citations?,SELECT COUNT(*) as portion_fromatted_publications FROM publication WHERE citation_num BETWEEN 50 AND 100,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65212,What is the total number of books written by each author?,"SELECT writer, COUNT(*) as book_count FROM book GROUP BY writer ORDER BY book_count DESC","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65213,What is the average number of years published?,SELECT AVG(year) as average_years FROM publication,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65214,Which publication has the most citations?,"SELECT title, MAX(citation_num) as highest_citations FROM publication GROUP BY title ORDER BY highest_citations DESC LIMIT 1","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65215,What is the total number of publications in each year since 1980?,"SELECT year, COUNT(*) as total_publications FROM publication WHERE year BETWEEN 1980 AND 2020 GROUP BY year ORDER BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65216,What is the total number of books in each publication?,"SELECT book.title as book_title, book.book_id as book_id FROM book INNER JOIN publication ON book.writer = publication.title WHERE publication.title = 'The New Book'","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65217,What percentage of books have more than 20 issues?,SELECT COUNT(*) as portion_fromatted_books FROM book WHERE issues > 20,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65218,What is the most common book genre?,"SELECT writer, COUNT(*) as book_count FROM book GROUP BY writer ORDER BY book_count DESC LIMIT 1","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65219,Which publication has the highest citation number?,"SELECT title, MAX(citation_num) as highest_citation FROM publication GROUP BY title ORDER BY highest_citation DESC LIMIT 1","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65220,What is the total number of publications in each year since 1990?,"SELECT year, COUNT(*) as total_publications FROM publication WHERE year BETWEEN 1990 AND 2020 GROUP BY year ORDER BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65222,What is the total number of publications in each decade since 1980?,"SELECT FLOOR(year/10)*10 as decade, COUNT(*) as total_publications FROM publication WHERE year BETWEEN 1980 AND 2020 GROUP BY decade ORDER BY decade","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65224,What is the total number of books published in each year since 1980?,"SELECT year, COUNT(*) as total_books FROM publication WHERE year BETWEEN 1980 AND 2020 GROUP BY year ORDER BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65225,What is the average number of citations?,SELECT AVG(citation_num) as average_citations FROM publication,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65228,What percentage of publications have more than 10 citations?,SELECT COUNT(*) as portion_fromatted_publications FROM publication WHERE citation_num > 10,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
65229,What is the average weight of people who supported a candidate?,SELECT AVG(weight) FROM people WHERE people_id IN (SELECT people_id FROM candidate WHERE support_rate > 0),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65230,"List people who are over 5'6"", ordered by height",SELECT * FROM people WHERE height > 5.6 ORDER BY height,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65231,Which candidates did people of average weight vote for?,SELECT * FROM candidate WHERE people_id IN (SELECT people_id FROM people WHERE weight = (SELECT AVG(weight) FROM people)),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65233,What is the average height of candidates who were born before 1990?,SELECT AVG(height) FROM people WHERE birth_date < '1990-01-01',"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65234,"What is the percentage of people who are 5'6"" or taller among those who voted for a candidate?",SELECT (SUM(CASE WHEN height > 5.6 THEN 1 ELSE 0 END) / COUNT(*) * 100) FROM people WHERE people_id IN (SELECT people_id FROM candidate WHERE support_rate > 0),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65235,"What is the percentage of people who are under 5'6"" among those who voted for a candidate?",SELECT (SUM(CASE WHEN height <= 5.6 THEN 1 ELSE 0 END) / COUNT(*) * 100) FROM people WHERE people_id IN (SELECT people_id FROM candidate WHERE support_rate > 0),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65236,What is the average height of people who were born before 1950?,SELECT AVG(height) FROM people WHERE birth_date < '1950-01-01',"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65237,What is the average height of candidates who are people of average height?,SELECT AVG(height) FROM people WHERE weight = (SELECT AVG(weight) FROM people),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65238,"What is the average consider rate of people who are 5'6"" or taller?",SELECT AVG(consider_rate) FROM candidate WHERE people_id IN (SELECT people_id FROM people WHERE height > 5.6),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65240,"What is the average height of people who voted for a candidate and are 5'6"" or taller?",SELECT AVG(height) FROM people WHERE people_id IN (SELECT people_id FROM candidate WHERE support_rate > 0) AND height > 5.6,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65241,"What is the average consider rate of people who are under 5'6""?",SELECT AVG(consider_rate) FROM candidate WHERE people_id IN (SELECT people_id FROM people WHERE height <= 5.6),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65242,What is the total number of showtimes per day per cinema?,"SELECT s.cinema_id, s.date, SUM(s.show_times_per_day) AS total_show_times_per_day FROM schedule s GROUP BY s.cinema_id, s.date","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65243,What are the top 5 cinemas by total showtimes from Monday to Friday?,"SELECT c.cinema_id, SUM(s.show_times_per_day) AS total_show_times FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id WHERE s.date >= '2022-01-03' AND s.date <= '2022-01-07' GROUP BY c.cinema_id ORDER BY total_show_times DESC LIMIT 5","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65244,What is the earliest showtime per day for each film?,"SELECT f.film_id, f.title, s.date, MIN(s.date) AS earliest_start_time FROM schedule s JOIN film f ON s.film_id = f.film_id GROUP BY f.film_id, f.title, s.date","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65245,What is the cinema with the highest capacity that has shown the most films?,"SELECT c.cinema_id, c.capacity, COUNT(s.film_id) AS num_films_shown FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id, c.capacity ORDER BY num_films_shown DESC","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65246,What is the total revenue per day per cinema?,"SELECT s.cinema_id, s.date, SUM(s.price * s.show_times_per_day) AS total_revenue FROM schedule s GROUP BY s.cinema_id, s.date","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65247,What are the top 3 films by total showtimes from Monday to Thursday?,"SELECT f.film_id, f.title, SUM(s.show_times_per_day) AS total_show_times FROM schedule s JOIN film f ON s.film_id = f.film_id WHERE s.date >= '2022-01-03' AND s.date <= '2022-01-07' GROUP BY f.film_id, f.title ORDER BY total_show_times DESC LIMIT 3","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65248,What is the cinema with the highest total revenue?,"SELECT c.cinema_id, SUM(s.price * s.show_times_per_day) AS total_revenue FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id ORDER BY total_revenue DESC","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65249,What is the average price per showtime per film?,SELECT AVG(s.price) AS avg_price FROM schedule s GROUP BY s.film_id,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65250,What is the earliest film title shown per day for each cinema?,"SELECT c.cinema_id, c.name, s.date, MIN(f.title) AS earliest_film_title FROM schedule s JOIN film f ON s.film_id = f.film_id JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id, c.name, s.date","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65251,What are the top 5 films by total showtimes?,"SELECT f.film_id, f.title, SUM(s.show_times_per_day) AS total_show_times FROM schedule s JOIN film f ON s.film_id = f.film_id GROUP BY f.film_id, f.title ORDER BY total_show_times DESC LIMIT 5","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65252,What is the total revenue per film?,"SELECT f.film_id, f.title, SUM(s.price * s.show_times_per_day) AS total_revenue FROM schedule s JOIN film f ON s.film_id = f.film_id GROUP BY f.film_id, f.title","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65253,What is the cinema with the highest average price per showtime?,"SELECT c.cinema_id, AVG(s.price) AS avg_price FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id ORDER BY avg_price DESC","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65254,What are the top 3 cinemas by total showtimes from Friday to Sunday?,"SELECT c.cinema_id, SUM(s.show_times_per_day) AS total_show_times FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id WHERE s.date >= '2022-01-08' GROUP BY c.cinema_id ORDER BY total_show_times DESC LIMIT 3","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65255,What is the total number of films shown per cinema?,"SELECT c.cinema_id, COUNT(s.film_id) AS num_films_shown FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65257,What are the top 5 films by average price per showtime?,"SELECT f.film_id, f.title, AVG(s.price) AS avg_price FROM schedule s JOIN film f ON s.film_id = f.film_id GROUP BY f.film_id, f.title ORDER BY avg_price DESC LIMIT 5","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65258,What is the highest total revenue per day per cinema?,"SELECT s.cinema_id, s.date, SUM(s.price * s.show_times_per_day) AS total_revenue FROM schedule s GROUP BY s.cinema_id, s.date ORDER BY total_revenue DESC","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65259,What are the top 5 cinemas by average price per showtime?,"SELECT c.cinema_id, AVG(s.price) AS avg_price FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id ORDER BY avg_price DESC LIMIT 5","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65261,What are the top 3 films by average price per showtime?,"SELECT f.film_id, f.title, AVG(s.price) AS avg_price FROM schedule s JOIN film f ON s.film_id = f.film_id GROUP BY f.film_id, f.title ORDER BY avg_price DESC LIMIT 3","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65262,What is the lowest capacity cinema that has shown the most films?,"SELECT c.cinema_id, c.capacity, COUNT(s.film_id) AS num_films_shown FROM schedule s JOIN cinema c ON s.cinema_id = c.cinema_id GROUP BY c.cinema_id, c.capacity ORDER BY num_films_shown DESC LIMIT 1","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65265,What is the cinema with the highest total revenue from Monday to Friday?,"SELECT s.cinema_id, SUM(s.price * s.show_times_per_day) AS total_revenue FROM schedule s WHERE s.date >= '2022-01-03' AND s.date <= '2022-01-07' GROUP BY s.cinema_id ORDER BY total_revenue DESC","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
65267,What is the temperature in July in a city with a population of over 1 million?,SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE regional_population > 1000000) AND jul IS NOT NULL,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65269,What is the average January temperature in cities with a GDP of over 10 billion?,SELECT AVG(jan) FROM temperature t JOIN city c ON t.city_id = c.city_id WHERE c.gdp > 10000000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65270,What is the date of the match held in the city of Beijing?,SELECT date FROM match WHERE location = 'Beijing',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65271,What is the average temperature in cities where jul > 25?,SELECT AVG(jul) FROM temperature WHERE jul > 25,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65272,What is the temperature in cities with a GDP of over 10 billion?,SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE gdp > 10000000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65273,What is the date of the match held in the city of Shanghai?,SELECT date FROM match WHERE location = 'Shanghai',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65274,What is the 5th highest GDP city?,SELECT * FROM city ORDER BY gdp DESC LIMIT 5 OFFSET 4,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65275,What is the average July temperature in cities with a population of over 2 million?,SELECT AVG(jul) FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE regional_population > 2000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65276,"What is the average temperature in cities with a population of less than 100,000?",SELECT AVG(jul) FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE regional_population < 100000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65278,What is the temperature in cities with a GDP of over 5 billion?,SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE gdp > 5000000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65279,What is the 10th highest GDP city?,SELECT * FROM city ORDER BY gdp DESC LIMIT 10 OFFSET 9,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65280,What is the average temperature in cities with a population of over 1 million?,SELECT AVG(jul) FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE regional_population > 1000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65281,"What is the temperature in cities with a population of over 500,000?",SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE regional_population > 500000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65282,What is the 15th highest GDP city?,SELECT * FROM city ORDER BY gdp DESC LIMIT 15 OFFSET 14,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65283,What is the temperature in cities with a GDP of over 10 billion and a population of over 2 million?,SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE gdp > 10000000000 AND regional_population > 2000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65284,What is the temperature in cities with a GDP of over 5 billion and a population of over 1 million?,SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE gdp > 5000000000 AND regional_population > 1000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65285,What is the temperature in cities with a population of over 1 billion?,SELECT * FROM temperature WHERE city_id IN (SELECT city_id FROM city WHERE regional_population > 1000000000),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
65291,What is the highest mountain?,SELECT MAX(height) FROM mountain,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65292,Which climber has climbed the most distinct mountains?,"SELECT name, COUNT(DISTINCT mountain_id) FROM climber GROUP BY name ORDER BY COUNT(DISTINCT mountain_id) DESC LIMIT 1","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65295,What is the total number of mountains?,SELECT COUNT(*) FROM mountain,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65296,Which climber has the highest total of points?,"SELECT name, SUM(points) FROM climber GROUP BY name ORDER BY SUM(points) DESC LIMIT 1","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65297,What is the name of the mountain with the highest average height?,"SELECT name, AVG(height) FROM mountain GROUP BY name ORDER BY AVG(height) DESC LIMIT 1","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65298,How many climbers are from the same country?,SELECT COUNT(*) FROM climber GROUP BY country HAVING COUNT(*) > 1,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65299,What is the name of the climber with the lowest number of points?,SELECT name FROM climber ORDER BY points ASC LIMIT 1,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65300,Which country has the most prominent mountains?,"SELECT country, MAX(prominence) FROM mountain GROUP BY country ORDER BY MAX(prominence) DESC LIMIT 1","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65302,Which climber has climbed the most distinct countries?,"SELECT name, COUNT(DISTINCT country) FROM climber GROUP BY name ORDER BY COUNT(DISTINCT country) DESC LIMIT 1","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65303,What is the name of the mountain with the lowest height?,SELECT name FROM mountain ORDER BY height ASC LIMIT 1,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
65308,Which shop has the highest average score?,"SELECT shop_id, AVG(score) FROM shop GROUP BY shop_id ORDER BY AVG DESC LIMIT 1","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65309,What is the total number of happy hour members in shops with more than 5 staff?,SELECT COUNT(*) FROM happy_hour WHERE num_of_shaff_in_charge > 5,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65311,Which shop has the highest number of staff?,"SELECT shop_id, MAX(num_of_staff) FROM shop GROUP BY shop_id ORDER BY MAX DESC LIMIT 1","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65312,What is the total number of happy hour members in shops with open year 2000?,SELECT COUNT(*) FROM happy_hour WHERE shop_id IN (SELECT shop_id FROM shop WHERE open_year = '2000'),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65313,What are the top 5 most visited shops?,"SELECT shop_id, COUNT(*) FROM happy_hour GROUP BY shop_id ORDER BY COUNT DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65314,What is the average score of shops in the Europe region?,SELECT AVG(score) FROM shop WHERE address LIKE '%Europe%',"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65315,What is the total number of happy hour members in shops with less than 5 staff?,SELECT COUNT(*) FROM happy_hour WHERE num_of_shaff_in_charge < 5,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65317,Which shop has the lowest score?,"SELECT shop_id, MIN(score) FROM shop GROUP BY shop_id ORDER BY MIN ASC LIMIT 1","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65318,What is the total amount of purchases made by happy hour members in the Asia region?,SELECT SUM(total_amount) FROM happy_hour_member WHERE 'Europe' NOT IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65319,What is the average age of happy hour members in Europe?,SELECT AVG(age) FROM member WHERE 'Europe' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65320,What are the top 3 most visited shops in the North region?,"SELECT shop_id, COUNT(*) FROM happy_hour WHERE 'North' IN (SELECT address FROM shop) GROUP BY shop_id ORDER BY COUNT DESC LIMIT 3","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65321,What is the total number of happy hour members in the USA region?,SELECT COUNT(*) FROM happy_hour WHERE 'USA' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65322,What are the top 5 most visited shops in the South region?,"SELECT shop_id, COUNT(*) FROM happy_hour WHERE 'South' IN (SELECT address FROM shop) GROUP BY shop_id ORDER BY COUNT DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65324,What is the total number of happy hour members in shops with more than 5 staff in the North region?,SELECT COUNT(*) FROM happy_hour WHERE 'North' IN (SELECT address FROM shop) AND num_of_shaff_in_charge > 5,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65325,What is the total age of all happy hour members in Europe?,SELECT SUM(age) FROM member WHERE 'Europe' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65326,"What are the top 3 most visited shops in the South region, excluding Europe and North America?","SELECT shop_id, COUNT(*) FROM happy_hour WHERE 'South' IN (SELECT address FROM shop) AND 'Europe' NOT IN (SELECT address FROM shop) AND 'North America' NOT IN (SELECT address FROM shop) GROUP BY shop_id ORDER BY COUNT DESC LIMIT 3","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65327,What is the average age of happy hour members in the Asia region?,SELECT AVG(age) FROM member WHERE 'Asia' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65328,What are the top 5 most visited shops in the Europe region?,"SELECT shop_id, COUNT(*) FROM happy_hour WHERE 'Europe' IN (SELECT address FROM shop) GROUP BY shop_id ORDER BY COUNT DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65329,What is the total number of happy hour members in the Asia region?,SELECT COUNT(*) FROM happy_hour WHERE 'Asia' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65330,What is the total age of all happy hour members in the North region?,SELECT SUM(age) FROM member WHERE 'North' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65332,What is the average age of happy hour members in the North region?,SELECT AVG(age) FROM member WHERE 'North' IN (SELECT address FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65333,"What are the top 3 most visited shops in the Asia region, considering the region as Asia?","SELECT shop_id, COUNT(*) FROM happy_hour WHERE 'Asia' IN (SELECT address FROM shop) GROUP BY shop_id ORDER BY COUNT DESC LIMIT 3","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
65334,What are the top 3 departments with the most registered students?,"SELECT dept_name, COUNT(DISTINCT stuid) FROM student INNER JOIN department ON student.city_code = department.school_code GROUP BY dept_name ORDER BY 2 DESC LIMIT 3","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65335,What is the course with the highest credit hours?,"SELECT crs_code, SUM(crs_credit) AS total_credits FROM course GROUP BY crs_code ORDER BY total_credits DESC LIMIT 1","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65336,What instructor has taught the most courses?,"SELECT i.id, COUNT(t.id) AS num_courses FROM instructor i INNER JOIN teaches t ON i.id = t.id GROUP BY i.id ORDER BY num_courses DESC LIMIT 1","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65337,What is the average salary of instructors in the Business department?,SELECT AVG(salary) FROM instructor WHERE dept_name = 'Business',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65338,What is the total capacity of all classrooms in the Business building?,SELECT SUM(capacity) FROM classroom WHERE building = 'Business',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65339,What is the earliest time slot of the day?,SELECT MIN(start_hr) FROM time_slot,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65340,What is the total number of instructors in the Business department?,SELECT COUNT(id) FROM instructor WHERE dept_name = 'Business',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65341,What is the most recent semester with student enrollments?,SELECT MAX(semester) FROM takes WHERE semester IS NOT NULL,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65342,What is the total number of classrooms in the Engineering building?,SELECT COUNT(*) FROM classroom WHERE building = 'Engineering',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65343,What is the highest salary of an instructor?,SELECT MAX(salary) FROM instructor,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65345,What is the most recent year with student enrollments?,SELECT MAX(year) FROM takes WHERE year IS NOT NULL,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65347,What is the total number of courses with a prereq?,SELECT COUNT(*) FROM prereq,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65349,What is the most recent semester with course offerings?,SELECT MAX(semester) FROM section WHERE semester IS NOT NULL,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
65351,What are the different locations where departments are located?,SELECT dlocation FROM dept_locations GROUP BY dlocation,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65352,What are the employees who have the highest and lowest total hours worked?,"SELECT e.lastname, SUM(w.hours) as total_hours FROM employee e, works_on w GROUP BY e.lastname ORDER BY total_hours DESC LIMIT 1 OFFSET 0","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65354,What are the different projects being worked on?,SELECT p.pname FROM project p GROUP BY p.pname,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65355,What is the earliest and latest birthdate of an employee?,"SELECT MIN(birthdate) as earliest_birthdate, MAX(birthdate) as latest_birthdate FROM employee","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65356,Which employee was hired first?,SELECT MIN(hiredate) as earliest_hiredate FROM employee,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65357,What are the dependent details of employees?,"SELECT essn, dependent_name, sex, bdate, relationship FROM dependent","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65358,What is the earliest and latest hire date?,"SELECT MIN(hiredate) as earliest_hiredate, MAX(hiredate) as latest_hiredate FROM employee","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65359,What is the average age of employees in the US?,"SELECT AVG(AGE(current_date, birthdate)) as avg_age FROM employee WHERE country LIKE '%US%'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65360,What is the average hours spent by each employee on projects?,"SELECT e.lastname, AVG(w.hours) as avg_hours FROM employee e, works_on w GROUP BY e.lastname","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65361,What are the employees who have the highest and lowest average hours worked on projects?,"SELECT e.lastname, AVG(w.hours) as avg_hours FROM employee e, works_on w GROUP BY e.lastname ORDER BY avg_hours DESC LIMIT 1 OFFSET 0","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65362,What is the earliest and latest birthdate of an employee from the US?,"SELECT MIN(birthdate) as earliest_birthdate, MAX(birthdate) as latest_birthdate FROM employee WHERE country LIKE '%US%'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
65363,What is the total sales in millions of each industry?,"SELECT industry, SUM(sales_in_billion) FROM company GROUP BY industry;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65364,What is the average height of employees in each company?,"SELECT c.name, AVG(p.height) AS average_height FROM company c JOIN employment e ON c.company_id = e.company_id JOIN people p ON e.people_id = p.people_id GROUP BY c.name;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65365,What is the maximum profit in billions of dollars?,SELECT MAX(profits_in_billion) FROM company;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65366,Which companies have workers in the building materials industry?,"SELECT c.name, e.people_id, p.name FROM company c JOIN employment e ON c.company_id = e.company_id JOIN people p ON e.people_id = p.people_id WHERE e.year_working > 0 AND c.industry = 'Building Materials';","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65367,What is the average profit per employee per billion in each company?,SELECT AVG(profits_in_billion) / COUNT(e.people_id) AS avg_profit_per_employee FROM company c JOIN employment e ON c.company_id = e.company_id;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65368,How many people in the company are over 1.8 meters tall?,SELECT COUNT(*) FROM people WHERE height > 1.8;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65369,What is the total assets of companies in the technology industry?,SELECT SUM(assets_in_billion) FROM company WHERE industry = 'Technology';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65370,What are the names of companies with more than 1000 employees?,"SELECT c.name, COUNT(e.people_id) AS num_employees FROM company c JOIN employment e ON c.company_id = e.company_id GROUP BY c.name HAVING COUNT(e.people_id) > 1000;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65373,What is the number of people who have worked in a company for more than 5 years?,SELECT COUNT(*) FROM people p JOIN employment e ON p.people_id = e.people_id WHERE e.year_working > 5;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65375,What is the total market value of technology companies?,SELECT SUM(market_value_in_billion) FROM company WHERE industry = 'Technology';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65377,Which companies have headquarters in Europe?,SELECT c.name FROM company c WHERE c.headquarters LIKE '%Europe%';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65378,What are the names of the top 3 companies by sales?,"SELECT c.name, SUM(sales_in_billion) AS total_sales FROM company c GROUP BY c.name ORDER BY total_sales DESC LIMIT 3;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65379,What is the average height and weight of employees in each company?,"SELECT c.name, AVG(p.height) AS avg_height, AVG(p.weight) AS avg_weight FROM company c JOIN employment e ON c.company_id = e.company_id JOIN people p ON e.people_id = p.people_id GROUP BY c.name;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65380,What is the total number of employees in the company?,SELECT COUNT(DISTINCT p.people_id) FROM people p JOIN employment e ON p.people_id = e.people_id;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65381,What is the average profit of employees in each company?,"SELECT c.name, AVG(profits_in_billion) AS avg_profit FROM company c JOIN employment e ON c.company_id = e.company_id JOIN people p ON e.people_id = p.people_id GROUP BY c.name;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65382,What is the total assets of companies in the finance industry?,SELECT SUM(assets_in_billion) FROM company WHERE industry = 'Finance';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65383,What are the names of companies with at least 300 employees?,"SELECT c.name, COUNT(e.people_id) AS num_employees FROM company c JOIN employment e ON c.company_id = e.company_id GROUP BY c.name HAVING COUNT(e.people_id) >= 300;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65384,What is the total sales of companies in the technology industry?,SELECT SUM(sales_in_billion) FROM company WHERE industry = 'Technology';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65386,What is the number of people who have worked for less than 2 years?,SELECT COUNT(*) FROM people p JOIN employment e ON p.people_id = e.people_id WHERE e.year_working < 2;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65387,What is the total assets of companies in the health industry?,SELECT SUM(assets_in_billion) FROM company WHERE industry = 'Health';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65388,What are the names of companies with at least 20% profit margin?,"SELECT c.name, c.profits_in_billion, c.sales_in_billion FROM company c WHERE c.profits_in_billion / c.sales_in_billion >= 0.20;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65389,What are the average and total ages of male and female singers?,"SELECT AVG(s.age) AS avg_male_age, SUM(CASE WHEN s.is_male THEN 1 ELSE 0 END) AS total_male_singer FROM singer s where s.is_male = 't';","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65390,What are the countries where the top 3 concerts held were?,"SELECT c.theme, COUNT(c.concert_id) AS total_concerts FROM concert c GROUP BY c.theme ORDER BY total_concerts DESC LIMIT 3;","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65391,What are the top 3 countries where the singers were born?,"SELECT s.country, COUNT(s.singer_id) AS total_singers FROM singer s GROUP BY s.country ORDER BY total_singers DESC LIMIT 3;","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65392,What is the total age of male and female singers?,SELECT AVG(s.age) AS avg_age FROM singer s;,"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65393,What are the total number of songs sung by female singers?,SELECT COUNT(DISTINCT s.song_name) AS total_songs FROM singer s WHERE s.is_male = 'f';,"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65397,What courses are taught by a teacher aged 30 or more?,SELECT * FROM teacher WHERE age >= '30',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65398,Which departments teach more than one course?,SELECT DISTINCT dept_code FROM course GROUP BY dept_code HAVING COUNT(*) > 1,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65402,What are the top 3 grade distributions for a course?,"SELECT grade, COUNT(*) AS count FROM course_arrange GROUP BY grade ORDER BY count DESC LIMIT 3","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65403,What is the number of teachers per department?,"SELECT DISTINCT dept_code, COUNT(*) FROM course GROUP BY dept_code","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65404,What are the teachers who taught more than one course?,"SELECT DISTINCT teacher_id, COUNT(*) FROM course_arrange GROUP BY teacher_id HAVING COUNT(*) > 1","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65406,Which courses are taught by a teacher from hometown in a specified country?,SELECT * FROM teacher WHERE hometown LIKE '%country%',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65409,What is the distribution of students for each teacher?,"SELECT teacher_id, COUNT(*) FROM course_arrange GROUP BY teacher_id","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65411,What is the ranking of departments by the number of courses taught?,"SELECT dept_code, COUNT(*) FROM course GROUP BY dept_code ORDER BY COUNT(*) DESC","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65412,Which departments teach fewer than three courses?,SELECT DISTINCT dept_code FROM course GROUP BY dept_code HAVING COUNT(*) < 3,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65413,What is the number of students per course?,"SELECT course_id, COUNT(*) FROM course_arrange GROUP BY course_id","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65414,What is the ranking of teachers by the number of students taught?,"SELECT teacher_id, COUNT(*) FROM course_arrange GROUP BY teacher_id ORDER BY COUNT(*) DESC","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65415,What is the ranking of departments by the average credits per course?,"SELECT dept_code, AVG(crs_credit) FROM course GROUP BY dept_code ORDER BY AVG(crs_credit) DESC","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65416,What is the number of students with a grade C or higher?,SELECT COUNT(*) FROM course_arrange WHERE grade >= 70,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65417,What is the ranking of teachers by the average grade they gave?,"SELECT teacher_id, AVG(grade) FROM course_arrange GROUP BY teacher_id ORDER BY AVG(grade) DESC","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
65419,What are the top 5 publishing companies by equity shareholding?,"SELECT company_name, SUM(group_equity_shareholding) AS total_equity FROM culture_company GROUP BY company_name ORDER BY total_equity DESC LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65420,What is the highest grossing movie by director?,"SELECT director, MAX(gross_worldwide) AS max_gross FROM movie GROUP BY director;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65421,What are the book titles for each category?,"SELECT category, book_title, book_club_id FROM book_club WHERE year = 2015 AND category = 'Science Fiction';","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65422,What is the total number of movies produced in each year?,"SELECT year, COUNT(*) FROM movie GROUP BY year;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65424,What is the average book title length?,SELECT AVG(CHAR_LENGTH(book_title)) AS avg_title_len FROM book_club;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65425,What is the highest book club result for books published this year?,SELECT MAX(result) AS max_result FROM book_club WHERE year = (SELECT MAX(year) FROM book_club);,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65428,What are the top 5 directors by movie budget?,"SELECT director, SUM(budget_million) AS total_budget FROM movie GROUP BY director ORDER BY total_budget DESC LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65429,What is the total number of movies produced by each director?,"SELECT director, COUNT(*) FROM movie GROUP BY director;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65430,What is the average gross worldwide for movies produced by each director?,"SELECT director, AVG(gross_worldwide) AS avg_gross FROM movie GROUP BY director;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65431,What are the top 3 movie titles by gross worldwide?,"SELECT title, MAX(gross_worldwide) AS max_gross FROM movie GROUP BY title ORDER BY max_gross DESC LIMIT 3;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65432,What is the total number of book club results for each book?,"SELECT book_title, COUNT(*) FROM book_club GROUP BY book_title;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65433,What is the top 5 movie titles by director?,"SELECT director, COUNT(*) FROM movie GROUP BY director ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65434,What are the book titles for each category and year?,"SELECT category, year, book_title, book_club_id FROM book_club;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65435,What is the average book title length for each author?,"SELECT author_or_editor, AVG(CHAR_LENGTH(book_title)) AS avg_title_len FROM book_club GROUP BY author_or_editor;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65436,What is the count of each book club result for each author?,"SELECT author_or_editor, COUNT(*) FROM book_club GROUP BY author_or_editor, result;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65438,What is the total number of book club results for each category and year?,"SELECT category, year, COUNT(*) FROM book_club GROUP BY category, year;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65439,What is the top 3 directors by movie budget?,"SELECT director, SUM(budget_million) AS total_budget FROM movie GROUP BY director ORDER BY total_budget DESC LIMIT 3;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65441,What are the top 5 movie titles by gross worldwide?,"SELECT title, MAX(gross_worldwide) AS max_gross FROM movie GROUP BY title ORDER BY max_gross DESC LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
65444,List all venues that hosted debates in alphabetical order?,SELECT DISTINCT venue FROM debate ORDER BY venue;,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65445,What is the total number of audience for each debate?,"SELECT debate_id, SUM(num_of_audience) FROM debate GROUP BY debate_id;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65446,How many people participated in each debate?,"SELECT debate_id, COUNT(*) FROM debate_people GROUP BY debate_id;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65448,What is the total weight of all people who attended at least one debate?,SELECT SUM(weight) FROM people WHERE people_id IN (SELECT people_id FROM debate_people);,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65449,When did each debate take place?,"SELECT debate_id, date FROM debate;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65451,Who was the tallest person to participate in a debate?,"SELECT people.name, height FROM people WHERE people_id IN (SELECT people_id FROM debate_people) ORDER BY height DESC LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65452,What is the total number of debates held by date and venue?,"SELECT date, venue, COUNT(*) FROM debate GROUP BY date, venue;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65453,Who never participated in a debate?,SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM debate_people);,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65455,What is the name of the highest-ranking member?,SELECT name FROM member ORDER BY level_of_membership DESC LIMIT 1;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
65456,What is the ranking of the most decorated member in the area?,SELECT rank_in_round FROM round ORDER BY rank_in_round DESC LIMIT 1;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
65458,What is the name of the member who purchased their membership card most recently?,SELECT name FROM member ORDER BY time_of_purchase DESC LIMIT 1;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
65460,What is the average age of members in the most populous city?,SELECT AVG(age) FROM member WHERE address LIKE '%city_name%';,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
65461,"What is the number of members in each city, grouped by country?","SELECT country, city, COUNT(*) FROM college GROUP BY country, city;","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
65463,What is the ranking of the lowest-ranking member?,SELECT rank_in_round FROM round ORDER BY rank_in_round;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
65465,What is the oldest department head's name?,SELECT name FROM head ORDER BY born_state DESC LIMIT 1,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65466,Which department has the most employees?,"SELECT department_id, COUNT(department_id) FROM management GROUP BY department_id","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65467,Who is the youngest department head?,SELECT name FROM head ORDER BY age ASC LIMIT 1,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65469,What is the average age of department heads from a specific state?,SELECT AVG(age) FROM head WHERE born_state='STATE_NAME',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65470,Who is the head of the IT department?,SELECT * FROM management WHERE department_id IN (SELECT department_id FROM department WHERE dept_name='IT'),"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65473,What is the total number of employees for each department?,"SELECT department_id, COUNT(department_id) AS num_employees FROM management GROUP BY department_id","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65474,Who is the head of the marketing department?,SELECT * FROM management WHERE department_id IN (SELECT department_id FROM department WHERE dept_name='Marketing'),"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65475,Which department has the highest number of employees?,"SELECT department_id, COUNT(department_id) AS num_employees FROM management GROUP BY department_id ORDER BY num_employees DESC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65477,Who is the head of the finance department?,SELECT * FROM management WHERE department_id IN (SELECT department_id FROM department WHERE dept_name='Finance'),"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65479,Who is the head of the research department?,SELECT * FROM management WHERE department_id IN (SELECT department_id FROM department WHERE dept_name='Research'),"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65480,Who is the head of the HR department?,SELECT * FROM management WHERE department_id IN (SELECT department_id FROM department WHERE dept_name='HR'),"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
65484,What are the top 5 devices by quantity in stock?,SELECT * FROM stock ORDER BY quantity DESC LIMIT 5;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65485,What are the shops with the highest score?,SELECT * FROM shop WHERE score = (SELECT MAX(score) FROM shop);,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65486,Which devices are in stock at each shop?,"SELECT DISTINCT s.shop_id, d.device_id, d.device FROM stock s JOIN device d ON s.device_id = d.device_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65488,What are the top 5 shop with the most devices in stock?,"SELECT * FROM shop s JOIN (SELECT shop_id, COUNT(*) FROM stock GROUP BY shop_id ORDER BY COUNT(*) DESC LIMIT 5) AS top_shops ON s.shop_id = top_shops.shop_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65489,What is the open year with the most shops?,"SELECT open_year, COUNT(*) FROM shop GROUP BY open_year ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65490,What are the devices in production?,SELECT * FROM device WHERE applications = 'production';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65491,What are the devices not in production?,SELECT * FROM device WHERE applications = 'not_in_production';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65492,What are the shops opened after 2015?,SELECT * FROM shop WHERE open_year > '2015';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65493,What is the total quantity of devices per shop?,"SELECT s.shop_id, SUM(s.quantity) FROM stock s GROUP BY s.shop_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65495,What are the devices with the most quantity in stock?,"SELECT * FROM device d JOIN (SELECT device_id, SUM(quantity) FROM stock GROUP BY device_id ORDER BY SUM(quantity) DESC) AS top_devices ON d.device_id = top_devices.device_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65496,What are the shops with the most quantity of devices?,"SELECT * FROM shop s JOIN (SELECT shop_id, SUM(quantity) FROM stock GROUP BY shop_id ORDER BY SUM(quantity) DESC) AS top_shops ON s.shop_id = top_shops.shop_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65497,What is the top 5 software platforms by the number of devices?,"SELECT software_platform, COUNT(*) FROM device GROUP BY software_platform ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65500,What are the devices in non-production?,SELECT * FROM device WHERE applications = 'non_production';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65503,What are the shops with the same number of staff?,SELECT * FROM shop WHERE num_of_staff = (SELECT MIN(num_of_staff) FROM shop);,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65504,What are the devices in discontinued production?,SELECT * FROM device WHERE applications = 'discontinued_production';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65507,What is the top 5 shops with the most devices in stock?,"SELECT * FROM shop s JOIN (SELECT shop_id, COUNT(*) FROM stock GROUP BY shop_id ORDER BY COUNT(*) DESC) AS top_shops ON s.shop_id = top_shops.shop_id LIMIT 5;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65508,What are the devices in stock in each shop?,"SELECT * FROM shop s JOIN (SELECT device_id, SUM(quantity) FROM stock GROUP BY device_id) AS total_devices ON s.shop_id = total_devices.device_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
65510,What are the top 5 counties with the highest population?,"SELECT county_name, SUM(population) FROM county GROUP BY county_name ORDER BY SUM(population) DESC LIMIT 5","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65511,List all counties where the zip code starts with '10',SELECT county_name FROM county WHERE zip_code LIKE '10%',"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65514,What are the top 3 parties with the most governors?,"SELECT party, COUNT(governor) FROM party GROUP BY party ORDER BY COUNT(governor) DESC LIMIT 3","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65515,List all counties where the population is greater than 100000,SELECT county_name FROM county WHERE population > 100000,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65516,What are the top 5 parties with the most delegates?,"SELECT party, COUNT(delegate) FROM election GROUP BY party ORDER BY COUNT(delegate) DESC LIMIT 5","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65517,List all counties where the population is less than 50000,SELECT county_name FROM county WHERE population < 50000,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65518,What are the top 3 counties with the highest population?,"SELECT county_name, SUM(population) FROM county GROUP BY county_name ORDER BY SUM(population) DESC LIMIT 3","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65519,List all counties where the population is greater than 200000,SELECT county_name FROM county WHERE population > 200000,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65520,What are the top 5 parties with the most governors?,"SELECT party, COUNT(governor) FROM party GROUP BY party ORDER BY COUNT(governor) DESC LIMIT 5","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65521,List all counties where the county name starts with 'H',SELECT county_name FROM county WHERE county_name LIKE 'H%',"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65523,List all counties where the population is greater than 300000,SELECT county_name FROM county WHERE population > 300000,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
65525,What is the total count of elections for each party?,"SELECT party, COUNT(election_id) AS total_count FROM election GROUP BY party","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65526,Which party has the most elections?,"SELECT party, COUNT(election_id) AS total_count FROM election GROUP BY party ORDER BY total_count DESC LIMIT 1","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65527,Which representatives are from the Democratic Party?,SELECT * FROM representative WHERE party = 'Democratic',"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65528,What are the total elections for each committee?,"SELECT committee, COUNT(election_id) AS total_count FROM election GROUP BY committee","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65529,What is the oldest representative by election year?,SELECT * FROM representative ORDER BY lifespan ASC LIMIT 1,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65530,What are the total elections for each delegate?,"SELECT delegate, COUNT(election_id) AS total_count FROM election GROUP BY delegate","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65532,What are the top 5 representatives by lifespan?,SELECT * FROM representative ORDER BY lifespan DESC LIMIT 5,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65533,When was the first elected representative from each state?,"SELECT state, MIN(lifespan) AS first_elected FROM representative GROUP BY state","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65534,What are the total elections for each district?,"SELECT district, COUNT(election_id) AS total_count FROM election GROUP BY district","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65536,When was the last elected representative from each state?,"SELECT state, MAX(lifespan) AS last_elected FROM representative GROUP BY state","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65537,What are the top 5 states with the most representatives?,"SELECT state, COUNT(representative_id) AS total_count FROM representative GROUP BY state ORDER BY total_count DESC LIMIT 5","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
65540,What is the name of the festival chair in the 2020 festival?,SELECT chair_name FROM festival_detail WHERE year = 2020;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65541,What is the total number of artworks exhibited in the 2019 festival?,SELECT COUNT(*) FROM nomination WHERE festival_id IN (SELECT festival_id FROM festival_detail WHERE year = 2019) AND result = 'exhibited';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65543,What is the name of the artwork with the most nominations?,SELECT name FROM artwork WHERE artwork_id IN (SELECT artwork_id FROM nomination GROUP BY artwork_id ORDER BY COUNT(*) DESC LIMIT 1);,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65544,What is the number of attendees for the 2018 festival?,SELECT num_of_audience FROM festival_detail WHERE year = 2018;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65545,What is the type of the artwork named ' masterpieces'? ,SELECT type FROM artwork WHERE name = 'masterpieces';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65547,What is the location of the 2020 festival?,SELECT location FROM festival_detail WHERE year = 2020;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65548,What is the result of 'Love Poem' in the 2019 festival?,SELECT result FROM nomination WHERE artwork_id IN (SELECT artwork_id FROM artwork WHERE name = 'Love Poem') AND festival_id IN (SELECT festival_id FROM festival_detail WHERE year = 2019);,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65549,How many artworks were exhibited in the 2020 festival?,SELECT COUNT(*) FROM nomination WHERE festival_id IN (SELECT festival_id FROM festival_detail WHERE year = 2020) AND result = 'exhibited';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65550,What is the name of the artwork with the least nominations?,SELECT name FROM artwork WHERE artwork_id IN (SELECT artwork_id FROM nomination GROUP BY artwork_id ORDER BY COUNT(*) ASC LIMIT 1);,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65551,What is the type of the artwork named 'The Master'? ,SELECT type FROM artwork WHERE name = 'The Master';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65552,What is the total number of attendees in all festivals?,SELECT SUM(num_of_audience) FROM festival_detail;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65553,What is the name of the festival with the most attendees?,SELECT festival_name FROM festival_detail ORDER BY num_of_audience DESC LIMIT 1;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65554,What is the location of the 2018 festival?,SELECT location FROM festival_detail WHERE year = 2018;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65555,How many festivals do 'masterpieces' exhibit in?,SELECT COUNT(*) FROM festival_detail WHERE festival_id IN (SELECT festival_id FROM nomination WHERE artwork_id IN (SELECT artwork_id FROM artwork WHERE name = 'masterpieces'));,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65556,What is the type of the artwork with the most nominations?,SELECT type FROM artwork WHERE artwork_id IN (SELECT artwork_id FROM nomination GROUP BY artwork_id ORDER BY COUNT(*) DESC LIMIT 1);,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65558,What is the total number of attendees in the 2019 festival?,SELECT num_of_audience FROM festival_detail WHERE year = 2019;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65559,What is the artist of the artwork named 'Sundial'? ,SELECT type FROM artwork WHERE name = 'Sundial';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65560,What is the number of attendees for the 2017 festival?,SELECT num_of_audience FROM festival_detail WHERE year = 2017;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65561,How many artworks were exhibited in the 2018 festival?,SELECT COUNT(*) FROM nomination WHERE festival_id IN (SELECT festival_id FROM festival_detail WHERE year = 2018) AND result = 'exhibited';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65563,How many artworks did 'Love Poem' exhibit in total?,SELECT COUNT(*) FROM nomination WHERE artwork_id IN (SELECT artwork_id FROM artwork WHERE name = 'Love Poem');,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65566,What is the type of the artwork with the least attendees?,SELECT type FROM artwork WHERE artwork_id IN (SELECT artwork_id FROM nomination GROUP BY artwork_id ORDER BY COUNT(*) ASC LIMIT 1);,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65567,What is the name of the festival with the least attendees?,SELECT festival_name FROM festival_detail ORDER BY num_of_audience ASC LIMIT 1;,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65570,What is the artist of the artwork named 'the master'? ,SELECT type FROM artwork WHERE name = 'the master';,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
65572,Which items have the highest rating?,SELECT * FROM item WHERE i_id IN (SELECT i_id FROM review WHERE rating = (SELECT MAX(rating) FROM review)),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65573,What is the most trusted user?,SELECT * FROM useracct WHERE u_id IN (SELECT target_u_id FROM trust ORDER BY trust DESC LIMIT 1),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
