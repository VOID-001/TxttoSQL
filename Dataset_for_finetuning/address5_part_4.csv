Unnamed: 0,question,query,schema
66708,What is the average revenue generated by each happy hour member?,SELECT AVG(total_amount) as avg_revenue FROM happy_hour_member;,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66709,What are the members with the most expensive memberships?,"SELECT name, level_of_membership FROM member ORDER BY level_of_membership DESC LIMIT 5;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66710,What is the average number of happy hour members per shop?,"SELECT AVG(num_members) as avg_num_members FROM (SELECT shop_id, COUNT(*) as num_members FROM happy_hour GROUP BY shop_id) as subquery;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66711,What are the shops with the highest average score?,"SELECT address, AVG(score) as avg_score FROM shop GROUP BY address ORDER BY avg_score DESC;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66712,What is the average number of shaff in charge per shop?,SELECT AVG(num_of_shaff_in_charge) as avg_num_shaff_per_shop FROM happy_hour WHERE shop_id IN (SELECT shop_id FROM happy_hour GROUP BY shop_id ORDER BY COUNT(*) DESC LIMIT 5);,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66713,What are the courses offered by Electronics department?,SELECT crs_code FROM course WHERE dept_code = 'ECE',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66714,Which courses have no prerequisites?,SELECT DISTINCT course_id FROM prereq WHERE prereq_id IS NULL,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66715,List the instructors teaching CS courses,SELECT name FROM instructor JOIN teaches ON instructor.id = teaches.id WHERE course_id LIKE 'CS%',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66716,What is the capacity of the room 101 in building A?,SELECT capacity FROM classroom WHERE building = 'A' AND room_number = '101',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66717,What are the courses taught by Dr. John?,SELECT DISTINCT course_id FROM teaches WHERE id IN (SELECT id FROM instructor WHERE name = 'John'),"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66718,What is the total number of sections taught by Dr. John in a given semester?,SELECT COUNT(*) FROM teaches WHERE id IN (SELECT id FROM instructor WHERE name = 'John'),"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66719,Find the instructors who teach both CS and EE courses,SELECT DISTINCT id FROM teaches WHERE course_id LIKE '%CS%' AND course_id LIKE '%EE%',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66720,What are the courses that have a prerequisite?,"SELECT DISTINCT course_id, prereq_id FROM prereq","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66722,What is the room with the highest capacity?,"SELECT room_number, capacity FROM classroom ORDER BY capacity DESC LIMIT 1","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66723,List the courses taught by Dr. John in a given semester,SELECT course_id FROM teaches WHERE id IN (SELECT id FROM instructor WHERE name = 'John') AND semester = '<semester>',"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66724,List the instructors who teach more than one course in a semester,SELECT DISTINCT id FROM teaches WHERE id IN (SELECT id FROM instructor) GROUP BY id HAVING COUNT(id) > 1,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66725,List the courses taught by Dr. John in a given year,SELECT course_id FROM teaches WHERE id IN (SELECT id FROM instructor WHERE name = 'John') AND year IN (SELECT year FROM takes WHERE semester = '<semester>'),"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
66726,What are the departments sorted by name?,SELECT * FROM department ORDER BY dept_name,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66728,What are the departments where name starts with A and sorted by name?,SELECT * FROM department WHERE dept_name LIKE 'A%' ORDER BY dept_name,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66729,Who works on the 'project' with name 'Automated Web Framework'?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Automated Web Framework',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66730,What are the top 5 countries where employees reside?,"SELECT country, COUNT(*) AS count FROM employee GROUP BY country ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66731,What are the employees who work in the 'Research and Development' department?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Research and Development',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66732,Who works on the 'Software Engineering' project and sorted by first name?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Software Engineering' ORDER BY e.firstname,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66733,What are the top 5 cities where employees reside?,"SELECT city, COUNT(*) AS count FROM employee GROUP BY city ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66734,What are the top 5 postal codes where employees reside?,"SELECT postalcode, COUNT(*) AS count FROM employee GROUP BY postalcode ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66735,Who works on the 'Marketing' project and sorted by last name?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Marketing' ORDER BY e.lastname,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66736,What are the top 5 phone numbers where employees reside?,"SELECT phone, COUNT(*) AS count FROM employee GROUP BY phone ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66737,What are the top 5 email addresses where employees reside?,"SELECT email, COUNT(*) AS count FROM employee GROUP BY email ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66738,Who works on the 'Software Development' project and sorted by phone number?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Software Development' ORDER BY e.phone,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66739,What are the top 5 fax numbers where employees reside?,"SELECT fax, COUNT(*) AS count FROM employee GROUP BY fax ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66740,What are the top 5 addresses where employees reside?,"SELECT address, COUNT(*) AS count FROM employee GROUP BY address ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66741,Who works on the 'Marketing' project and sorted by job title?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Marketing' ORDER BY e.title,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66742,What are the top 5 cities where employees reside in the 'USA'?,"SELECT city, COUNT(*) AS count FROM employee WHERE country = 'USA' GROUP BY city ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66743,Who works on the 'Automated Web Framework' project and sorted by birthdate?,SELECT * FROM employee e JOIN works_on w ON e.employeeid = w.essn JOIN project p ON w.pno = p.pnumber WHERE p.pname = 'Automated Web Framework' ORDER BY e.birthdate,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66744,What are the top 5 states where employees reside?,"SELECT state, COUNT(*) AS count FROM employee GROUP BY state ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66745,What are the top 5 postal codes where employees reside in the 'USA'?,"SELECT postalcode, COUNT(*) AS count FROM employee WHERE country = 'USA' GROUP BY postalcode ORDER BY count DESC LIMIT 5","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
66747,Which company has the lowest market value?,"SELECT *, market_value_in_billion AS value FROM company ORDER BY market_value_in_billion LIMIT 1;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66751,List all companies in the tech industry?,SELECT * FROM company WHERE industry = 'tech';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66752,List all people born in the United States?,SELECT * FROM people WHERE birth_place = 'United States';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66753,List all companies founded after 2010?,SELECT * FROM company WHERE headquarters LIKE '%201%d';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66755,List all people with a weight over 80kg?,SELECT * FROM people WHERE weight > 80;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66758,What is the total number of employees in each company?,"SELECT company_id, COUNT(*) FROM employment GROUP BY company_id;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66761,List all companies with sales over 10 billion?,SELECT * FROM company WHERE sales_in_billion > 10;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66762,List all companies with assets over 100 billion?,SELECT * FROM company WHERE assets_in_billion > 100;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66763,List all people with a weight in the range 60-80kg?,SELECT * FROM people WHERE weight BETWEEN 60 AND 80;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66764,List all companies with market value in the range 50-100 billion?,SELECT * FROM company WHERE market_value_in_billion BETWEEN 50 AND 100;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66768,What is the total number of years people have been working per company?,"SELECT company_id, SUM(year_working) FROM employment GROUP BY company_id;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66773,List all singer names born in 1990?,"SELECT name FROM singer WHERE EXTRACT(YEAR FROM TO_DATE(song_release_year, 'YYYY')) = 1990","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66776,List all stadiums located in 'Los Angeles'?,SELECT name FROM stadium WHERE location = 'Los Angeles',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66777,What is the total count of male and female singers?,"SELECT COUNT(*) AS male_singers, COUNT(*) FILTER (WHERE is_male = FALSE) AS female_singers FROM singer","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66779,What is the stadium with the highest average height?,"SELECT s.name, AVG(highest) AS average_height FROM stadium s GROUP BY s.name ORDER BY average_height DESC LIMIT 1","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66780,What are the names of singers who are 30 years old?,SELECT name FROM singer WHERE age = 30,"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66781,What is the total number of concerts held in 2010?,SELECT COUNT(*) FROM concert WHERE year = '2010',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66782,What is the name of the stadium with the lowest average height?,"SELECT s.name, MIN(average) AS lowest_average_height FROM stadium s GROUP BY s.name ORDER BY lowest_average_height LIMIT 1","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66783,What is the total count of concerts held before 2015?,SELECT COUNT(*) FROM concert WHERE year < '2015',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66784,What is the average age of singers born in 1995?,"SELECT AVG(age) FROM singer WHERE EXTRACT(YEAR FROM TO_DATE(song_release_year, 'YYYY')) = 1995","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66785,What is the total count of concerts held in the year 2017?,SELECT COUNT(*) FROM concert WHERE year = '2017',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66788,What is the name of the stadium with the lowest capacity?,"SELECT s.name, MIN(capacity) AS lowest_capacity FROM stadium s GROUP BY s.name ORDER BY lowest_capacity LIMIT 1","
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66789,What is the total count of female singers?,SELECT COUNT(*) FILTER (WHERE is_male = FALSE) FROM singer,"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
66790,What cities have the highest average population?,"SELECT city, AVG(regional_population) AS avg_population FROM city GROUP BY city ORDER BY avg_population DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
66791,Which cities have the highest GDP per capita?,"SELECT city, regional_population, gdp, (gdp / regional_population) AS gdp_per_capita FROM city ORDER BY gdp_per_capita DESC LIMIT 10;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
66792,What is the total population of all counties in Jiangsu province?,SELECT SUM(population) AS total_population FROM county_public_safety WHERE location = 'Jiangsu';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
66793,What is the average residents per officer ratio among all counties?,SELECT AVG(residents_per_officer) AS avg_rpo FROM county_public_safety;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
66794,What is the average police officers per 1000 residents in all counties?,SELECT AVG(police_officers / (1000 * population)) AS avg_police_officers FROM county_public_safety;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
66795,What are the top 5 cities with the highest GDP?,"SELECT city, gdp FROM city ORDER BY gdp DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
66800,Who is the teacher of course CRSE 102?,SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id WHERE course_id = (SELECT course_id FROM course c WHERE c.crs_code = 'CRSE 102'),"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66801,List departments with at least one 4-credit course,SELECT DISTINCT dept_code FROM course c WHERE crs_credit >= '4',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66803,What is the total age of all teachers?,SELECT SUM(CAST(TRIM(BOTH FROM age) AS INTEGER)) FROM teacher,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66805,List teachers who have not taught any courses,SELECT name FROM teacher WHERE teacher_id NOT IN (SELECT teacher_id FROM course_arrange),"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66806,What is the number of teachers in each department?,"SELECT dept_code, COUNT(t.name) FROM course c JOIN teacher t ON c.crs_code = t.age GROUP BY dept_code","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66807,What is the total age of all male teachers?,SELECT SUM(CAST(TRIM(BOTH FROM age) AS INTEGER)) FROM teacher WHERE name NOT LIKE '%female%',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66808,List courses with more than 2 credits,SELECT c.crs_code FROM course c WHERE crs_credit > 2,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66809,What are the names and ages of teachers who taught courses?,"SELECT t.name, t.age FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66810,What is the total age of male teachers over 35 years old?,SELECT SUM(CAST(TRIM(BOTH FROM age) AS INTEGER)) FROM teacher WHERE name NOT LIKE '%female%' AND age > '35',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66811,What is the total number of credits for each course?,"SELECT c.crs_code, SUM(crs_credit) FROM course c GROUP BY c.crs_code ORDER BY SUM(crs_credit) DESC","
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66812,List teachers who have taught at least 3 courses,SELECT name FROM teacher WHERE teacher_id IN (SELECT DISTINCT teacher_id FROM course_arrange GROUP BY teacher_id HAVING COUNT(teacher_id) > 2),"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66813,List departments with at least one 3-credit course,SELECT DISTINCT dept_code FROM course WHERE crs_credit = '3',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66814,List teachers under 25 years old who have taught at least 2 courses,SELECT name FROM teacher WHERE age < '25' AND teacher_id IN (SELECT DISTINCT teacher_id FROM course_arrange GROUP BY teacher_id HAVING COUNT(teacher_id) > 1),"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
66816,What is the earliest year mentioned in book_club?,SELECT MIN(year) FROM book_club;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66817,What is the average book_club_id and year?,"SELECT AVG(book_club_id) AS average_book_club_id, AVG(year) AS average_year FROM book_club;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66819,Which authors are not editors?,SELECT DISTINCT author_or_editor FROM book_club WHERE author_or_editor NOT LIKE 'Editor%';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66820,Who are the editors?,SELECT author_or_editor FROM book_club WHERE author_or_editor LIKE 'Editor%';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66821,Get the top 5 publishers,"SELECT publisher, COUNT(*) FROM book_club GROUP BY publisher ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66822,What is the most frequently occurring category?,"SELECT category, COUNT(*) FROM book_club GROUP BY category ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66823,Get the company name,SELECT company_name FROM culture_company;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66824,What is the overall group equity shareholding of all companies,SELECT SUM(group_equity_shareholding) FROM culture_company;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66825,What is the earliest incorporated date?,SELECT MIN(incorporated_in) FROM culture_company;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66826,Get the movie title and director of top-budget film,"SELECT title, director FROM movie WHERE budget_million = (SELECT MAX(budget_million) FROM movie);","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66827,Get the total budget of movie_id 1,SELECT budget_million FROM movie WHERE movie_id = 1;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66828,Get the total worldwide gross of top-grossing film,SELECT gross_worldwide FROM movie ORDER BY gross_worldwide DESC LIMIT 1;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66829,Get the movie title and director of movie_id 2,"SELECT title, director FROM movie WHERE movie_id = 2;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66830,Get the latest movie release,SELECT MAX(year) AS latest_year FROM movie;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66832,Get the total budget and gross Worldwide of movie_id 1,"SELECT budget_million, gross_worldwide FROM movie WHERE movie_id = 1;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66836,Get the total book club years,SELECT MAX(year) - MIN(year) + 1 AS total_years FROM book_club;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66837,Get the count of publishers by year,"SELECT year, COUNT(DISTINCT publisher) AS count_publishers FROM book_club GROUP BY year;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66838,Get the earliest book_club_id,SELECT MIN(book_club_id) FROM book_club;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66839,Get the total count of culture companies,SELECT COUNT(*) FROM culture_company;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66840,Get the company name with the highest equity shareholding,"SELECT company_name, group_equity_shareholding FROM culture_company ORDER BY group_equity_shareholding DESC LIMIT 1;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66842,What is the total worldwide gross and budget of the top-grossing film,"SELECT SUM(gross_worldwide) AS total_gross, SUM(budget_million) AS total_budget FROM movie;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66843,Get the average book publication budget,SELECT AVG(budget_million) AS average_budget FROM movie;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66844,Get the top 5 budget categories,"SELECT budget_million, COUNT(*) FROM movie GROUP BY budget_million ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
66846,What is the average height of people who participated in debates?,SELECT AVG(p.height) AS avg_height FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66847,What is the total number of debaters participating in debates?,SELECT COUNT(DISTINCT p.people_id) AS total_debaters FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66849,What is the total number of affirmative and negative speakers?,"SELECT SUM(dp.affirmative) AS total_affirmative, SUM(dp.negative) AS total_negative FROM debate_people dp","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66851,"What is the total number of debates participated in by each person, grouped by the first letter of the person's name?","SELECT LEFT(p.name, 1) AS letter, COUNT(dp.debate_id) AS num_debates FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id GROUP BY LEFT(p.name, 1)","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66852,What is the total number of affirmative and negative speakers participating in each debate?,"SELECT COUNT(dp.affirmative) AS total_affirmative, COUNT(dp.negative) AS total_negative FROM debate_people dp GROUP BY dp.debate_id","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66853,"What is the total number of affirmative and negative speakers participating in each debate, grouped by debate ID?","SELECT debate_id, SUM(affirmative) AS total_affirmative, SUM(negative) AS total_negative FROM debate_people GROUP BY debate_id","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66858,What are the top 5 members by age?,"SELECT age, name FROM member ORDER BY age DESC LIMIT 5","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66859,What are the colleges with the most members?,"SELECT name_full, COUNT(member_id) FROM member JOIN college ON member.address = college.city GROUP BY name_full ORDER BY COUNT(member_id) DESC","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66861,What are the most common membership levels?,"SELECT level_of_membership, COUNT(*) FROM member GROUP BY level_of_membership ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66863,What is the most common decoration theme in each round?,"SELECT round_id, decoration_theme, COUNT(*) FROM round GROUP BY round_id, decoration_theme ORDER BY round_id, COUNT(*) DESC","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66864,What are the smallest colleges by number of members?,"SELECT name_full, count(*) FROM member JOIN college ON member.address = college.city GROUP BY name_full ORDER BY count(*) LIMIT 3","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66866,What are the top 5 colleges by number of members?,"SELECT name_full, count(*) FROM member JOIN college ON member.address = college.city GROUP BY name_full ORDER BY count(*) DESC LIMIT 5","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66867,How many members are there with a specific address?,SELECT COUNT(member_id) FROM member WHERE address = 'specific address',"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66868,What are the top 3 colleges with the highest number of members?,"SELECT name_full, count(*) FROM member JOIN college ON member.address = college.city GROUP BY name_full ORDER BY count(*) DESC LIMIT 3","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66869,What are the top 3 decoration themes in a specific round?,"SELECT decoration_theme, COUNT(*) FROM round GROUP BY decoration_theme ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66870,What is the average rank in each round?,"SELECT round_id, AVG(rank_in_round) FROM round GROUP BY round_id","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66871,What are the top 3 colleges with the most frequent decoration themes?,"SELECT name_full, COUNT(*) FROM member JOIN college ON member.address = college.city JOIN round ON member.member_id = round.member_id GROUP BY name_full ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
66872,What are the departments with more than 1 employee?,SELECT * FROM department WHERE emp_num > 1,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66874,What is the count of departments by school?,"SELECT school_code, COUNT(*) AS count FROM department GROUP BY school_code","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66875,What are the names of heads of departments?,SELECT name FROM head,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66876,What are the temporary acting heads?,SELECT * FROM management WHERE temporary_acting = 'yes',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66877,What are the departments in a specific school?,SELECT * FROM department WHERE school_code = 'ABC',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66878,What is the total count of employees across all departments?,SELECT COUNT(*) AS total FROM department,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66879,What is the average age of heads?,SELECT AVG(age) AS avg_age FROM head,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66880,What is the count of employees by department?,"SELECT dept_code, COUNT(*) AS count FROM department GROUP BY dept_code","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66881,What is the total salary of all employees?,SELECT SUM(emp_num) AS total_salary FROM department,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66882,What is the count of employees in a specific department?,SELECT COUNT(*) AS count FROM department WHERE dept_code = 'ABC',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66883,What is the total count of employees with more than 1 manager?,SELECT COUNT(*) AS count FROM head WHERE head_id IS NOT NULL,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66885,What is the count of employees by department and school?,"SELECT dept_code, school_code, COUNT(*) AS count FROM department GROUP BY dept_code, school_code","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66886,What is the total count of departments in a specific school?,SELECT COUNT(*) AS count FROM department WHERE school_code = 'ABC',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66887,What are the departments with multiple employees in a specific school?,SELECT * FROM department WHERE emp_num > 1 AND school_code = 'ABC',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66889,What is the total count of employees across all departments in a specific school?,SELECT COUNT(*) AS total FROM department WHERE school_code = 'ABC',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66891,What are the departments with only one employee in a specific school?,SELECT * FROM department WHERE emp_num = 1 AND school_code = 'ABC',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
66894,What is the device ID with the highest quantity in stock?,"SELECT device_id, COUNT(*) as quantity FROM stock GROUP BY device_id ORDER BY quantity DESC LIMIT 1","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66895,What is the average quantity of devices per shop?,"SELECT AVG(total_quantity) as avg_quantity FROM (SELECT shop_id, SUM(quantity) as total_quantity FROM stock GROUP BY shop_id) as subquery","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66896,Which shops have the highest average score?,"SELECT shop_id, AVG(score) as avg_score FROM shop GROUP BY shop_id ORDER BY avg_score DESC LIMIT 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66897,What is the earliest opening year of the shops?,SELECT MIN(open_year) as earliest_year FROM shop,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66899,Which devices are in stock and have a quantity more than 100,SELECT DISTINCT device_id FROM stock WHERE quantity > 100,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66900,What is the percentage of devices from a specific carrier?,"SELECT COUNT(*) as count_devices, carrier FROM device GROUP BY carrier ORDER BY count_devices DESC","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66901,What is the number of devices in stock per shop?,"SELECT shop_id, SUM(quantity) as total_devices FROM stock GROUP BY shop_id ORDER BY total_devices DESC","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66902,What are the top 5 devices with the highest quantity in stock?,"SELECT device_id, SUM(quantity) as total_devices FROM stock GROUP BY device_id ORDER BY total_devices DESC LIMIT 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66906,What is the top 3 devices with the highest total quantity in stock?,"SELECT device_id, SUM(quantity) as total_devices FROM stock GROUP BY device_id ORDER BY total_devices DESC LIMIT 3","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66907,What are the top 5 shops with the lowest average score?,"SELECT shop_id, AVG(score) as avg_score FROM shop GROUP BY shop_id ORDER BY avg_score ASC LIMIT 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66909,What is the top 5 devices with the least quantity in stock?,"SELECT device_id, SUM(quantity) as total_devices FROM stock GROUP BY device_id ORDER BY total_devices ASC LIMIT 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66910,What is the average score for all shops?,SELECT AVG(score) as avg_score FROM shop,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66912,What is the top 3 shops with the highest total devices in stock?,"SELECT shop_id, SUM(total_devices) as total_devices FROM (SELECT shop_id, SUM(quantity) as total_devices FROM stock GROUP BY shop_id) as subquery GROUP BY shop_id ORDER BY total_devices DESC LIMIT 3","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
66917,Show all party affiliations of each governor.,"SELECT party, governor FROM party WHERE party = 'Republican' OR party = 'Democrat'","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
66918,List all counties in a specific zip code.,"SELECT county_name, zip_code FROM county WHERE zip_code = '12345'","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
66920,What are the most populous cities in each county?,"SELECT county_name, population FROM county ORDER BY population DESC","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
66923,Show all governors and their respective parties.,"SELECT governor, party FROM party","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
66926,What are the top 5 most populous cities in the state by zip code?,"SELECT county_name, zip_code FROM county ORDER BY population DESC LIMIT 5","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
66927,"List all county names, zip codes, and populations.","SELECT county_name, zip_code, population FROM county","
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
66928,What is the average lifespan of representatives?,"SELECT AVG(to_number(lifespan, 'YYYY')) FROM representative;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66929,List the states with at least 5 representatives.,"SELECT state, COUNT(*) FROM representative GROUP BY state HAVING COUNT(*) > 5;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66932,What are the election districts with most delegates?,"SELECT district, COUNT(*) FROM election GROUP BY district ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66933,In which elections did no delegates participate?,SELECT COUNT(*) FROM election WHERE delegate IS NULL;,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66935,How many states are represented by at least one representative?,SELECT COUNT(DISTINCT state) FROM representative;,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66937,What is the earliest lifespan recorded?,SELECT MIN(lifespan) FROM representative;,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66938,What are the top 5 most represented parties?,"SELECT party, COUNT(*) FROM election GROUP BY party ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66939,What is the latest election date?,SELECT MAX(first_elected) FROM election;,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66940,What is the earliest election with a delegate?,SELECT MIN(first_elected) FROM election WHERE delegate IS NOT NULL;,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66942,In which years were no elections held?,SELECT COUNT(*) FROM election WHERE first_elected IS NULL;,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66943,What are the oldest and youngest representatives?,"SELECT MIN(lifespan), MAX(lifespan) FROM representative;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66945,What is the earliest year for each county's representation?,"SELECT COUNT(*), first_elected FROM election GROUP BY first_elected LIMIT 1;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66946,What are the earliest and latest elections with delegates?,"SELECT MIN(first_elected), MAX(first_elected) FROM election WHERE delegate IS NOT NULL;","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
66947,What is the number of employees working in each shop?,"SELECT shop_id, COUNT(DISTINCT employee_id) FROM hiring GROUP BY shop_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66948,What are the total bonuses for each employee?,"SELECT employee_id, SUM(bonus) FROM evaluation GROUP BY employee_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66949,What are the top 3 shops with the highest score?,"SELECT shop_id, AVG(score) FROM shop GROUP BY shop_id ORDER BY 2 DESC LIMIT 3;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66950,What are the last names of employees born in the 80s?,SELECT lastname FROM employee WHERE birthdate BETWEEN '1980-01-01' AND '1989-12-31';,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66951,What are the earliest start dates for each shop?,"SELECT shop_id, MIN(start_from) FROM hiring GROUP BY shop_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66952,What are the top 2 most common titles?,"SELECT title, COUNT(*) FROM employee GROUP BY title ORDER BY 2 DESC LIMIT 2;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66953,What are the total numbers of staff in each shop?,"SELECT shop_id, COUNT(*) FROM hiring GROUP BY shop_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66954,What are the total bonuses for each year?,"SELECT year_awarded, SUM(bonus) FROM evaluation GROUP BY year_awarded;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66955,What are the names of employees who have worked in multiple shops?,SELECT DISTINCT employee_id FROM hiring GROUP BY employee_id HAVING COUNT(*) > 1;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66956,Which shops have the smallest score?,"SELECT shop_id, MIN(score) FROM shop GROUP BY shop_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66957,What are the top 3 employees with the highest bonuses?,"SELECT employee_id, SUM(bonus) FROM evaluation GROUP BY employee_id ORDER BY 2 DESC LIMIT 3;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66959,What are the earliest start dates for each employee?,"SELECT employee_id, MIN(start_from) FROM hiring GROUP BY employee_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66960,What are the names of employees born in the 70s?,SELECT * FROM employee WHERE birthdate BETWEEN '1970-01-01' AND '1979-12-31';,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66961,What are the highest bonuses for each year?,"SELECT year_awarded, MAX(bonus) FROM evaluation GROUP BY year_awarded;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66962,What are the top 2 departments with the highest score?,"SELECT shop_id, AVG(score) FROM shop GROUP BY shop_id ORDER BY 2 DESC LIMIT 2;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66964,Which employees are full-time employees?,SELECT * FROM hiring WHERE is_full_time = TRUE;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66965,What are the highest bonuses for each employee?,"SELECT employee_id, MAX(bonus) FROM evaluation GROUP BY employee_id;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66966,What are the names of employees born in the 90s?,SELECT * FROM employee WHERE birthdate BETWEEN '1990-01-01' AND '1999-12-31';,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66968,What are the top 2 most common countries?,"SELECT country, COUNT(*) FROM employee GROUP BY country ORDER BY 2 DESC LIMIT 2;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66969,What is the average height of entrepreneurs who have received funding?,SELECT AVG(height) FROM people p JOIN entrepreneur e ON p.people_id = e.people_id WHERE e.money_requested > 0,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66970,What is the distribution of entrepreneur heights?,"SELECT height, COUNT(*) AS frequency FROM people GROUP BY height ORDER BY frequency DESC","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66971,What are the top 3 companies with the highest funding received?,"SELECT company, SUM(money_requested) AS total_funding FROM entrepreneur GROUP BY company ORDER BY total_funding DESC LIMIT 3","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66972,Who are the top 5 tallest entrepreneurs?,"SELECT name, height FROM people p JOIN entrepreneur e ON p.people_id = e.people_id ORDER BY height DESC LIMIT 5","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66973,What is the birthdate distribution of entrepreneurs?,"SELECT birth_date, COUNT(*) AS frequency FROM people GROUP BY birth_date ORDER BY frequency DESC","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66974,What is the average weight of entrepreneurs who have received funding?,SELECT AVG(weight) FROM people p JOIN entrepreneur e ON p.people_id = e.people_id WHERE e.money_requested > 0,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66975,Who are the top 5 heaviest entrepreneurs?,"SELECT name, weight FROM people p JOIN entrepreneur e ON p.people_id = e.people_id ORDER BY weight DESC LIMIT 5","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66976,What is the distribution of entrepreneur weights?,"SELECT weight, COUNT(*) AS frequency FROM people GROUP BY weight ORDER BY frequency DESC","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66978,What are the top 5 shortest entrepreneurs?,"SELECT name, weight FROM people p JOIN entrepreneur e ON p.people_id = e.people_id ORDER BY weight ASC LIMIT 5","
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66995,What is the total number of working horses in all farms?,SELECT SUM(working_horses) FROM farm,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
67009,Which film has the highest rank in the series?,"SELECT title, rank_in_series FROM film WHERE rank_in_series = (SELECT MAX(rank_in_series) FROM film);","
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67014,What are the top 5 highest ranked films?,"SELECT title, rank_in_series FROM film ORDER BY rank_in_series DESC LIMIT 5;","
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67015,Which film has the longest title?,SELECT title FROM film ORDER BY LENGTH(title) DESC LIMIT 1;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67016,What is the lowest number of cities in a market?,SELECT MIN(number_cities) FROM market;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67017,What is the highest number of cities in a market?,SELECT MAX(number_cities) FROM market;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67020,Which film took the longest to produce?,SELECT title FROM film ORDER BY LENGTH(directed_by) DESC LIMIT 1;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67021,What is the total number of film titles with 'The' in the title?,SELECT COUNT(*) FROM film WHERE title ILIKE '%The%';,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67022,What is the total number of films rated 5 stars?,SELECT COUNT(*) FROM film WHERE rank_in_series = 5;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67023,What is the total number of film estimations per type?,"SELECT type, COUNT(*) FROM film_market_estimation GROUP BY type;","
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67025,What is the total number of films with a certain rating?,SELECT COUNT(*) FROM film WHERE rank_in_series = 4;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
67028,Which aircraft are certified?,SELECT aircraft FROM aircraft JOIN certificate ON aircraft.aircraft_id = certificate.aid;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67029,What are the top 5 employees by hire date?,SELECT * FROM employee ORDER BY hiredate LIMIT 5;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67030,Which flights departed and arrived on the same day?,SELECT * FROM flight WHERE departure_date = arrival_date;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67032,What is the earliest and latest reported hire date?,"SELECT MIN(hiredate) AS earliest, MAX(hiredate) AS latest FROM employee;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67033,What are the top 2 cities where employees are located?,"SELECT city, COUNT(*) AS count FROM employee GROUP BY city ORDER BY count DESC LIMIT 2;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67034,"Which employees were hired before January 1st, 2000?",SELECT * FROM employee WHERE hiredate < '2000-01-01';,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67036,What is the earliest departing and arriving flight?,"SELECT MIN(departure_date) AS earliest_departure, MIN(arrival_date) AS earliest_arrival FROM flight;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67040,What is the earliest and latest flight departure date?,"SELECT MIN(departure_date) AS earliest_departure, MAX(departure_date) AS latest_departure FROM flight;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67041,What are the top 2 employees by position?,SELECT * FROM employee ORDER BY title DESC LIMIT 2;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67042,What is the average age of all employees?,"SELECT AVG(AGE(NOW(), birthdate)) FROM employee;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67043,Which flights departed from the same origin?,SELECT * FROM flight WHERE origin = (SELECT origin FROM flight GROUP BY origin HAVING COUNT(*) > 1);,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67046,What is the earliest and latest reported birth date?,"SELECT MIN(birthdate) AS earliest_birthdate, MAX(birthdate) AS latest_birthdate FROM employee;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67047,What are the top 2 employees by hire date in the same department?,SELECT * FROM employee WHERE hiredate IN (SELECT hiredate FROM employee ORDER BY hiredate DESC LIMIT 2);,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67048,What is the total distance of all flights from the same origin?,SELECT SUM(distance) FROM flight WHERE origin IN (SELECT origin FROM flight GROUP BY origin HAVING COUNT(*) > 1);,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67049,What are the top 3 flights by distance in the same period?,SELECT * FROM flight WHERE departure_date BETWEEN '2020-01-01' AND '2020-12-31' ORDER BY distance DESC LIMIT 3;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67052,Which flights departed and arrived on different days?,SELECT * FROM flight WHERE departure_date != arrival_date;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67053,What are the top 2 aircraft by max gross weight?,SELECT * FROM aircraft ORDER BY max_gross_weight DESC LIMIT 2;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67054,What is the earliest and latest reported email?,"SELECT MIN(email) AS earliest_email, MAX(email) AS latest_email FROM employee;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67055,What are the top 3 flights by time taken?,SELECT * FROM flight ORDER BY (arrival_date - departure_date) DESC LIMIT 3;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67056,What is the total price of all flights in a specific city?,SELECT SUM(price) FROM flight WHERE origin = 'New York';,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67057,What are the top 2 employees by hire date in the same city?,SELECT * FROM employee WHERE hiredate IN (SELECT hiredate FROM employee WHERE city = 'New York' ORDER BY hiredate DESC LIMIT 2);,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67058,What is the earliest and latest reported phone number?,"SELECT MIN(phone) AS earliest_phone, MAX(phone) AS latest_phone FROM employee;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
67062,What are the flights for American Airlines?,SELECT * FROM flights WHERE airline = 1;,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67063,What are the flights from New York?,SELECT * FROM flights WHERE sourceairport LIKE '%New York%';,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67064,Who are the airlines operating flights from New York?,SELECT distinct airline FROM flights WHERE sourceairport LIKE '%New York%';,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67065,What are the flights from New York to Los Angeles?,SELECT * FROM flights WHERE sourceairport = 'New York' AND destairport = 'Los Angeles';,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67066,What are the flights from the United States?,SELECT * FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country = 'United States');,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67067,What are the flights with codeshare partners?,SELECT * FROM flights WHERE airline IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(DISTINCT flightno) > 1);,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67068,What are the flights with codeshare partners in the United States?,SELECT * FROM flights WHERE airline IN (SELECT airline FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country = 'United States') GROUP BY airline HAVING COUNT(DISTINCT flightno) > 1);,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67069,What are the busiest airports in the United States?,"SELECT sourceairport, COUNT(*) AS numflights FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country = 'United States') GROUP BY sourceairport ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67070,What are the top 10 busiest airlines in the United States?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country = 'United States') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67071,What are the flights with layovers?,SELECT * FROM flights WHERE sourceairport != destairport;,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67072,What are the flights in the Pacific Ocean?,SELECT * FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'Pacific');,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67073,What are the flights in Europe?,SELECT * FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'Europe');,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67074,What are the top 10 busiest airlines in the world?,"SELECT airline, COUNT(*) AS numflights FROM flights GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67075,What are the top 10 busiest airline routes?,"SELECT destairport, COUNT(*) AS numflights FROM flights GROUP BY destairport ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67076,What are the top 10 busiest airline routes in Europe?,"SELECT destairport, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'Europe') GROUP BY destairport ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67077,What are the top 10 busiest airlines in Europe?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'Europe') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67078,What are the busiest airlines in the Pacific Ocean?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'Pacific') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67080,What are the busiest airlines in South America?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'South America') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67082,What are the busiest airlines in Asia?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'Asia') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67084,What are the busiest airlines in Africa?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'Africa') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67086,What are the busiest airlines in the Middle East?,"SELECT airline, COUNT(*) AS numflights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'Middle East') GROUP BY airline ORDER BY numflights DESC LIMIT 10;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
67088,What is the total distance traveled by flights from airport X to Y?,SELECT SUM(flight.distance) FROM flight WHERE flight.origin = 'X' AND flight.destination = 'Y';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67089,What are the top 5 airports by international passengers?,"SELECT airport.airport_name, SUM(airport.international_passengers) FROM airport GROUP BY airport.airport_name ORDER BY 2 DESC LIMIT 5;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67090,What is the average distance of flights by airline X?,SELECT AVG(flight.distance) FROM flight WHERE flight.aid = (SELECT id FROM operate_company WHERE name = 'X');,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67091,What is the total number of flights departing from airport X?,SELECT COUNT(*) FROM flight WHERE flight.origin = 'X';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67092,What are the top 5 airports by freight in tonnage?,"SELECT airport.airport_name, SUM(airport.freight_metric_tonnes) FROM airport GROUP BY airport.airport_name ORDER BY 2 DESC LIMIT 5;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67093,What is the total aircraft movements at airport X?,SELECT SUM(airport.aircraft_movements) FROM airport WHERE airport.airport_name = 'X';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67094,What is the total distance traveled by flights in 2007?,SELECT SUM(flight.distance) FROM flight WHERE EXTRACT(YEAR FROM flight.departure_date) = 2007;,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67095,What is the total number of flights in 2007?,SELECT COUNT(*) FROM flight WHERE EXTRACT(YEAR FROM flight.departure_date) = 2007;,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67096,What is the total distance traveled by flights?,SELECT SUM(flight.distance) FROM flight;,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67097,What are the top 5 airports by domestic passengers?,"SELECT airport.airport_name, SUM(airport.domestic_passengers) FROM airport GROUP BY airport.airport_name ORDER BY 2 DESC LIMIT 5;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67098,What are the top 5 airports by transit passengers?,"SELECT airport.airport_name, SUM(airport.transit_passengers) FROM airport GROUP BY airport.airport_name ORDER BY 2 DESC LIMIT 5;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
67102,What's the average sales of companies with over $10 billion in assets?,SELECT AVG(sales_in_billion) FROM company WHERE assets_in_billion > 10000,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67103,Which companies have more than $50 billion in market value?,SELECT * FROM company WHERE market_value_in_billion > 50000,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67104,What's the ranking of companies by profits?,"SELECT *, ROW_NUMBER() OVER (ORDER BY profits_in_billion DESC) AS rank FROM company","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67105,What's the average profits of companies in the financial industry?,SELECT AVG(profits_in_billion) FROM company WHERE industry = 'Financial',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67106,What's the top 5 companies by sales?,"SELECT *, ROW_NUMBER() OVER (ORDER BY sales_in_billion DESC) AS rank FROM company LIMIT 5","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67107,What's the ranking of gas stations by open year?,"SELECT *, ROW_NUMBER() OVER (ORDER BY open_year) AS rank FROM gas_station","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67108,What are the gas stations that have been open for more than 20 years?,SELECT * FROM gas_station WHERE open_year < 2000,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67109,How many gas stations does each company have?,"SELECT company_id, COUNT(*) AS station_count FROM station_company GROUP BY company_id","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67111,What's the top 5 companies by profits?,"SELECT *, ROW_NUMBER() OVER (ORDER BY profits_in_billion DESC) AS rank FROM company LIMIT 5","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67112,What's the top 3 companies by market value?,"SELECT *, ROW_NUMBER() OVER (ORDER BY market_value_in_billion DESC) AS rank FROM company LIMIT 3","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67113,What's the ranking of companies by assets?,"SELECT *, ROW_NUMBER() OVER (ORDER BY assets_in_billion DESC) AS rank FROM company","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67114,What's the top 4 companies by profits?,"SELECT *, ROW_NUMBER() OVER (ORDER BY profits_in_billion DESC) AS rank FROM company LIMIT 4","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67115,What's the ranking of companies by sales?,"SELECT *, ROW_NUMBER() OVER (ORDER BY sales_in_billion DESC) AS rank FROM company","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67116,What's the top 2 companies by market value?,"SELECT *, ROW_NUMBER() OVER (ORDER BY market_value_in_billion DESC) AS rank FROM company LIMIT 2","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67117,What are the gas stations that are managed by a woman?,SELECT * FROM gas_station WHERE manager_name LIKE '%Women%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67118,What's the top 3 companies by sales?,"SELECT *, ROW_NUMBER() OVER (ORDER BY sales_in_billion DESC) AS rank FROM company LIMIT 3","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67119,What's the ranking of gas stations by location?,"SELECT *, ROW_NUMBER() OVER (ORDER BY location) AS rank FROM gas_station","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67121,What are the companies that have more than 500 million in assets?,SELECT * FROM company WHERE assets_in_billion > 500,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67122,What are the gas stations that are located closest to the company's headquarters?,SELECT * FROM gas_station WHERE location = (SELECT headquarters FROM company),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
67123,What states have a population over 1 million?,SELECT state_name FROM state WHERE population > 1000000,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67124,What is the total area of lakes in the United States?,SELECT SUM(area) FROM lake WHERE country_name='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67125,What is the highest elevation in the United States?,SELECT highest_elevation FROM highlow WHERE state_name='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67126,What is the smallest state in the United States?,"SELECT state_name, area FROM state ORDER BY area LIMIT 1","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67128,What is the total population of the United States?,SELECT SUM(population) FROM state WHERE country_name='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67129,What is the tallest mountain in the United States?,"SELECT name, height FROM mountain WHERE country='United States' ORDER BY height DESC LIMIT 1","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67130,What is the lowest point in the United States?,SELECT lowest_point FROM highlow WHERE state_name='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67131,What is the total length of rivers in the United States?,SELECT SUM(length) FROM river WHERE country_name='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67133,What is the largest lake in the United States?,"SELECT lake_name, area FROM lake WHERE country_name='United States' ORDER BY area DESC LIMIT 1","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67134,What is the county with the highest population?,"SELECT state_name, population FROM state WHERE population > 1000000","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67135,What is the total height of mountains in the United States?,SELECT SUM(height) FROM mountain WHERE country='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67136,What is the longest border?,SELECT border FROM border_info WHERE state_name='United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67147,What state has the highest land area?,"SELECT state_name, area FROM state WHERE country_name='United States' ORDER BY area DESC LIMIT 1","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
67154,Which gymnasts have more than 15 points in pommel horse?,SELECT * FROM gymnast WHERE pommel_horse_points > 15,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67157,Which gymnasts have more than 10 points in vault?,SELECT * FROM gymnast WHERE vault_points > 10,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67158,Which gymnasts have more than 12 points in parallel bars?,SELECT * FROM gymnast WHERE parallel_bars_points > 12,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67159,What is the average height of people who are between 165-170 cm?,SELECT AVG(height) FROM people WHERE height BETWEEN 165 AND 170,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67160,What is the weight range of people who are between 50-60 kg?,"SELECT MIN(weight), MAX(weight) FROM people WHERE weight BETWEEN 50 AND 60","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67161,Which gymnasts have more than 12 points in horizontal bars?,SELECT * FROM gymnast WHERE horizontal_bar_points > 12,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67162,Which gymnasts have more than 15 points in rings?,SELECT * FROM gymnast WHERE rings_points > 15,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67163,Which gymnasts have more than 12 points in vault and pommel horse?,SELECT * FROM gymnast WHERE vault_points > 12 AND pommel_horse_points > 12,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67164,What is the average weight of gymnasts who are between 55-60 kg?,SELECT AVG(weight) FROM people WHERE weight BETWEEN 55 AND 60,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67165,Which gymnasts have more than 10 points in parallel bars and horizontal bars?,SELECT * FROM gymnast WHERE parallel_bars_points > 10 AND horizontal_bar_points > 10,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67166,What is the average height of people who are between 155-160 cm?,SELECT AVG(height) FROM people WHERE height BETWEEN 155 AND 160,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67167,What is the weight range of people who are between 45-50 kg?,"SELECT MIN(weight), MAX(weight) FROM people WHERE weight BETWEEN 45 AND 50","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67168,Which gymnasts have more than 15 points in rings and horizontal bars?,SELECT * FROM gymnast WHERE rings_points > 15 AND horizontal_bar_points > 15,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67169,"Which gymnasts have more than 12 points in vault, pommel horse, and parallel bars?",SELECT * FROM gymnast WHERE vault_points > 12 AND pommel_horse_points > 12 AND parallel_bars_points > 12,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67170,What is the average weight of gymnasts who are between 165-170 kg?,SELECT AVG(weight) FROM people WHERE weight BETWEEN 165 AND 170,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67171,Which gymnasts have more than 10 points in horizontal bars and vault?,SELECT * FROM gymnast WHERE horizontal_bar_points > 10 AND vault_points > 10,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67172,What is the average height of people who are between 155-160 cm and weigh between 45-50 kg?,SELECT AVG(height) FROM people WHERE height BETWEEN 155 AND 160 AND weight BETWEEN 45 AND 50,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67173,What is the weight range of people who are between 45-50 kg and 155-160 cm?,"SELECT MIN(weight), MAX(weight) FROM people WHERE weight BETWEEN 45 AND 50 AND height BETWEEN 155 AND 160","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67174,What is the average salary for each job?,"SELECT job_title, AVG(max_salary) as avg_salary FROM jobs GROUP BY job_title;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67175,What is the number of employees in each department?,"SELECT department_name, COUNT(*) as num_employees FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id JOIN departments ON job_history.department_id = departments.department_id GROUP BY department_name;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67176,What is the average salary for employees in each department?,"SELECT department_name, AVG(max_salary) as avg_salary FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id JOIN jobs ON job_history.job_id = jobs.job_id JOIN departments ON job_history.department_id = departments.department_id GROUP BY department_name;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67177,What is the total number of employees in the IT department?,SELECT COUNT(*) as total_employees FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id WHERE job_history.department_id IN (SELECT department_id FROM departments WHERE department_name='IT');,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67178,What is the average salary for employees in the IT department?,SELECT AVG(max_salary) as avg_salary FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id JOIN jobs ON job_history.job_id = jobs.job_id WHERE job_history.department_id IN (SELECT department_id FROM departments WHERE department_name='IT');,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67179,What is the total number of employees in the Sales department?,SELECT COUNT(*) as total_employees FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id WHERE job_history.department_id IN (SELECT department_id FROM departments WHERE department_name='Sales');,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67180,What is the average salary for employees in each job?,"SELECT job_title, AVG(max_salary) as avg_salary FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id JOIN jobs ON job_history.job_id = jobs.job_id GROUP BY job_title;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67181,What is the total number of employees in the Marketing department?,SELECT COUNT(*) as total_employees FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id WHERE job_history.department_id IN (SELECT department_id FROM departments WHERE department_name='Marketing');,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67182,What is the total number of employees in the Finance department?,SELECT COUNT(*) as total_employees FROM employees JOIN job_history ON employees.employee_id = job_history.employee_id WHERE job_history.department_id IN (SELECT department_id FROM departments WHERE department_name='Finance');,"
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
67183,What is the age distribution of editors across all journals?,"SELECT age, COUNT(*) AS editor_count FROM editor GROUP BY age","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
67184,What is the most common work type across all journals?,"SELECT COUNT(*) AS work_count, work_type FROM journal_committee GROUP BY work_type ORDER BY work_count DESC LIMIT 1","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
67185,What is the age range of editors across all journals?,"SELECT MIN(age), MAX(age) FROM editor","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
67187,What is the rank of editors by age for a specific journal?,"SELECT *, DENSE_RANK() OVER (ORDER BY age) AS rank FROM (SELECT editor_id, age FROM editor) AS t","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
67188,What is the rank of editors by work type for a specific journal?,"SELECT *, DENSE_RANK() OVER (ORDER BY work_type) AS rank FROM (SELECT editor_id, work_type FROM journal_committee) AS t","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
67189,What is the distribution of editors by age and work type across all journals?,"SELECT age, work_type, COUNT(*) AS editor_count FROM editor JOIN journal_committee ON editor.editor_id = journal_committee.editor_id GROUP BY age, work_type","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
67193,What is the total number of machine series?,SELECT COUNT(DISTINCT machine_series) FROM machine,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67194,List all unique values for 'machine_class'?,SELECT DISTINCT class FROM machine,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67195,What is the launch date of the oldest repair?,SELECT launch_date FROM repair ORDER BY launch_date LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67196,Which team has the most machines?,"SELECT team, COUNT(*) FROM machine GROUP BY team ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67198,List all machine_id's for machine_series 'X'?,SELECT machine_id FROM machine WHERE machine_series = 'X',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67199,What is the average age of technicians in the 'blue' team?,SELECT AVG(age) FROM technician WHERE team = 'blue',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67201,List all machine_id's where team is 'red' and class is 'B'?,SELECT machine_id FROM machine WHERE team = 'red' AND class = 'B',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67204,List all unique values for 'machine_class' for machines made in 2015?,SELECT DISTINCT class FROM machine WHERE making_year = 2015,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67206,What is the total age of all technicians?,SELECT SUM(age) FROM technician,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67207,List all technician_id's with at least 2 repairs?,SELECT technician_id FROM repair_assignment GROUP BY technician_id HAVING COUNT(*) >= 2,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67209,List all repair_id's for repairs made in 2020?,SELECT repair_id FROM repair WHERE launch_date LIKE '%2020%',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67211,List all machine_id's where making_year is greater than 2010?,SELECT machine_id FROM machine WHERE making_year > 2010,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67213,List all unique values for 'machine_class' for machines made in 2015 and 2016?,SELECT DISTINCT class FROM machine WHERE making_year BETWEEN 2015 AND 2016,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67215,List all technician_id's with at least 1 repair?,SELECT technician_id FROM repair_assignment GROUP BY technician_id HAVING COUNT(*) >= 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67216,What is the average age of technicians in the 'red' team?,SELECT AVG(age) FROM technician WHERE team = 'red',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67217,What is the total number of machines in the 'blue' team?,SELECT COUNT(*) FROM machine WHERE team = 'blue',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67218,List all machine_id's where making_year is 2015 and quality_rank is greater than 500?,SELECT machine_id FROM machine WHERE making_year = 2015 AND quality_rank > 500,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67220,List all unique values for 'team' for machines made in 2015?,SELECT DISTINCT team FROM machine WHERE making_year = 2015,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67221,What is the average age of technicians in the 'red' team and born in 2000?,SELECT AVG(age) FROM technician WHERE team = 'red' AND starting_year = 2000,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67222,List all technician_id's with at least 3 repairs?,SELECT technician_id FROM repair_assignment GROUP BY technician_id HAVING COUNT(*) >= 3,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
67223,How many manufacturers started after 2010?,SELECT COUNT(*) FROM manufacturer WHERE open_year > 2010,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67224,What is the total number of factories and shops for all manufacturers?,SELECT SUM(num_of_factories + num_of_shops) FROM manufacturer,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67225,What is the average price of furniture made by a manufacturer that has more than 5 factories?,SELECT AVG(price_in_dollar) FROM furniture_manufacte WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id AND num_of_factories > 5),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67226,What is the sum of market rates for furniture made by manufacturer X?,SELECT SUM(market_rate) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.name = 'X' AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67227,How many furniture pieces have more than 5 components?,SELECT COUNT(*) FROM furniture WHERE num_of_component > 5,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67228,What are the top 3 most expensive furniture pieces?,SELECT * FROM furniture ORDER BY market_rate DESC LIMIT 3,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67229,What is the total market rate of all furniture made by manufacturer A?,SELECT SUM(market_rate) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.name = 'A' AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67231,How many manufacturers have more than 10 shops?,SELECT COUNT(*) FROM manufacturer WHERE num_of_shops > 10,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67232,What is the total number of factories and shops for all manufacturers that started after 2015?,SELECT SUM(num_of_factories + num_of_shops) FROM manufacturer WHERE open_year > 2015,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67233,What are the top 2 cheapest furniture pieces?,SELECT * FROM furniture ORDER BY market_rate ASC LIMIT 2,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67235,What is the sum of prices for all furniture pieces made by manufacturer B?,SELECT SUM(price_in_dollar) FROM furniture_manufacte WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.name = 'B' AND manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67236,What is the total market rate of all furniture pieces made by a manufacturer that has more than 5 factories?,SELECT SUM(market_rate) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.num_of_factories > 5 AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67237,What is the number of furniture pieces made by a manufacturer that started after 2010?,SELECT COUNT(*) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.open_year > 2010 AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67238,What is the total number of shops for all manufacturers started after 2015?,SELECT SUM(num_of_shops) FROM manufacturer WHERE open_year > 2015,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67239,What are the average market rates for furniture made by a manufacturer that has more than 10 factories?,SELECT AVG(market_rate) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.num_of_factories > 10 AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67240,What is the total number of factories for all manufacturers started before 2000?,SELECT SUM(num_of_factories) FROM manufacturer WHERE open_year < 2000,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67246,What is the total number of factories and shops for all manufacturers started after 2010?,SELECT SUM(num_of_factories + num_of_shops) FROM manufacturer WHERE open_year > 2010,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67247,What is the average number of components per furniture piece made by a manufacturer that started after 2010?,SELECT AVG(num_of_component) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.open_year > 2010 AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67248,What is the total market rate of all furniture pieces made by a manufacturer that has less than 5 factories?,SELECT SUM(market_rate) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.num_of_factories < 5 AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67249,What is the total number of shops for all manufacturers started before 2000?,SELECT SUM(num_of_shops) FROM manufacturer WHERE open_year < 2000,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67250,What are the average prices for all furniture pieces made by a manufacturer that started after 2010?,SELECT AVG(market_rate) FROM furniture WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.open_year > 2010 AND manufacturer.manufacturer_id = furniture.furniture_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67251,What is the total number of factories and shops for all manufacturers started before 2000 and with more than 10 shops?,SELECT SUM(num_of_factories + num_of_shops) FROM manufacturer WHERE open_year < 2000 AND num_of_shops > 10,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67252,What is the sum of prices for all furniture pieces made by a manufacturer that has more than 10 factories?,SELECT SUM(price_in_dollar) FROM furniture_manufacte WHERE EXISTS (SELECT 1 FROM manufacturer WHERE manufacturer.num_of_factories > 10 AND manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id),"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
67253,What is the average birth_year of players from Canada?,SELECT avg(birth_year) FROM player WHERE birth_country = 'Canada';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67254,What are the countries where players were born?,SELECT DISTINCT birth_country FROM player;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67256,Which teams had the most games won in a single season?,"SELECT team_id, MAX(w) FROM team GROUP BY team_id;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67257,What is the rank of the teams in the 2020 season?,"SELECT rank, year, team_id FROM team WHERE year = 2020;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67259,What are the names of the players from Canada?,"SELECT name_first, name_last FROM player WHERE birth_country = 'Canada';","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67260,What is the ranking of the teams in a specific season?,"SELECT rank, year FROM team WHERE year = 2015;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67261,What is the average weight of players from the US?,SELECT AVG(weight) FROM player WHERE birth_country = 'USA';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67263,What are the players from the country of Germany?,"SELECT name_first, name_last FROM player WHERE birth_country = 'Germany';","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67264,What is the total number of wins across all seasons?,SELECT SUM(w) FROM team;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67265,What is the average games won by teams in a single season?,SELECT AVG(w) FROM team GROUP BY year;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67266,What are the names of the teams in a specific season?,SELECT name FROM team WHERE year = 2018;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67268,What is the average height of players from the country of Mexico?,SELECT AVG(height) FROM player WHERE birth_country = 'Mexico';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67269,What are the teams that have only played home games?,SELECT team_id FROM team WHERE ghome = g;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67270,What is the number of wins of the team with the lowest ranking in a specific season?,"SELECT MIN(r) AS low_rank, year, team_id FROM team GROUP BY year, team_id;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67271,What are the teams that have won the most championships?,"SELECT team_id, COUNT(*) FROM team GROUP BY team_id ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67272,What is the average number of wins of teams in a specific season?,SELECT AVG(w) FROM team WHERE year = 2010;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67273,What are the players from the country of Australia?,"SELECT name_first, name_last FROM player WHERE birth_country = 'Australia';","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67274,What is the top ranking of the teams in a specific season?,"SELECT MAX(rank) AS top_rank, year FROM team GROUP BY year;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67275,What are the teams that have won the least number of championships?,"SELECT team_id, COUNT(*) FROM team GROUP BY team_id ORDER BY COUNT(*) ASC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67277,What is the total number of games won and lost?,SELECT SUM(w) + SUM(l) FROM team;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67278,What are the team names in a specific season?,SELECT name FROM team WHERE year = 2016;,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67279,What is the average birth_year of players from Italy?,SELECT AVG(birth_year) FROM player WHERE birth_country = 'Italy';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
67280,What enzymes are related to Porphyria?,SELECT e.name FROM enzyme e WHERE e.porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67281,What medicines are FDA approved?,SELECT m.name FROM medicine m WHERE m.fda_approved = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67282,What is the frequency of different medicine types?,"SELECT COUNT(*) AS freq, m.trade_name FROM medicine m GROUP BY m.trade_name","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67285,What are the top 5 medicines with the most interactions?,"SELECT m.name, COUNT(*) AS freq FROM medicine m JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id GROUP BY m.name ORDER BY freq DESC LIMIT 5","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67286,What is the frequency of enzymes in different chromosomes?,"SELECT e.chromosome, COUNT(*) AS freq FROM enzyme e GROUP BY e.chromosome","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67287,What is the most common interaction type?,"SELECT mei.interaction_type, COUNT(*) AS freq FROM medicine_enzyme_interaction mei GROUP BY mei.interaction_type ORDER BY freq DESC LIMIT 1","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67289,What is the top interaction for each enzyme?,"SELECT e.name, mei.interaction_type FROM enzyme e JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id GROUP BY e.name, mei.interaction_type ORDER BY e.name","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67290,What is the count of medicines per trade name?,"SELECT m.trade_name, COUNT(*) AS freq FROM medicine m GROUP BY m.trade_name","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67291,What is the total number of enzymes in chromosomes 1-5?,SELECT COUNT(*) FROM enzyme WHERE chromosome BETWEEN '1' AND '5',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67293,What medicines interact with enzymes?,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id,"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67294,What are the most common enzyme locations?,"SELECT e.location, COUNT(*) AS freq FROM enzyme e GROUP BY e.location ORDER BY freq DESC LIMIT 5","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67295,What is the count of enzymes per chromosome location?,"SELECT e.location, COUNT(*) AS freq FROM enzyme e GROUP BY e.location","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67296,What is the interaction frequency for each enzyme?,"SELECT e.name, COUNT(*) AS freq FROM enzyme e JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id GROUP BY e.name","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67297,What are the top 5 frequent interactors?,"SELECT e.name, COUNT(*) AS freq FROM enzyme e JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id GROUP BY e.name ORDER BY freq DESC LIMIT 5","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67298,What is the count of enzymes per product?,"SELECT e.product, COUNT(*) AS freq FROM enzyme e GROUP BY e.product","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67299,What is the total number of enzymes related to Porphyria?,SELECT COUNT(*) FROM enzyme WHERE porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67300,What are the most frequent Porphyria-related enzymes?,"SELECT e.name, COUNT(*) AS freq FROM enzyme e WHERE e.porphyria = 'Yes' GROUP BY e.name ORDER BY freq DESC LIMIT 5","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67301,What medicines are related to specific Porphyria-related enzymes?,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction mei ON m.id = mei.medicine_id JOIN enzyme e ON mei.enzyme_id = e.id WHERE e.porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67302,What is the top interaction for each Porphyria-related enzyme?,"SELECT e.name, mei.interaction_type FROM enzyme e JOIN medicine_enzyme_interaction mei ON e.id = mei.enzyme_id WHERE e.porphyria = 'Yes' GROUP BY e.name, mei.interaction_type ORDER BY e.name","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67303,What is the count of Porphyria-related enzymes in each chromosome?,"SELECT e.chromosome, COUNT(*) AS freq FROM enzyme e WHERE e.porphyria = 'Yes' GROUP BY e.chromosome","
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
67309,List all the museums in a specific year?,SELECT * FROM museum WHERE EXTRACT(YEAR FROM current_timestamp) = '2022',"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67310,What are the top 3 museums with the most staff?,SELECT * FROM museum ORDER BY num_of_staff DESC LIMIT 3,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67311,What are the top 3 visitors with the most frequent visits?,SELECT * FROM visit ORDER BY num_of_ticket DESC LIMIT 3,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67313,What is the total number of staff in each museum?,SELECT COUNT(*) FROM visit GROUP BY museum_id,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67314,What are the top 3 museums with the most frequent visits?,SELECT * FROM museum ORDER BY (SELECT COUNT(*) FROM visit WHERE visit.museum_id = museum.museum_id) DESC LIMIT 3,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67315,What are the top 3 visitors with the most amount spent?,SELECT * FROM visit ORDER BY total_spent DESC LIMIT 3,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67316,What is the average number of staff in each region?,SELECT AVG(num_of_staff) FROM museum GROUP BY (EXTRACT(region FROM current_timestamp)),"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67317,What is the average age of visitors in each demographic group?,SELECT AVG(age) FROM visitor GROUP BY level_of_membership,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67318,What is the average number of staff in each department?,SELECT AVG(num_of_staff) FROM museum GROUP BY open_year,"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67320,What is the average age of visitors in each region?,SELECT AVG(age) FROM visitor GROUP BY (EXTRACT(region FROM current_timestamp)),"
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
67321,What are the top 5 musicals by award?,"SELECT name, COUNT(*) AS count FROM musical GROUP BY name ORDER BY count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67322,What is the average age of actors in each musical?,"SELECT musical.name, AVG(actor.age) AS avg_age FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY musical.name","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67323,What are the top 3 musical nominations?,"SELECT award, COUNT(*) AS count FROM musical GROUP BY award ORDER BY count DESC LIMIT 3","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67325,What is the total number of actors in each musical?,"SELECT musical.name, COUNT(*) AS count FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY musical.name","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67327,What is the most popular musical of the 90s?,"SELECT name, year FROM musical WHERE year BETWEEN 1990 AND 1999 ORDER BY year LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67328,What musical has the most songs?,"SELECT musical.name, COUNT(*) AS count FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE duration IS NOT NULL GROUP BY musical.name ORDER BY count DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67329,What is the most awarded musical of the 2000s?,"SELECT name, year FROM musical WHERE year BETWEEN 2000 AND 2009 ORDER BY year LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67330,What is the total number of songs in each musical?,"SELECT musical.name, COUNT(*) AS count FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE duration IS NOT NULL GROUP BY musical.name","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67331,What are the top 5 winners in each category?,"SELECT category, COUNT(*) AS count FROM musical GROUP BY category ORDER BY count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67332,What are the top 3 winners in each category?,"SELECT category, COUNT(*) AS count FROM musical GROUP BY category ORDER BY count DESC LIMIT 3","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67334,What is the most awarded musical?,"SELECT name, COUNT(*) AS count FROM musical GROUP BY name ORDER BY count DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67335,What musicals have both winners and nominees?,SELECT name FROM musical WHERE award = 'Winner' OR award = 'Nominee',"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67337,What musical has the most winners in each category?,"SELECT category, COUNT(*) AS count FROM musical GROUP BY category ORDER BY count DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67338,What is the most awarded musical of each decade?,"SELECT year, name, COUNT(*) AS count FROM musical GROUP BY year, name ORDER BY year, count DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67339,What are the top 3 winners?,SELECT COUNT(*) AS count FROM musical GROUP BY award ORDER BY count DESC LIMIT 3,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67341,What are the top 5 winners in each musical?,"SELECT musical.name, COUNT(*) AS count FROM actor JOIN musical ON actor.musical_id = musical.musical_id GROUP BY musical.name ORDER BY count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67342,What is the total number of winners in each musical?,"SELECT musical.name, COUNT(*) AS count FROM actor JOIN musical ON actor.musical_id = musical.musical_id WHERE award = 'Winner' GROUP BY musical.name","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
67344,What is the average rating of the songs ?,SELECT AVG(rating) as average_rating FROM song,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67345,List all genres of music ?,SELECT name FROM genre,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67346,What is the total number of songs released in each country ?,"SELECT country, COUNT(*) as total_songs FROM song GROUP BY country","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67347,What is the total number of songs in each genre ?,"SELECT genre_is, COUNT(*) as total_songs FROM song GROUP BY genre_is","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67348,What is the total number of songs with different resolutions ?,"SELECT DISTINCT resolution, COUNT(*) as total_songs FROM song GROUP BY resolution","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67349,What is the total number of songs with different file formats ?,"SELECT formats, COUNT(*) as total_songs FROM files GROUP BY formats","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67350,What is the total number of songs with different languages ?,"SELECT languages, COUNT(*) as total_songs FROM song GROUP BY languages","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67351,What is the total number of songs released in each year ?,"SELECT EXTRACT(YEAR FROM releasedate) as year, COUNT(*) as total_songs FROM song GROUP BY year","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67352,What is the total number of songs released in each quarter ?,"SELECT EXTRACT(QUARTER FROM releasedate) as quarter, COUNT(*) as total_songs FROM song GROUP BY quarter","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67353,What is the total number of songs released in each month ?,"SELECT EXTRACT(MONTH FROM releasedate) as month, COUNT(*) as total_songs FROM song GROUP BY month","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67354,What is the total number of songs by each artist ?,"SELECT artist_name, COUNT(*) as total_songs FROM song GROUP BY artist_name","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67355,What are the top 5 most popular artists ?,"SELECT artist_name, COUNT(*) as count FROM (SELECT artist_name FROM song GROUP BY artist_name ORDER BY COUNT(*) DESC LIMIT 5) as top_artists GROUP BY artist_name","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67356,What are the top 5 most popular genres ?,"SELECT genre_is, COUNT(*) as count FROM (SELECT genre_is FROM song GROUP BY genre_is ORDER BY COUNT(*) DESC LIMIT 5) as top_genres GROUP BY genre_is","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67361,What is the total number of songs with different ratings ?,"SELECT rating, COUNT(*) as total_songs FROM song GROUP BY rating","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67362,What is the total number of songs with different durations ?,"SELECT duration, COUNT(*) as total_songs FROM files GROUP BY duration","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67363,What is the total number of songs with different file sizes ?,"SELECT file_size, COUNT(*) as total_songs FROM files GROUP BY file_size","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67364,What is the total number of songs with different resolutions ?,"SELECT resolution, COUNT(*) as total_songs FROM song GROUP BY resolution","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67373,What are the top 5 most viewed songs ?,"SELECT song_name, COUNT(*) as count FROM (SELECT song_name FROM song GROUP BY song_name ORDER BY COUNT(*) DESC LIMIT 5) as top_songs GROUP BY song_name","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE files (
	f_id INTEGER, 
	artist_name TEXT, 
	file_size TEXT, 
	duration TEXT, 
	formats TEXT
)


CREATE TABLE genre (
	genreid INTEGER, 
	name TEXT
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67374,List all music festivals along with their date of ceremony,"SELECT music_festival, date_of_ceremony FROM music_festival","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67375,What is the total volume of the top 5 music categories,"SELECT category, SUM(volume) FROM music_festival GROUP BY category ORDER BY SUM(volume) DESC LIMIT 5","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67376,What music festival has the highest total volume,"SELECT music_festival, SUM(volume) FROM music_festival GROUP BY music_festival ORDER BY SUM(volume) DESC LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67377,What categories have the highest average volume,"SELECT AVG(volume) as avg_volume, category FROM music_festival GROUP BY category ORDER BY avg_volume DESC","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67378,What are the top 3 music festivals by total volume,"SELECT music_festival, SUM(volume) FROM music_festival GROUP BY music_festival ORDER BY SUM(volume) DESC LIMIT 3","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67379,What categories have the lowest average volume,"SELECT AVG(volume) as avg_volume, category FROM music_festival GROUP BY category ORDER BY avg_volume ASC","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67382,What music festivals did not have any volume mentioned,SELECT music_festival FROM music_festival WHERE volume = 0,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67384,What music festivals are categorized under 'Pop' music,SELECT music_festival FROM music_festival WHERE category = 'Pop',"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67386,What are the top 5 music festivals by average volume,"SELECT music_festival, AVG(volume) FROM music_festival GROUP BY music_festival ORDER BY AVG(volume) DESC LIMIT 5","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
67392,Who is the oldest journalist?,SELECT name FROM journalist ORDER BY age DESC LIMIT 1,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67393,What journalistic areas do journalists have experience in?,SELECT DISTINCT work_type FROM news_report,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67395,What is the most common nationality of journalists?,SELECT nationality FROM journalist GROUP BY nationality ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67397,What are the oldest and newest events?,"SELECT MIN(date), MAX(date) FROM event","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67398,What are the most frequently attended events?,"SELECT name, COUNT(*) FROM event GROUP BY name ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67399,What are the top 3 most eventful years?,"SELECT date, COUNT(*) FROM event GROUP BY date ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67400,What are the top 3 best-attended events?,"SELECT name, COUNT(*) FROM event GROUP BY name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67403,What are the most frequent journalists on assignment?,"SELECT journalist.name, COUNT(*) FROM journalist, news_report WHERE journalist.journalist_id = news_report.journalist_id GROUP BY journalist.name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67405,What is the total number of years of experience of all journalists?,SELECT SUM(years_working) FROM journalist,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67406,What is the average event attendance by date?,"SELECT date, AVG(event_attendance) FROM event GROUP BY date","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67408,What is the smallest attendence of an event?,SELECT MIN(event_attendance) FROM event,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67410,What are the top 3 most frequent venues?,"SELECT venue, COUNT(*) FROM event GROUP BY venue ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67411,What are the top 3 most frequent events that journalists cover?,"SELECT name, COUNT(*) FROM event, news_report WHERE event.event_id = news_report.event_id GROUP BY name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67413,What is the total number of years of experience of journalists by nationality?,"SELECT nationality, SUM(years_working) FROM journalist GROUP BY nationality","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67415,What is the total number of years of experience of journalists covered?,"SELECT SUM(years_working) FROM journalist, news_report WHERE journalist.journalist_id = news_report.journalist_id","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67416,What is the average event attendance by journalist nationality?,"SELECT nationality, AVG(event_attendance) FROM journalist, news_report, event WHERE journalist.journalist_id = news_report.journalist_id AND news_report.event_id = event.event_id GROUP BY nationality","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67417,What is the total number of years of experience of journalists by event?,"SELECT event.name, SUM(years_working) FROM event, journalist, news_report WHERE event.event_id = news_report.event_id AND journalist.journalist_id = news_report.journalist_id GROUP BY event.name","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
67419,Who is the oldest conductor?,SELECT * FROM conductor ORDER BY age DESC LIMIT 1,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67421,Get the list of conductors by nationality,"SELECT nationality, COUNT(*) FROM conductor GROUP BY nationality","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67422,Get the list of all orchestra names,SELECT DISTINCT orchestra FROM orchestra,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67423,Get the list of artists working with orchestra 'Berlin Philharmonic',SELECT * FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM orchestra WHERE orchestra = 'Berlin Philharmonic'),"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67424,Get the total revenue of shows,SELECT SUM(attendance) FROM show,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67425,Get the list of shows with attendance less than 1000,SELECT * FROM show WHERE attendance < 1000,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67427,Get the list of performances on stage position 'lead',SELECT * FROM performance WHERE stageposition = 'lead',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67428,Get the list of conductors working with orchestra 'Berlin Philharmonic' and recording company 'Deutsche Grammophon',SELECT * FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM orchestra WHERE orchestra = 'Berlin Philharmonic' AND record_company = 'Deutsche Grammophon'),"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67429,Get the list of orchestra founded after 1950,SELECT * FROM orchestra WHERE year_of_founded > 1950,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67430,Get the list of conductors with age greater than 60,SELECT * FROM conductor WHERE age > 60,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67431,Get the list of conductors recording with major recording format 'CD',SELECT * FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM orchestra WHERE major_record_format = 'CD'),"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67432,Get the list of shows with result 'win',SELECT * FROM show WHERE result = 'win',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67433,Get the list of orchestra founded before 1900,SELECT * FROM orchestra WHERE year_of_founded < 1900,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67434,Get the list of conductors with nationality 'German',SELECT * FROM conductor WHERE nationality = 'German',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67435,Get the list of performances with bandmate 1,SELECT * FROM performance WHERE bandmate = 1,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67436,Get the list of conductors working with orchestra 'Berklee College of Music',SELECT * FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM orchestra WHERE orchestra = 'Berklee College of Music'),"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67437,Get the list of performances with stage position 'back',SELECT * FROM performance WHERE stageposition = 'back',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67438,Get the list of orchestra with record company 'Deutsche Grammophon',SELECT * FROM orchestra WHERE record_company = 'Deutsche Grammophon',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67439,Get the number of performances with attendance less than 1000,SELECT COUNT(*) FROM performance INNER JOIN show ON performance_id = show_id WHERE attendance < 1000,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67440,Get the list of orchestra founded in between 1900 and 1950,SELECT * FROM orchestra WHERE year_of_founded BETWEEN 1900 AND 1950,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
67441,What host was in charge of the most parties?,"SELECT h.name AS host, COUNT(*) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id GROUP BY h.name ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67442,What nationality do hosts from most parties have?,"SELECT nationality, COUNT(*) AS count FROM host GROUP BY nationality ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67443,What is the most common nationality of hosts who participated in parties?,"SELECT nationality, COUNT(*) AS count FROM host JOIN party_host ON host.host_id = party_host.host_id GROUP BY nationality ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67444,What is the total number of hosts?,SELECT COUNT(*) AS total_hosts FROM host,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67445,Who were the hosts of most parties in 2020?,"SELECT h.name AS host, COUNT(ph.party_id) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id WHERE p.year = 2020 GROUP BY h.name ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67447,What were the top hosts based on the total number of parties?,"SELECT h.name AS host, COUNT(ph.party_id) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id GROUP BY h.name ORDER BY count DESC","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67448,What hosts were associated with most parties in 2019?,"SELECT h.name AS host, COUNT(ph.party_id) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id WHERE p.year = 2019 GROUP BY h.name ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67449,What is the most common nationality of hosts who were not main party leaders?,"SELECT nationality, COUNT(*) AS count FROM host JOIN party_host ph ON host.host_id = ph.host_id WHERE is_main_in_charge = FALSE GROUP BY nationality ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67450,What hosts have the most diverse set of party affiliations?,"SELECT h.name AS host, COUNT(DISTINCT p.party) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id GROUP BY h.name ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67451,What is the total number of hosts without specified nationality?,SELECT COUNT(*) AS total_hosts FROM host WHERE nationality IS NULL,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67453,Who were the hosts of most parties in 2018?,"SELECT h.name AS host, COUNT(ph.party_id) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id WHERE p.year = 2018 GROUP BY h.name ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67454,What hosts have the least diverse set of party affiliations?,"SELECT h.name AS host, COUNT(DISTINCT p.party) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id GROUP BY h.name ORDER BY count","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67455,What is the total number of hosts with unknown age?,SELECT COUNT(*) AS total_hosts FROM host WHERE age IS NULL,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67456,What is the most common nationality of hosts who did not participate in parties?,"SELECT nationality, COUNT(*) AS count FROM host WHERE host_id NOT IN (SELECT host_id FROM party_host) GROUP BY nationality ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67457,Who were the hosts of most parties in 2017?,"SELECT h.name AS host, COUNT(ph.party_id) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id JOIN party p ON ph.party_id = p.party_id WHERE p.year = 2017 GROUP BY h.name ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67459,What is the most popular age of hosts?,"SELECT age, COUNT(*) AS count FROM host GROUP BY age ORDER BY count DESC LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67462,What hosts are associated with the fewest parties?,"SELECT h.name AS host, COUNT(ph.party_id) AS count FROM host h JOIN party_host ph ON h.host_id = ph.host_id GROUP BY h.name ORDER BY count LIMIT 1","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
67468,Who is the youngest member?,SELECT name FROM member ORDER BY age LIMIT 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
67469,What is the average age of members belonging to a specific party?,SELECT AVG(age) FROM member WHERE level_of_membership = 2,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
67470,Who are the top 3 oldest members?,"SELECT name, age FROM member ORDER BY age DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
67471,What is the name of the member who has been a member for the longest time?,SELECT name FROM member ORDER BY time_of_purchase LIMIT 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
67475,What is the average age of members who attended a performance?,SELECT AVG(member.age) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.performance_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67476,What is the number of members who attended a performance?,SELECT COUNT(*) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.performance_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67478,What are the top 5 performance IDs attended?,"SELECT performance_id, COUNT(*) FROM member_attendance GROUP BY performance_id ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67479,What is the average number of pieces performed at a performance?,SELECT AVG(num_of_pieces) FROM member_attendance GROUP BY performance_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67480,What is the list of members who attended multiple performances?,SELECT name FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY name HAVING COUNT(DISTINCT performance_id) > 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67481,What is the average age of members who attended more than one performance?,SELECT AVG(age) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.performance_id HAVING COUNT(DISTINCT performance_id) > 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67486,What is the list of members who attended the most performances?,SELECT name FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY name HAVING COUNT(DISTINCT performance_id) = (SELECT COUNT(DISTINCT performance_id) FROM member_attendance),"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67487,What is the total number of member-attended performances per member?,SELECT COUNT(*) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.member_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67488,What is the average time of purchase for members who attended a performance?,SELECT AVG(time_of_purchase) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.performance_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67489,What is the top 5 ages of members who attended a performance?,SELECT AVG(age) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.performance_id ORDER BY AVG(age) DESC LIMIT 5,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67490,What is the average level of membership for members who attended a performance?,SELECT AVG(level_of_membership) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member_attendance.performance_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67491,What is the total number of performances by age range?,SELECT COUNT(*) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member.age,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
67493,What is the average height of people born in the 1990s?,SELECT AVG(height) FROM people WHERE birth_date BETWEEN '1990-01-01' AND '1999-12-31',"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67494,How many people were born in the 1990s?,SELECT COUNT(*) FROM people WHERE birth_date BETWEEN '1990-01-01' AND '1999-12-31',"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67495,What is the name of the people who were born in the 1980s?,SELECT name FROM people WHERE birth_date BETWEEN '1980-01-01' AND '1989-12-31',"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67496,Which people are more than 1.8 meters tall?,SELECT name FROM people WHERE height > 1.80,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67499,How many people killed and injured did the perpetrator kill?,SELECT SUM(killed) FROM perpetrator WHERE killed > 0,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67501,What is the total number of perpetrator and incidents?,SELECT COUNT(*) FROM perpetrator,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67503,Which person killed the most people?,"SELECT perpetrator_id, SUM(killed) FROM perpetrator GROUP BY perpetrator_id ORDER BY SUM(killed) DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67504,Who killed the most people in each country?,"SELECT perpetrator_id, country, SUM(killed) FROM perpetrator GROUP BY perpetrator_id, country ORDER BY SUM(killed) DESC","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67505,What is the average year of the perpetrator incidents?,SELECT AVG(year) FROM perpetrator,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67511,What is the average number of people injured per year?,SELECT AVG(injured) FROM perpetrator,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67512,What is the total number of people injured in each country?,"SELECT country, SUM(injured) FROM perpetrator GROUP BY country","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67513,What is the total number of people injured in each location?,"SELECT location, SUM(injured) FROM perpetrator GROUP BY location","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67514,What is the total number of people killed in each country?,"SELECT country, SUM(killed) FROM perpetrator GROUP BY country","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67516,What is the total number of perpetrator incidents in each country and location?,"SELECT country, location, COUNT(*) FROM perpetrator GROUP BY country, location","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67517,What is the average number of people killed per crime?,SELECT AVG(killed) FROM perpetrator,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67519,What is the total number of people injured and killed in each country?,"SELECT country, SUM(killed + injured) FROM perpetrator GROUP BY country","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67520,What is the total number of people injured and killed in each location?,"SELECT location, SUM(killed + injured) FROM perpetrator GROUP BY location","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
67521,What is the average RAM size of chip models launched in 2020?,SELECT AVG(c.ram_mib) FROM chip_model c WHERE c.launch_year = 2020;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67522,What is the average launch year of chip models by each company?,"SELECT AVG(c.launch_year) AS average_launch_year, p.company_name FROM phone p JOIN chip_model c ON p.chip_model = c.model_name GROUP BY p.company_name ORDER BY p.company_name;","
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67523,What is the average RAM size of chip models with more than 6GB RAM?,SELECT AVG(c.ram_mib) FROM chip_model c WHERE c.ram_mib > 6000;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67524,What is the number of phone models with accreditation level 'B' and chip model 'Snapdragon 888'?,SELECT COUNT(*) FROM phone p WHERE p.accreditation_level = 'B' AND p.chip_model = 'Snapdragon 888';,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67525,What is the average launch year of chip models in ascending order?,SELECT AVG(c.launch_year) AS average_launch_year FROM chip_model c ORDER BY average_launch_year;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67526,Which companies have launched chip models with ROM size more than 4GB?,SELECT DISTINCT p.company_name FROM phone p WHERE p.chip_model IN (SELECT c.model_name FROM chip_model c WHERE c.rom_mib > 4000);,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67527,Which phone models have been accredited with level 'B'?,SELECT DISTINCT p.hardware_model_name FROM phone p WHERE p.accreditation_level = 'B';,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67528,Which chip models have ROM size more than 2GB?,SELECT DISTINCT c.model_name FROM chip_model c WHERE c.rom_mib > 2000;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
67529,What is the number of cities in each country?,"SELECT country, number_cities, COUNT(*)  FROM market GROUP BY country, number_cities","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67530,Get top 3 countries by number of cities.,"SELECT country, SUM(number_cities) AS total_cities FROM market GROUP BY country ORDER BY total_cities DESC LIMIT 3","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67531,Get phones with accreditation_level = 'middle',SELECT * FROM phone WHERE accreditation_level = 'middle',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67533,List all countries with more than 5 cities.,SELECT country FROM market WHERE number_cities > 5,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67535,Get the phones with screen_mode = 'gps',SELECT * FROM phone WHERE screen_mode = 'gps',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67537,Show all phones with accreditation_type = 'a',SELECT * FROM phone WHERE accreditation_type = 'a',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67539,Show top 2 companies.,SELECT DISTINCT company_name FROM phone LIMIT 2,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67540,Show top 2 largest phone numbers in stock.,"SELECT phone_id, num_of_stock FROM phone_market ORDER BY num_of_stock DESC LIMIT 2","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67541,"Get the phone market stats: market_id, phone_id, and average num_of_stock.","SELECT market_id, AVG(num_of_stock) AS avg_stock FROM phone_market GROUP BY market_id","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67542,Get the total number of phones in the market sorted by date.,"SELECT date, COUNT(*) FROM phone GROUP BY date ORDER BY date","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67543,Get the distribution of hardware_model_name for phones.,"SELECT hardware_model_name, COUNT(*) FROM phone GROUP BY hardware_model_name","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67544,Show all phones with accreditation_level != 'low',SELECT * FROM phone WHERE accreditation_level != 'low',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67545,Show all markets with number_cities > 10.,SELECT * FROM market WHERE number_cities > 10,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67546,Get the total number of phones in the market sorted by accreditation_type.,"SELECT accreditation_type, COUNT(*) FROM phone GROUP BY accreditation_type","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67547,Get the phones with chip_model = 'cpu',SELECT * FROM phone WHERE chip_model = 'cpu',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67548,"Show market stats: country, number_cities, and average number_cities, with low number_cities first.","SELECT country, AVG(number_cities) AS avg_cities FROM market GROUP BY country ORDER BY avg_cities","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67549,"Get the phone market stats: market_id, phone_id, and sum(num_of_stock).","SELECT market_id, SUM(num_of_stock) AS total_stock FROM phone_market GROUP BY market_id","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67550,Get the total number of phones in the market sorted by hardware_model_name.,"SELECT hardware_model_name, COUNT(*) FROM phone GROUP BY hardware_model_name ORDER BY hardware_model_name","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67551,Get the phones with screen_mode = 'map',SELECT * FROM phone WHERE screen_mode = 'map',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67552,"Get the distribution of accreditation_level for phones, but only those with accreditation_type = 'b'.","SELECT accreditation_level, COUNT(*) FROM phone WHERE accreditation_type = 'b' GROUP BY accreditation_level","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67553,Get the phones with accreditation_level = 'high',SELECT * FROM phone WHERE accreditation_level = 'high',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67554,Get the total number of phones in the market sorted by date and accreditation_type.,"SELECT date, accreditation_type, COUNT(*) FROM phone GROUP BY date, accreditation_type ORDER BY date, accreditation_type","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67557,Get the total number of phones in the market sorted by accreditation_level.,"SELECT accreditation_level, COUNT(*) FROM phone GROUP BY accreditation_level ORDER BY accreditation_level","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67558,Get the phones with chip_model = 'ram',SELECT * FROM phone WHERE chip_model = 'ram',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67559,Show top 2 countries with the highest average number_cities.,"SELECT country, AVG(number_cities) AS avg_cities FROM market GROUP BY country ORDER BY avg_cities DESC LIMIT 2","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67560,Get the total number of phones in the market sorted by accreditation_type and hardware_model_name.,"SELECT accreditation_type, hardware_model_name, COUNT(*) FROM phone GROUP BY accreditation_type, hardware_model_name ORDER BY accreditation_type, hardware_model_name","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
67564,List all pilots and their aircraft,"SELECT p.name, a.aircraft FROM pilot AS p JOIN pilot_record AS pr ON p.pilot_id = pr.pilot_id JOIN aircraft AS a ON pr.aircraft_id = a.aircraft_id","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
67566,List all pilots born after 1990,SELECT * FROM pilot WHERE age > 29,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
67567,List all pilots born in the 80s,SELECT * FROM pilot WHERE age BETWEEN 31 AND 40,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
67571,What is the average length of a pilot's record?,"SELECT AVG(EXTRACT(EPOCH FROM TO_TIMESTAMP(date, 'YYYY-MM-DD') - current_timestamp)) FROM pilot_record","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
67572,What is the earliest pilot's record?,SELECT * FROM pilot_record ORDER BY date LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
67577,Who are the top 3 poker players by final table made?,SELECT * FROM poker_player ORDER BY final_table_made DESC LIMIT 3;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67580,Who is the best finisher in poker?,SELECT * FROM poker_player ORDER BY best_finish DESC LIMIT 1;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67582,What is the top 3 money ranks for poker players?,SELECT * FROM poker_player ORDER BY money_rank DESC LIMIT 3;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67583,What is the total money made by poker players?,SELECT SUM(money_rank) FROM poker_player;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67584,How many countries do people come from?,SELECT DISTINCT birth_place FROM people;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67585,What is the average earnings by final table made?,SELECT AVG(earnings) FROM poker_player GROUP BY final_table_made;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67587,Who is the most frequent player in final tables?,SELECT * FROM poker_player ORDER BY final_table_made DESC LIMIT 1;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67589,What is the total final table made?,SELECT SUM(final_table_made) FROM poker_player;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67592,Who is the worst finisher in poker?,SELECT * FROM poker_player ORDER BY best_finish ASC LIMIT 1;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
67602,What is the count of each unique channel?,"SELECT channel_id, COUNT(*) FROM channel GROUP BY channel_id;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67603,What is the average rating of each channel?,"SELECT channel_id, AVG(rating_in_percent) FROM channel GROUP BY channel_id;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67604,What is the share of each channel on any given day?,"SELECT channel_id, date, share_in_percent FROM broadcast_share WHERE channel_id NOT IN (SELECT channel_id FROM channel WHERE owner = ' competitor');","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67605,What is the average launch year of each origin?,"SELECT origin, AVG(launch) FROM program GROUP BY origin;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67606,What is the combined share of channel owners 'X' and 'Y'?,"SELECT SUM(share_in_percent) FROM channel WHERE owner IN ('X', 'Y');","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67607,What is the channel with the highest rating?,"SELECT channel_id, AVG(rating_in_percent) FROM channel GROUP BY channel_id ORDER BY AVG(rating_in_percent) DESC LIMIT 1;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67608,What is the daily view share of each channel?,"SELECT channel_id, date, share_in_percent FROM broadcast_share;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67609,What is the combined share of all channels?,SELECT SUM(share_in_percent) FROM channel;,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67610,What is the daily share of each channel on a specific day?,"SELECT channel_id, date, share_in_percent FROM broadcast_share WHERE date = '2020-07-26';","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67612,What is the rating of each channel?,"SELECT channel_id, rating_in_percent FROM channel;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67613,What is the start date of each program?,"SELECT program_id, launch FROM program;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67614,What is the combined start date of programs from 'Origin X'?,SELECT MIN(launch) FROM program WHERE origin = 'Origin X';,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67615,What is the starting year of programs from 'Origin Y'?,SELECT MIN(launch) FROM program WHERE origin = 'Origin Y';,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67616,What is the daily view share of each channel owner?,"SELECT owner, SUM(share_in_percent) FROM channel GROUP BY owner;","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
67618,What are the top 5 most popular tracks by album id?,"SELECT albumid, COUNT(*) FROM track GROUP BY albumid ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67619,What is the average unit price of tracks by genre?,"SELECT genreid, AVG(unitprice) FROM track GROUP BY genreid;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67621,What is the number of tracks by composer?,"SELECT composer, COUNT(*) FROM track GROUP BY composer;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67622,What are the top 2 most expensive tracks?,SELECT * FROM track ORDER BY unitprice DESC LIMIT 2;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67623,What is the average duration of tracks by mediatype?,"SELECT mediatypeid, AVG(milliseconds) FROM track GROUP BY mediatypeid;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67624,What is the number of races by track name?,"SELECT track_id, COUNT(*) FROM race GROUP BY track_id;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67626,What are the top 2 most popular genres?,"SELECT genreid, COUNT(*) FROM track GROUP BY genreid ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67627,What is the average price of tracks by composer?,"SELECT composer, AVG(unitprice) FROM track GROUP BY composer;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67628,What are the top 3 most expensive tracks by album id?,"SELECT albumid, unitprice FROM track ORDER BY unitprice DESC LIMIT 3;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67629,What is the number of tracks by mediatype?,"SELECT mediatypeid, COUNT(*) FROM track GROUP BY mediatypeid;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67630,What are the top 2 cheapest tracks?,SELECT * FROM track ORDER BY unitprice ASC LIMIT 2;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67631,What is the average duration of tracks by track name?,"SELECT name, AVG(milliseconds) FROM track GROUP BY name;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67634,What are the top 3 shortest tracks?,SELECT * FROM track ORDER BY milliseconds ASC LIMIT 3;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67635,What is the average price of tracks by album name?,"SELECT name, AVG(unitprice) FROM track GROUP BY name;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67636,What are the top 2 most popular tracks by byte size?,"SELECT bytes, COUNT(*) FROM track GROUP BY bytes ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67638,What are the top 5 longest tracks by track name?,"SELECT name, milliseconds FROM track ORDER BY milliseconds DESC LIMIT 5;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67639,What are the top 2 most expensive tracks by genre id?,"SELECT genreid, unitprice FROM track ORDER BY unitprice DESC LIMIT 2;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67641,What are the top 3 cheapest tracks by track name?,"SELECT name, unitprice FROM track ORDER BY unitprice ASC LIMIT 3;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67643,What are the top 2 most popular albums by composer?,"SELECT composer, COUNT(*) FROM track GROUP BY composer ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67645,What is the average duration of tracks by genre?,"SELECT genreid, AVG(milliseconds) FROM track GROUP BY genreid;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67646,What are the top 2 most expensive tracks by album id?,"SELECT albumid, unitprice FROM track ORDER BY unitprice DESC LIMIT 2;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
67651,How many roller coasters are there opens?,SELECT COUNT(*) FROM roller_coaster WHERE status = 'open',"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
67653,What are the top 5 roller coasters in terms of length?,"SELECT name, length FROM roller_coaster ORDER BY length DESC LIMIT 5","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
67654,What are the top 5 roller coasters in terms of height?,"SELECT name, height FROM roller_coaster ORDER BY height DESC LIMIT 5","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
67655,What are the top 5 roller coasters in terms of speed and height?,"SELECT * FROM roller_coaster ORDER BY speed DESC, height DESC LIMIT 5","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
67658,Number of schools serving elementary students?,SELECT COUNT(*) FROM school WHERE grade='Elementary',"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
67659,List all schools?,SELECT * FROM school,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
67663,List schools offering elementary education?,SELECT * FROM school WHERE grade LIKE '%Elementary%',"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
67664,What is the total number of drivers working at schools?,SELECT COUNT(*) FROM driver JOIN school_bus ON driver.driver_id=school_bus.driver_id,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
67665,Number of schools serving high school students?,SELECT COUNT(*) FROM school WHERE grade='High School',"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
67667,List schools offering high school education?,SELECT * FROM school WHERE grade LIKE '%High School%',"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
67669,What is the total number of ships lost in battle?,SELECT SUM(lost_in_battle) FROM ship,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67670,List all ships by disposition of ship,SELECT * FROM ship,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67672,What are the top 3 ships by name in alphabetical order?,SELECT name FROM ship ORDER BY name LIMIT 3,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67673,What are the top 3 ships by tonnage in descending order?,SELECT * FROM ship ORDER BY tonnage DESC LIMIT 3,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67674,What are the total number of missions per year?,"SELECT launched_year, COUNT(*) FROM mission GROUP BY launched_year","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67676,What is the total number of missions by code?,"SELECT code, COUNT(*) FROM mission GROUP BY code","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67677,What are the top 3 ships by tonnage in ascending order?,SELECT * FROM ship ORDER BY tonnage ASC LIMIT 3,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67680,What are the top 3 missions by code in descending order?,SELECT * FROM mission ORDER BY code DESC LIMIT 3,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67681,What is the total number of missions per year and location?,"SELECT launched_year, location, COUNT(*) FROM mission GROUP BY launched_year, location","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67682,What are the locations of missions?,"SELECT location, COUNT(*) FROM mission GROUP BY location","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67684,What are the top 3 missions by code in ascending order?,SELECT * FROM mission ORDER BY code ASC LIMIT 3,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67685,What are the total number of ships by ship type and location?,"SELECT ship_type, location, COUNT(*) FROM ship GROUP BY ship_type, location","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67686,What are the top 3 ships by name in descending order?,SELECT name FROM ship ORDER BY name DESC LIMIT 3,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67688,What is the average speed of ships by code?,"SELECT code, AVG(speed_knots) FROM mission GROUP BY code","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67690,"List all members whose membership level is 1, ordered by age descending",SELECT * FROM member WHERE level_of_membership = 1 ORDER BY age DESC,"
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67691,List all branches that have more than 50 members,"SELECT branch_id, COUNT(*) AS num_members FROM membership_register_branch GROUP BY branch_id HAVING COUNT(*) > 50","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67692,What is the number of members at each level of membership in the 'East' city,"SELECT level_of_membership, COUNT(*) FROM member WHERE address LIKE '%East%' GROUP BY level_of_membership","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67695,What is the average total pounds spent per branch,SELECT AVG(total_pounds) AS avg_spent FROM purchase GROUP BY branch_id,"
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67696,Show all branches where more than 50% of the members have a level of membership 1,"SELECT branch_id, COUNT(*) AS num_members FROM membership_register_branch m JOIN member m2 ON m.member_id = m2.member_id GROUP BY branch_id HAVING COUNT(*) > (SELECT COUNT(*) * 0.5 FROM member WHERE level_of_membership = 1)","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67698,List all branches that have more than 20% of the members with a level of membership 1,"SELECT branch_id, COUNT(*) AS num_members FROM membership_register_branch m JOIN member m2 ON m.member_id = m2.member_id WHERE level_of_membership = 1 GROUP BY branch_id HAVING COUNT(*) > (SELECT COUNT(*) * 0.2 FROM member WHERE level_of_membership = 1)","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67699,What is the number of branches with more than 50 members,SELECT COUNT(*) AS num_branches FROM (SELECT branch_id FROM membership_register_branch GROUP BY branch_id HAVING COUNT(*) > 50) AS temp,"
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67701,List all branches that have more than 20 members,"SELECT branch_id, COUNT(*) AS num_members FROM membership_register_branch GROUP BY branch_id HAVING COUNT(*) > 20","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
67709,Which singer released the most songs?,"SELECT singer.name, COUNT(*) FROM singer, song WHERE singer.singer_id = song.f_id GROUP BY singer.name ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67711,What is the average rating of songs released in the 00s?,SELECT AVG(rating) FROM song WHERE EXTRACT(YEAR FROM releasedate) BETWEEN 2000 AND 2009,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67712,What is the most popular language?,"SELECT languages, COUNT(*) FROM song GROUP BY languages ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67713,Which country has the lowest song rating?,"SELECT country, AVG(rating) FROM song GROUP BY country ORDER BY AVG(rating) ASC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67715,What is the average resolution of songs released in the 90s?,SELECT AVG(resolution) FROM song WHERE EXTRACT(YEAR FROM releasedate) BETWEEN 1990 AND 1999,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67717,What is the most popular language in a specific country?,"SELECT country, languages, COUNT(*) FROM song GROUP BY country, languages ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67720,What is the average rating of songs with high resolution?,SELECT AVG(rating) FROM song WHERE resolution > 800,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67721,What is the most popular song of the 90s?,SELECT song_name FROM song WHERE EXTRACT(YEAR FROM releasedate) BETWEEN 1990 AND 1999 ORDER BY rating DESC LIMIT 1;,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67722,What is the most popular genre in a specific country?,"SELECT country, genre_is, COUNT(*) FROM song GROUP BY country, genre_is ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67723,What is the average age of singers from Germany?,SELECT AVG(age) FROM singer WHERE country = 'Germany';,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67724,What is the most popular language in a specific genre?,"SELECT genre_is, languages, COUNT(*) FROM song GROUP BY genre_is, languages ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67725,Which singer released the most songs in the 80s?,"SELECT singer.name, COUNT(*) FROM singer, song WHERE singer.singer_id = song.f_id AND EXTRACT(YEAR FROM song.releasedate) BETWEEN 1980 AND 1989 GROUP BY singer.name ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67726,What is the average rating of songs with low resolution?,SELECT AVG(rating) FROM song WHERE resolution < 600,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67727,What is the most popular song of all time?,SELECT song_name FROM song ORDER BY rating DESC LIMIT 1;,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
67728,What are the top 5 clubs ranked by overall total wins?,"SELECT c.clubname, SUM(cr.total) AS total_wins FROM club_rank cr JOIN club c ON cr.club_id = c.clubid GROUP BY c.clubname ORDER BY total_wins DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67729,Who are the top 5 players by birth year?,"SELECT p.name_first, p.birth_year FROM player p ORDER BY p.birth_year DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67730,Who is the oldest player in the database?,"SELECT p.name_first, p.birth_year FROM player p ORDER BY p.birth_year ASC LIMIT 1","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67731,Who are the top 5 players by height?,"SELECT p.name_first, p.height FROM player p ORDER BY p.height DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67732,What is the total score of the club with the highest average gold medal count?,SELECT AVG(gold) AS avg_gold FROM club_rank,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67733,Who is the youngest player in the database?,"SELECT p.name_first, p.birth_year FROM player p ORDER BY p.birth_year DESC LIMIT 1","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67734,What is the total score of the club with the highest average silver medal count?,SELECT AVG(silver) AS avg_silver FROM club_rank,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67735,What are the top 5 clubs by total wins?,"SELECT c.clubname, SUM(total) AS total_wins FROM club_rank cr JOIN club c ON cr.club_id = c.clubid GROUP BY c.clubname ORDER BY total_wins DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67736,Who are the top 5 players by weight?,"SELECT p.name_first, p.weight FROM player p ORDER BY p.weight DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67737,What is the total score of the club with the highest average bronze medal count?,SELECT AVG(bronze) AS avg_bronze FROM club_rank,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67738,Who is the heaviest player in the database?,"SELECT p.name_first, p.weight FROM player p ORDER BY p.weight DESC LIMIT 1","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67739,Who are the top 5 players by height?,"SELECT p.name_first, p.height FROM player p ORDER BY p.height ASC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67740,What is the total score of the club with the highest average medal count?,SELECT AVG(total) AS avg_total FROM club_rank,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE club_rank (
	rank REAL, 
	club_id INTEGER, 
	gold REAL, 
	silver REAL, 
	bronze REAL, 
	total REAL
)


CREATE TABLE competition (
	competition_id INTEGER, 
	year REAL, 
	competition_type TEXT, 
	country TEXT
)


CREATE TABLE competition_result (
	competition_id INTEGER, 
	club_id_1 INTEGER, 
	club_id_2 INTEGER, 
	score TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)"
67741,What are the available album types?,SELECT distinct type FROM albums ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67742,What is the total number of customers?,SELECT COUNT(*) FROM customers ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67743,What are the unique customer email addresses?,SELECT distinct customer_email_address FROM customers ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67744,What is the total number of employees?,SELECT COUNT(*) FROM employees ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67745,What are the available genres?,SELECT distinct name FROM genres ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67746,What are the top 5 genres by total tracks?,"SELECT g.name, COUNT(t.id) as total_tracks FROM genres g JOIN tracks t ON g.id = t.genre_id GROUP BY g.name ORDER BY total_tracks DESC LIMIT 5 ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67747,What is the total number of invoices?,SELECT COUNT(*) FROM invoices ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67748,What are the non-cancelled invoices?,SELECT * FROM invoices WHERE payment_method_code != 'C';,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67749,What are the top 5 invoices by total revenue?,"SELECT i.invoice_id, SUM(il.unit_price * il.quantity) as total_revenue FROM invoices i JOIN invoice_lines il ON i.invoice_id = il.invoice_id GROUP BY i.invoice_id ORDER BY total_revenue DESC ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67750,What is the average order value?,"SELECT AVG(total_revenue) as average_order_value FROM (SELECT i.invoice_id, SUM(il.unit_price * il.quantity) as total_revenue FROM invoices i JOIN invoice_lines il ON i.invoice_id = il.invoice_id GROUP BY i.invoice_id) as subquery ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67751,What is the total number of media types?,SELECT COUNT(*) FROM media_types ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67752,What are the top 5 media types by total tracks?,"SELECT m.name, COUNT(t.id) as total_tracks FROM media_types m JOIN tracks t ON m.id = t.media_type_id GROUP BY m.name ORDER BY total_tracks DESC LIMIT 5 ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67753,What is the total number of playlists?,SELECT COUNT(*) FROM playlists ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67754,What are the top 5 playlists by total tracks?,"SELECT p.name, COUNT(pt.track_id) as total_tracks FROM playlists p JOIN playlist_tracks pt ON p.id = pt.playlist_id GROUP BY p.name ORDER BY total_tracks DESC LIMIT 5 ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67755,What are the top 5 albums by total tracks?,"SELECT a.title, COUNT(t.id) as total_tracks FROM albums a JOIN tracks t ON a.aid = t.album_id GROUP BY a.title ORDER BY total_tracks DESC LIMIT 5 ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67756,What is the total number of tracks?,SELECT COUNT(*) FROM tracks ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67757,What are the top 5 tracks by total sales?,"SELECT t.name, SUM(il.unit_price * il.quantity) as total_sales FROM tracks t JOIN invoice_lines il ON t.id = il.track_id GROUP BY t.name ORDER BY total_sales DESC LIMIT 5 ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67758,What is the average track length?,SELECT AVG(milliseconds) as average_track_length FROM tracks ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67759,What is the total number of tracks by album?,"SELECT a.title, COUNT(t.id) as total_tracks FROM albums a JOIN tracks t ON a.aid = t.album_id GROUP BY a.title ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67760,What are the top 5 tracks by highest price?,"SELECT t.name, t.unit_price as price FROM tracks t ORDER BY price DESC LIMIT 5 ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67761,What is the total number of invoices by track?,"SELECT t.name, COUNT(il.invoice_id) as total_invoices FROM tracks t JOIN invoice_lines il ON t.id = il.track_id GROUP BY t.name ;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67763,What is the average album release year?,SELECT AVG(year) as average_album_release_year FROM albums ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67765,What is the total number of artists?,SELECT COUNT(*) FROM artists ;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
67766,What is the number of teachers having 'Male' gender?,SELECT COUNT(*) FROM teachers WHERE gender = 'Male';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67770,What is the average grade of the students in class 2?,SELECT AVG(grade) AS average_grade FROM list WHERE classroom = 2;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67771,What is the name and email of all teachers?,"SELECT first_name, middle_name, last_name, email_address FROM teachers;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67773,How many students are in grade 3?,SELECT COUNT(*) FROM list WHERE grade = 3;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67774,List all teachers with 'DOUBLiE' as a detail in their profile,SELECT * FROM teachers WHERE other_details = 'DOUBLiE';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67775,What is the average age of the students in class 1?,SELECT AVG(grade) AS average_grade FROM list WHERE classroom = 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67776,What is the number of students in each class sorted by the number of students in descending order?,"SELECT classroom, COUNT(*) AS num_students FROM list GROUP BY classroom ORDER BY num_students DESC;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67777,What is the total number of students in each grade?,"SELECT grade, COUNT(*) AS total_students FROM list GROUP BY grade;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67778,Find the students older than 15 years,SELECT * FROM list WHERE grade > 15;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67779,Find the students in each class having a grade lower than 3,SELECT * FROM list WHERE grade < 3;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67780,Find the list of students with a grade higher than 8,SELECT * FROM list WHERE grade > 8;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67782,Find the students older than 12 years,SELECT * FROM list WHERE grade > 12;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67783,What is the list of students with a grade equal to 6?,SELECT * FROM list WHERE grade = 6;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67785,What is the total number of students in each class having a grade higher than 3?,"SELECT classroom, COUNT(*) AS total_students FROM list WHERE grade > 3 GROUP BY classroom;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67786,Find the list of students sorted by age in ascending order?,SELECT * FROM list ORDER BY grade ASC;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67787,Find the students older than 10 years,SELECT * FROM list WHERE grade > 10;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67788,What is the number of teachers with 'John' as a first name?,SELECT COUNT(*) FROM teachers WHERE first_name = 'John';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67789,What is the list of students with a grade equal to 9?,SELECT * FROM list WHERE grade = 9;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67790,What is the total number of students having a grade higher than 6?,SELECT COUNT(*) FROM list WHERE grade > 6;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67792,What is the number of teachers having 'Jane' as a last name?,SELECT COUNT(*) FROM teachers WHERE last_name = 'Jane';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67793,Find the students with a grade equal to 4?,SELECT * FROM list WHERE grade = 4;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67795,What is the list of students with a grade lower than 5?,SELECT * FROM list WHERE grade < 5;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67796,Find the students with a grade higher than 7?,SELECT * FROM list WHERE grade > 7;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
67799,What is the name of the fastest swimmer in the 200-meter race?,SELECT name FROM swimmer WHERE meter_200 = (SELECT MIN(time) FROM swimmer),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67800,What is the capacity of the stadium?,SELECT capacity FROM stadium,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67802,What is the nationality of the fastest swimmer in the 200-meter race?,SELECT nationality FROM swimmer WHERE meter_200 = (SELECT MIN(time) FROM swimmer),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67803,What is the name of the slowest swimmer in the 400-meter race?,SELECT name FROM swimmer WHERE meter_400 = (SELECT MAX(time) FROM swimmer),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67804,What is the highest attendance of any event that took place in a specific venue?,SELECT event_attendance FROM event WHERE event_attendance = (SELECT MAX(event_attendance) FROM event) AND venue = 'specific_venue',"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67805,What is the average attendance of all events at a specific venue?,SELECT AVG(event_attendance) FROM event WHERE venue = 'specific_venue',"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67806,What is the highest attendance of any event with a specific date?,SELECT event_attendance FROM event WHERE date = 'specific_date' AND event_attendance = (SELECT MAX(event_attendance) FROM event),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67807,What is the highest attendance of any event at a specific venue with a specific date?,SELECT event_attendance FROM event WHERE date = 'specific_date' AND event_attendance = (SELECT MAX(event_attendance) FROM event) AND venue = 'specific_venue',"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
67808,Which theme had the most exhibitions?,"SELECT theme, COUNT(*) FROM exhibition GROUP BY theme ORDER BY 2 DESC LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
67809,Which theme had the fewest exhibitions?,"SELECT theme, COUNT(*) FROM exhibition GROUP BY theme ORDER BY 2 LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
67810,Which theme had the most exhibitions in the year 2019?,"SELECT theme, COUNT(*) FROM exhibition WHERE exhibition.year = 2019 GROUP BY theme ORDER BY 2 DESC LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
67811,Which theme had the fewest exhibitions in the year 2020?,"SELECT theme, COUNT(*) FROM exhibition WHERE exhibition.year = 2020 GROUP BY theme ORDER BY 2 LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
67812,Which theme had the most exhibitions in the year 2017?,"SELECT theme, COUNT(*) FROM exhibition WHERE exhibition.year = 2017 GROUP BY theme ORDER BY 2 DESC LIMIT 1","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
67813,What is the number of stations with a specific city?,"SELECT name, city, COUNT(*) FROM station WHERE city = 'New York' GROUP BY name, city","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67814,What are the top 5 most frequent stations?,"SELECT station_id, COUNT(*) as frequency FROM train_station GROUP BY station_id ORDER BY frequency DESC LIMIT 5","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67815,What is the train schedule for a specific origin and destination?,SELECT * FROM train WHERE origin = 'New York' AND destination = 'Los Angeles',"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67816,What is the total number of trains arriving at a specific station?,SELECT COUNT(*) as total_trains FROM train WHERE id IN (SELECT train_id FROM train_station WHERE station_id = 1),"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67817,What is the average train number of a specific city?,SELECT AVG(train_number) FROM train WHERE origin IN (SELECT name FROM station WHERE city = 'New York'),"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67818,How many trains pass through a specific city?,SELECT COUNT(DISTINCT train_id) as unique_trains FROM train_station WHERE station_id IN (SELECT id FROM station WHERE city = 'New York'),"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67820,What is the total number of trains passing through all stations?,SELECT COUNT(*) as total_trains FROM train,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67821,What are the top 5 most frequent train numbers?,"SELECT train_number, COUNT(*) as frequency FROM train GROUP BY train_number ORDER BY frequency DESC LIMIT 5","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67822,What is the total number of trains departing from all stations?,SELECT COUNT(*) as total_trains FROM train WHERE origin != 'destination',"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67823,What is the train schedule for a specific time?,SELECT * FROM train WHERE time = '08:00',"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67824,What are the earliest and latest trains arriving at a specific station?,"SELECT MIN(time), MAX(time) FROM train WHERE id IN (SELECT train_id FROM train_station WHERE station_id = 1)","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67825,What is the total number of stations?,SELECT COUNT(*) as total_stations FROM station,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67826,What is the total number of trains stopping at a specific station?,SELECT COUNT(DISTINCT train_id) as unique_trains FROM train_station WHERE station_id = 1,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67827,What is the train schedule for a specific origin and destination at a specific time?,SELECT * FROM train WHERE origin = 'New York' AND destination = 'Los Angeles' AND time = '08:00',"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67828,What are the top 5 most frequent stations for a specific city?,"SELECT s.name, COUNT(*) as frequency FROM station s JOIN train_station ts ON s.id = ts.station_id GROUP BY s.name ORDER BY frequency DESC LIMIT 5","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67829,What is the total number of trains arriving at a specific station at a specific time?,SELECT COUNT(*) as total_trains FROM train WHERE id IN (SELECT train_id FROM train_station WHERE station_id = 1) AND time = '08:00',"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67830,What are the earliest and latest trains departing from a specific city?,"SELECT MIN(time), MAX(time) FROM train WHERE origin = 'New York'","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67831,What is the total number of trains passing through a specific city?,SELECT COUNT(*) as total_trains FROM train WHERE origin IN (SELECT name FROM station WHERE city = 'New York'),"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67833,What is the train schedule for a specific interval?,SELECT * FROM train WHERE interval = '2 hours',"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
67837,Who are the top 5 users with most tweets?,"SELECT uid, COUNT(*) AS tweet_count FROM tweets GROUP BY uid ORDER BY tweet_count DESC LIMIT 5;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67839,Who follows who?,"SELECT f1, f2 FROM follows;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67840,What is the average number of followers for each user?,SELECT AVG(followers) AS avg_followers FROM user_profiles;,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67841,Who has the most followers?,"SELECT uid, followers FROM user_profiles ORDER BY followers DESC LIMIT 1;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67842,What is the total number of followers across all users?,SELECT SUM(followers) AS total_followers FROM user_profiles;,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67843,Who sent the most tweets?,"SELECT uid, COUNT(*) AS tweet_count FROM tweets GROUP BY uid ORDER BY tweet_count DESC LIMIT 1;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67844,What is the total number of tweets for each user?,"SELECT uid, COUNT(*) AS tweet_count FROM tweets GROUP BY uid;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67845,What are the top 5 users with most followers?,"SELECT uid, followers FROM user_profiles ORDER BY followers DESC LIMIT 5;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67846,Who has the least followers?,"SELECT uid, followers FROM user_profiles ORDER BY followers ASC LIMIT 1;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67847,What are the top 5 tweets in terms of word count?,"SELECT text, LENGTH(text) AS word_count FROM tweets ORDER BY word_count DESC LIMIT 5;","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67851,What is the total number of tweets across all partitions?,SELECT COUNT(*) AS tweet_count FROM tweets;,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
67855,What are the top 3 most common grape types?,"SELECT COUNT(*), grape FROM grapes GROUP BY grape ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67856,Which winery has the highest average price?,"SELECT AVG(price), winery FROM wine GROUP BY winery ORDER BY AVG(price) DESC LIMIT 1;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67857,What are the top 3 most expensive wines?,"SELECT name, price FROM wine ORDER BY price DESC LIMIT 3;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67858,What is the total number of appellations?,SELECT COUNT(*) FROM appellations;,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67859,What are the top 3 most common appelations?,"SELECT COUNT(*), appelation FROM appellations GROUP BY appelation ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67861,What is the most common grape color?,"SELECT COUNT(*), color FROM grapes GROUP BY color ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67862,What are the top 3 most famous wineries?,"SELECT COUNT(*), winery FROM wine GROUP BY winery ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67863,What is the total number of wine records by grape?,"SELECT COUNT(*), grape FROM wine GROUP BY grape;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67864,Which grape has the highest average score?,"SELECT AVG(score), grape FROM wine GROUP BY grape ORDER BY AVG(score) DESC LIMIT 1;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67866,What is the average year of wine 'A'?,SELECT AVG(year) FROM wine WHERE name = 'A';,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67868,What is the average cases of wine 'A'?,SELECT AVG(cases) FROM wine WHERE name = 'A';,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67869,What are the top 3 most expensive wines from 'Napa Valley'?,"SELECT name, price FROM wine WHERE appelation = 'Napa Valley' ORDER BY price DESC LIMIT 3;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67870,What is the average cases of wine from 'Napa Valley'?,SELECT AVG(cases) FROM wine WHERE appelation = 'Napa Valley';,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67871,Which grape is used in the most wine records?,"SELECT COUNT(*), grape FROM wine GROUP BY grape ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67874,What is the average year of wines from 'Napa Valley'?,SELECT AVG(year) FROM wine WHERE appelation = 'Napa Valley';,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67875,Which appelation has the highest average price?,"SELECT AVG(price), appelation FROM wine GROUP BY appelation ORDER BY AVG(price) DESC LIMIT 1;","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67876,How many wines have a rating of 90 or higher?,SELECT COUNT(*) FROM wine WHERE score >= 90;,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67877,What is the average score of wine 'A'?,SELECT AVG(score) FROM wine WHERE name = 'A';,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67882,What is the average score of wines from 'Napa Valley'?,SELECT AVG(score) FROM wine WHERE appelation = 'Napa Valley';,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
67883,How many wines have a rating of 85 or higher?,SELECT COUNT(*) FROM wine WHERE score >= 85;,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
