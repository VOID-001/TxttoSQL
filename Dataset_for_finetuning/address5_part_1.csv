Unnamed: 0,question,query,schema
63337,What is the average age of members in each region?,"SELECT region_name, AVG(age) AS avg_age FROM member JOIN region ON member.address = region.label GROUP BY region_name","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63338,What are the top 2 most recent events organized by the party?,"SELECT event_name, COUNT(*) AS frequency FROM party_events GROUP BY event_name ORDER BY frequency DESC LIMIT 2","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63341,What are the top 4 most frequent regions with the most members?,"SELECT region_name, COUNT(*) AS member_count FROM member JOIN region ON member.address = region.label GROUP BY region_name ORDER BY member_count DESC LIMIT 4","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63342,What is the total number of party officials in each position?,"SELECT governor, COUNT(*) AS official_count FROM party GROUP BY governor","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63343,What are the top 2 most frequent party officials in each position?,"SELECT governor, COUNT(*) AS official_count FROM party GROUP BY governor ORDER BY official_count DESC LIMIT 2","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63344,How many members are there in the top 2 most recent regions?,"SELECT region_name, COUNT(*) AS member_count FROM member JOIN region ON member.address = region.label GROUP BY region_name ORDER BY member_count DESC LIMIT 2","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63346,What are the top 4 most frequent levels of membership purchases?,"SELECT level_of_membership, COUNT(*) AS frequency FROM member GROUP BY level_of_membership ORDER BY frequency DESC LIMIT 4","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63347,What is the average level of membership purchased by each member in each top 2 most recent region?,"SELECT region_name, AVG(level_of_membership) AS avg_level FROM member JOIN region ON member.address = region.label GROUP BY region_name","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63348,What is the total number of party officials in each top 2 most recent year?,"SELECT year, COUNT(*) AS official_count FROM party GROUP BY year ORDER BY year DESC LIMIT 2","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63353,What is the total number of party officials in each top 2 most recent year and position?,"SELECT year, governor, COUNT(*) AS official_count FROM party GROUP BY year, governor","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
63355,List the members with their membership level?,SELECT * FROM member ORDER BY level_of_membership;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63357,What is the oldest member?,SELECT * FROM member ORDER BY age DESC LIMIT 1;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63358,Name the members who have never attended a performance?,SELECT m.member_id FROM member m LEFT JOIN member_attendance ma ON m.member_id = ma.member_id WHERE ma.member_id IS NULL;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63359,What is the total number of performances attended by each member?,"SELECT m.name, COUNT(pa.member_id) AS total_attendances FROM member m JOIN member_attendance pa ON m.member_id = pa.member_id GROUP BY m.name;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63360,List the top 5 members who have attended the most performances?,"SELECT m.name, COUNT(pa.member_id) AS total_attendances FROM member m JOIN member_attendance pa ON m.member_id = pa.member_id GROUP BY m.name ORDER BY total_attendances DESC LIMIT 5;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63361,What is the average number of pieces played by members at each performance?,SELECT AVG(pa.num_of_pieces) FROM member m JOIN member_attendance pa ON m.member_id = pa.member_id GROUP BY pa.performance_id;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63362,Name the bands that performed at each performance?,"SELECT p.songid, p.bandmate FROM performance p;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63363,Name the stages at which members performed?,SELECT DISTINCT p.stageposition FROM performance p;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63364,How many members are there in each stage position?,"SELECT p.stageposition, COUNT(DISTINCT m.member_id) AS num_members FROM member m JOIN performance p ON m.member_id = p.bandmate GROUP BY p.stageposition;","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63365,What is the total number of members who performed at stage 'left'?,SELECT COUNT(DISTINCT m.member_id) AS num_members FROM member m JOIN performance p ON m.member_id = p.bandmate WHERE p.stageposition = 'left';,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63366,Name the members who have performed at stage 'left'?,SELECT DISTINCT m.name FROM member m JOIN performance p ON m.member_id = p.bandmate WHERE p.stageposition = 'left';,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63367,How many members have attended at least one performance?,SELECT COUNT(DISTINCT m.member_id) AS num_members FROM member m JOIN member_attendance pa ON m.member_id = pa.member_id LIMIT 1;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63368,Name the members who have attended at least two performances?,SELECT DISTINCT m.name FROM member m JOIN member_attendance pa ON m.member_id = pa.member_id GROUP BY m.name HAVING COUNT(pa.member_id) > 1;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63369,List the members who have attended between 2 and 4 performances?,SELECT DISTINCT m.name FROM member m JOIN member_attendance pa ON m.member_id = pa.member_id GROUP BY m.name HAVING COUNT(pa.member_id) BETWEEN 2 AND 4;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63370,List the members who performed at both 'left' and 'right' stages?,"SELECT DISTINCT m.name FROM member m JOIN performance p ON m.member_id = p.bandmate WHERE p.stageposition IN ('left', 'right');","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63372,What is the average number of members per performance?,SELECT AVG(p.bandmate) FROM performance p;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63373,Name the members who performed at 'left' stage and not at 'right' stage?,SELECT DISTINCT m.name FROM member m JOIN performance p ON m.member_id = p.bandmate WHERE p.stageposition = 'left' AND p.stageposition NOT IN ('right');,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63374,List the members who performed at any stage?,SELECT DISTINCT m.name FROM member m JOIN performance p ON m.member_id = p.bandmate;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63375,Name the members who have performed at 'left' stage with level of membership 0?,SELECT DISTINCT m.name FROM member m JOIN performance p ON m.member_id = p.bandmate WHERE p.stageposition = 'left' AND m.level_of_membership = 0;,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
63376,What is the total number of perpetrators in a specific year?,SELECT COUNT(*) FROM perpetrator WHERE year = 2015,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63377,Show all perpetrators and their corresponding crime statistics,SELECT * FROM perpetrator,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63379,What is the total number of people who were born in a specific city?,SELECT COUNT(*) FROM people WHERE birth_place = 'New York',"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63380,What is the average height of people who were born in a specific city and have a height above 175 cm?,SELECT AVG(height) FROM people WHERE birth_place = 'New York' AND height > 175,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63381,What is the total number of people who were born in a specific city and have a height above 175 cm?,SELECT COUNT(*) FROM people WHERE birth_place = 'New York' AND height > 175,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63382,What is the total number of people who were born in a specific city and have a height below 175 cm?,SELECT COUNT(*) FROM people WHERE birth_place = 'New York' AND height <= 175,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63383,What is the total number of people who were born in a specific city and have a height above or equal to 175 cm?,SELECT COUNT(*) FROM people WHERE birth_place = 'New York' AND height >= 175,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63385,Show all people's birth places and their corresponding average height,"SELECT birth_place, AVG(height) AS average_height FROM people GROUP BY birth_place","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
63386,What is the number of phones in each market?,"SELECT market_id, COUNT(phone_id) as total_phones FROM phone_market GROUP BY market_id","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63387,What is the number of phone models for each company?,"SELECT company_name, COUNT(DISTINCT hardware_model_name) as total_models FROM phone GROUP BY company_name","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63388,What is the accreditation type for each hardware model?,"SELECT hardware_model_name, accreditation_type FROM phone GROUP BY hardware_model_name, accreditation_type","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63389,What is the accreditation level for each company?,"SELECT company_name, MAX(accreditation_level) as max_accreditation_level FROM phone GROUP BY company_name","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63390,What is the minimum and maximum accreditation levels for each company?,"SELECT company_name, MIN(accreditation_level) as min_accreditation_level, MAX(accreditation_level) as max_accreditation_level FROM phone GROUP BY company_name","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63391,"What is the number of phone models for each company, grouped by accreditation type?","SELECT company_name, accreditation_type, COUNT(DISTINCT hardware_model_name) as total_models FROM phone GROUP BY company_name, accreditation_type","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63392,What is the number of phones with each chip model?,"SELECT chip_model, COUNT(*) as total_devices FROM phone GROUP BY chip_model","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63393,"What is the number of phones for each company, grouped by hardware model and accreditation type?","SELECT company_name, hardware_model_name, accreditation_type, COUNT(*) as total_devices FROM phone GROUP BY company_name, hardware_model_name, accreditation_type","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63394,"What is the number of cities for each country, excluding India?","SELECT country, COUNT(*) as total_cities FROM market WHERE country != 'India' GROUP BY country","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63395,"What is the number of phones in each market, excluding markets with fewer than 10 phones?","SELECT market_id, COUNT(phone_id) as total_phones FROM phone_market WHERE num_of_stock >= 10 GROUP BY market_id","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63396,What is the average number of stocks for each phone model?,SELECT AVG(num_of_stock) as avg_stocks FROM phone_market GROUP BY phone_id,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63397,What is the minimum and maximum number of stocks for each phone model?,"SELECT phone_id, MIN(num_of_stock) as min_stocks, MAX(num_of_stock) as max_stocks FROM phone_market GROUP BY phone_id","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63398,What is the maximum and minimum number of cities for each country?,"SELECT country, MIN(number_cities) as min_cities, MAX(number_cities) as max_cities FROM market GROUP BY country","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63399,"What is the number of cities for each country, excluding cities with fewer than 10,000 population?","SELECT country, COUNT(*) as total_cities FROM market WHERE number_cities >= 10000 GROUP BY country","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63400,"What is the number of phones in each market, excluding markets with fewer than 50 phones?","SELECT market_id, COUNT(phone_id) as total_phones FROM phone_market WHERE num_of_stock >= 50 GROUP BY market_id","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63401,"What is the number of phone models for each company, grouped by chip model and accreditation level?","SELECT company_name, chip_model, accreditation_level, COUNT(DISTINCT hardware_model_name) as total_models FROM phone GROUP BY company_name, chip_model, accreditation_level","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
63402,What is the maximum gross weight of the aircraft?,SELECT max(max_gross_weight) FROM aircraft;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63403,What is the total disk area of the aircraft?,SELECT max(total_disk_area) FROM aircraft;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63404,What is the maximum disk loading of the aircraft?,SELECT max(max_disk_loading) FROM aircraft;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63406,What is the earliest flight record?,SELECT * FROM pilot_record ORDER BY date LIMIT 1;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63407,What is the latest flight record?,SELECT * FROM pilot_record ORDER BY date DESC LIMIT 1;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63409,Which pilots have the most flights?,"SELECT pilot_id, COUNT(*) FROM pilot_record GROUP BY pilot_id ORDER BY COUNT(*) DESC;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63410,What is the aircraft with the most flights?,"SELECT aircraft_id, COUNT(*) FROM pilot_record GROUP BY aircraft_id ORDER BY COUNT(*) DESC;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63412,What is the average age of pilots who flew an aircraft?,SELECT AVG(p.age) FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id JOIN aircraft a ON pr.aircraft_id = a.aircraft_id GROUP BY p.age;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63413,What is the earliest flight record per pilot?,"SELECT pilot_id, MIN(date) FROM pilot_record GROUP BY pilot_id;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63414,What is the latest flight record per pilot?,"SELECT pilot_id, MAX(date) FROM pilot_record GROUP BY pilot_id;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63415,What is the total number of flights per aircraft?,"SELECT aircraft_id, COUNT(*) FROM pilot_record GROUP BY aircraft_id;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63416,What is the number of flights per day?,"SELECT date, COUNT(*) FROM pilot_record GROUP BY date;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
63418,What is the average height of people who have won poker tournaments?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63419,How many people have won poker tournaments?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63421,What is the average height of people who have made it to the final table?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE final_table_made = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63422,How many people have made it to the final table?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE final_table_made = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63423,What is the average earnings of poker players who have won poker tournaments?,SELECT AVG(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE best_finish = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63424,What is the average height of people who have won poker tournaments and have made it to the final table?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63425,How many people have won poker tournaments and have made it to the final table?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63426,What is the highest earnings of a poker player who has made it to the final table?,SELECT MAX(earnings) FROM poker_player WHERE final_table_made = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63427,What is the average weight of people who have won poker tournaments?,SELECT AVG(weight) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63430,What is the average height of people who have won poker tournaments and have made it to the final table and have weighed more than 70kg?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight > 70,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63431,How many people have won poker tournaments and have made it to the final table and have weighed more than 70kg?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight > 70,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63432,What is the average height of people who have won poker tournaments and have made it to the final table and have weighed less than 50kg?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight < 50,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63433,How many people have won poker tournaments and have made it to the final table and have weighed less than 50kg?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight < 50,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63434,What is the average height of people who have won poker tournaments and have made it to the final table and have weighed more than 80kg?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight > 80,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63435,How many people have won poker tournaments and have made it to the final table and have weighed more than 80kg?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight > 80,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63436,What is the average height of people who have won poker tournaments and have made it to the final table and have weighed less than 40kg?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight < 40,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63437,How many people have won poker tournaments and have made it to the final table and have weighed less than 40kg?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight < 40,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63438,What is the average height of people who have won poker tournaments and have made it to the final table and have weighed between 40kg and 60kg?,SELECT AVG(height) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight BETWEEN 40 AND 60,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63439,How many people have won poker tournaments and have made it to the final table and have weighed between 40kg and 60kg?,SELECT COUNT(*) FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE best_finish = 1 AND final_table_made = 1 AND weight BETWEEN 40 AND 60,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
63440,What is the number of programs per channel?,"SELECT channel_id, COUNT(program_id) FROM broadcast GROUP BY channel_id","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63441,Which channel has the highest share percentage?,"SELECT channel_id, SUM(share_in_percent) FROM broadcast_share GROUP BY channel_id ORDER BY SUM DESC LIMIT 1","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63442,What programs are broadcast between 8am and 12pm?,SELECT program_id FROM broadcast WHERE time_of_day BETWEEN '08:00:00' AND '12:00:00',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63444,What channels have more than 2 programs?,"SELECT channel_id, COUNT(program_id) FROM broadcast GROUP BY channel_id HAVING COUNT(program_id) > 2","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63446,What is the total share percentage of programs?,SELECT SUM(share_in_percent) FROM broadcast_share,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63447,What are the channels with share percentage less than 30%?,"SELECT channel_id, share_in_percent FROM channel WHERE share_in_percent < 30","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63448,What programs are broadcast by Channel 1?,SELECT program_id FROM broadcast WHERE channel_id = 1,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63450,What are the top 2 channels by rating?,"SELECT channel_id, rating_in_percent FROM channel ORDER BY rating_in_percent DESC LIMIT 2","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63451,What programs are broadcast between 4pm and 8pm?,SELECT program_id FROM broadcast WHERE time_of_day BETWEEN '16:00:00' AND '20:00:00',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63452,What is the total number of programs?,SELECT COUNT(program_id) FROM broadcast,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63453,What programs are broadcast by Channel 2?,SELECT program_id FROM broadcast WHERE channel_id = 2,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63455,What are the channels with share percentage greater than 50%?,"SELECT channel_id, share_in_percent FROM channel WHERE share_in_percent > 50","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63456,What are the top 2 programs by launch time?,"SELECT program_id, launch FROM program ORDER BY launch DESC LIMIT 2","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63457,What are the channels with less than 2 programs?,"SELECT channel_id, COUNT(program_id) FROM broadcast GROUP BY channel_id HAVING COUNT(program_id) < 2","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63458,What is the average share percentage of channel 2?,SELECT SUM(share_in_percent) FROM broadcast_share WHERE channel_id = 2,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63459,What are the top 3 channels by rating?,"SELECT channel_id, rating_in_percent FROM channel ORDER BY rating_in_percent DESC LIMIT 3","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63460,What are the programs broadcast by owner?,"SELECT program_id, origin FROM program WHERE origin = 'owner'","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63461,What are the top 2 programs by share percentage?,"SELECT program_id, share_in_percent FROM broadcast_share ORDER BY share_in_percent DESC LIMIT 2","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63462,What are the channels with share percentage greater than 20%?,"SELECT channel_id, share_in_percent FROM channel WHERE share_in_percent > 20","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63464,What are the channels with less than 1 program?,"SELECT channel_id, COUNT(program_id) FROM broadcast GROUP BY channel_id HAVING COUNT(program_id) < 1","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63466,What are the top 2 channels by share percentage?,"SELECT channel_id, share_in_percent FROM channel ORDER BY share_in_percent DESC LIMIT 2","
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
63470,What tracks have a length of over 10 minutes?,SELECT * FROM track WHERE milliseconds > 6000000;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63471,List all tracks from the genre 'Rock',SELECT * FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63472,What is the most expensive track?,SELECT * FROM track WHERE unitprice = (SELECT MAX(unitprice) FROM track);,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63474,What is the shortest track?,SELECT * FROM track WHERE milliseconds = (SELECT MIN(milliseconds) FROM track);,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63475,Find the average duration of tracks by composer,"SELECT composer, AVG(milliseconds) FROM track GROUP BY composer;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63477,Find the top 5 most expensive composers,"SELECT composer, AVG(unitprice) FROM track GROUP BY composer ORDER BY AVG(unitprice) DESC LIMIT 5;","
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63478,List all tracks by a specific composer,SELECT * FROM track WHERE composer='Jimi Hendrix';,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63479,What is the total duration of tracks by a specific composer?,SELECT SUM(milliseconds) FROM track WHERE composer='Pink Floyd';,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63480,What is the total price of tracks by a specific composer?,SELECT SUM(unitprice) FROM track WHERE composer='Queen';,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63481,Find the average duration of tracks in a specific genre,SELECT AVG(milliseconds) FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63482,What are the top 5 tracks by duration in a specific genre?,SELECT * FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock') ORDER BY milliseconds DESC LIMIT 5;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63483,What are the top 5 most expensive tracks in a specific genre?,SELECT * FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock') ORDER BY unitprice DESC LIMIT 5;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63484,What is the total duration of tracks from a specific album,SELECT SUM(milliseconds) FROM track WHERE albumid IN (SELECT albumid FROM album WHERE name='Dark Side of the Moon');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63485,What is the total price of tracks from a specific album?,SELECT SUM(unitprice) FROM track WHERE albumid IN (SELECT albumid FROM album WHERE name='Dark Side of the Moon');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63486,List all tracks by a specific album composer,SELECT * FROM track WHERE albumid IN (SELECT albumid FROM album WHERE name='High Voltage');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63487,What is the total duration of tracks in a specific genre and album?,SELECT SUM(milliseconds) FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock') AND albumid IN (SELECT albumid FROM album WHERE name='Dark Side of the Moon');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63488,What is the total price of tracks in a specific genre and album?,SELECT SUM(unitprice) FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock') AND albumid IN (SELECT albumid FROM album WHERE name='Dark Side of the Moon');,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63489,Find the top 5 tracks by duration in a specific genre and album,SELECT * FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock') AND albumid IN (SELECT albumid FROM album WHERE name='Dark Side of the Moon') ORDER BY milliseconds DESC LIMIT 5;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63490,Find the top 5 most expensive tracks in a specific genre and album,SELECT * FROM track WHERE genreid IN (SELECT genreid FROM genre WHERE name='Rock') AND albumid IN (SELECT albumid FROM album WHERE name='Dark Side of the Moon') ORDER BY unitprice DESC LIMIT 5;,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
63491,What is the average number of gold medals won by each club?,SELECT AVG(gold) FROM match_result GROUP BY club_id,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63492,What is the total number of medals won by coaches with a rank greater than 5?,SELECT SUM(gold + big_silver + small_silver + bronze) FROM match_result WHERE rank > 5,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63493,List the top 3 clubs with the highest points,"SELECT club_id, SUM(points) AS total_points FROM match_result GROUP BY club_id ORDER BY total_points DESC LIMIT 3","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63494,What is the average weight of players born in the 1990s?,SELECT AVG(weight) FROM player WHERE birth_year BETWEEN 1990 AND 1999,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63495,What is the number of players who bat right-handed?,SELECT COUNT(*) FROM player WHERE bats = 'R',"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63497,What are the top 5 countries with the most players?,"SELECT birth_country, COUNT(*) AS num_players FROM player GROUP BY birth_country ORDER BY num_players DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63498,What are the top 5 coaches with the highest rank?,"SELECT coach_id, MAX(rank) AS highest_rank FROM coach GROUP BY coach_id ORDER BY highest_rank DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63499,What is the list of players who were born in the same city?,"SELECT birth_city, COUNT(*) AS num_players FROM player GROUP BY birth_city","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63500,What are the top 3 players with the highest weight?,"SELECT name_first, name_last, weight FROM player ORDER BY weight DESC LIMIT 3","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63501,What is the average number of matches played by clubs with more than 10 gold medals?,SELECT AVG(gold) FROM match_result WHERE rank = 1 AND gold > 10,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63502,What are the top 5 clubs with the highest total points?,"SELECT club_id, SUM(points) AS total_points FROM match_result GROUP BY club_id ORDER BY total_points DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63503,What is the average height of players born in the 1990s?,SELECT AVG(height) FROM player WHERE birth_year BETWEEN 1990 AND 1999,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63504,What is the number of players who are retired?,SELECT COUNT(*) FROM player WHERE final_game IS NOT NULL,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63505,What is the average weight of players born in the 1980s?,SELECT AVG(weight) FROM player WHERE birth_year BETWEEN 1980 AND 1989,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63506,What are the top 5 countries with the most players who bat left-handed?,"SELECT birth_country, COUNT(*) AS num_players FROM player WHERE bats = 'L' GROUP BY birth_country ORDER BY num_players DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63507,What is the average height of players who were born in the 1970s?,SELECT AVG(height) FROM player WHERE birth_year BETWEEN 1970 AND 1979,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63508,What are the top 5 clubs with the most bronze medals?,"SELECT club_id, COUNT(*) AS num_bronze FROM match_result WHERE rank = 3 GROUP BY club_id ORDER BY num_bronze DESC LIMIT 5","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63509,What are the top 3 players with the highest height?,"SELECT name_first, name_last, height FROM player ORDER BY height DESC LIMIT 3","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
63511,What is the total length of all roller coasters in each country?,"SELECT c.country_name, SUM(r.length) AS total_length FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63512,Which country has the most roller coasters?,"SELECT c.country_name, COUNT(*) AS num_roller_coasters FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name ORDER BY num_roller_coasters DESC LIMIT 1;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63514,What is the total height of all roller coasters in each country?,"SELECT c.country_name, SUM(r.height) AS total_height FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63515,In which park is the longest roller coaster?,"SELECT r.name, r.length AS longest_length FROM roller_coaster r ORDER BY r.length DESC LIMIT 1;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63516,Which country has the longest roller coaster?,"SELECT c.country_name, MAX(r.length) AS longest_length FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name ORDER BY longest_length DESC LIMIT 1;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63517,What is the total speed of roller coasters in each country?,"SELECT c.country_name, SUM(CASE WHEN r.speed = 'fast' THEN 1 ELSE 0 END) AS fast_reach_speed FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63518,What is the status of the longest roller coaster?,"SELECT r.name, r.status AS status FROM roller_coaster r ORDER BY r.length DESC LIMIT 1;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63519,What is the total number of roller coasters in each country?,"SELECT c.country_name, COUNT(*) AS num_roller_coasters FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63522,What is the most common country for roller coasters?,"SELECT c.country_name, COUNT(*) AS num_country FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name ORDER BY num_country DESC LIMIT 1;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63525,What is the average speed of roller coasters in each country?,"SELECT c.country_name, AVG(CASE WHEN r.speed = 'fast' THEN 1 ELSE 0 END) AS avg_fast_speed FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63526,What is the most common country for roller coasters in a specific park?,"SELECT r.park, c.country_name, COUNT(*) AS num_country FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY r.park, c.country_name ORDER BY num_country DESC LIMIT 1;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63527,What is the total speed of roller coasters in each country?,"SELECT c.country_name, SUM(CASE WHEN r.speed = 'fast' THEN 1 ELSE 0 END) AS total_fast_speed FROM roller_coaster r JOIN country c ON r.country_id = c.country_id GROUP BY c.country_name;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63530,What is the average length of roller coasters in each park?,"SELECT r.park, AVG(r.length) AS avg_length FROM roller_coaster r GROUP BY r.park;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63531,What is the average height of roller coasters in each park?,"SELECT r.park, AVG(r.height) AS avg_height FROM roller_coaster r GROUP BY r.park;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63532,What is the total speed of roller coasters in each park?,"SELECT r.park, SUM(CASE WHEN r.speed = 'fast' THEN 1 ELSE 0 END) AS total_fast_speed FROM roller_coaster r GROUP BY r.park;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63533,What is the average speed of roller coasters in each park?,"SELECT r.park, AVG(CASE WHEN r.speed = 'fast' THEN 1 ELSE 0 END) AS avg_fast_speed FROM roller_coaster r GROUP BY r.park;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
63534,What are the top 5 best-selling films of all time?,"SELECT film_id, COUNT(*) as count FROM film_actor GROUP BY film_id ORDER BY count DESC LIMIT 5;","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63535,What is the average age of the actors?,SELECT AVG(age) as average_age FROM actor;,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63536,What is the most common city name?,"SELECT city, COUNT(*) as count FROM city GROUP BY city ORDER BY count DESC LIMIT 1;","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63537,How many customers are from the United States?,SELECT COUNT(*) as count FROM customer WHERE country = 'United States';,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63539,What is the average ranking of the best-selling films?,SELECT AVG(rank_in_series) as average_rank FROM film;,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63540,How many films are part of a series?,SELECT COUNT(*) as count FROM film WHERE rank_in_series > 1;,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63541,How many actors are under 20 years old?,SELECT COUNT(*) as count FROM actor WHERE age < 20;,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
63543,What is the name of the drivers who are operating buses for schools?,SELECT d.name FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id GROUP BY d.name;,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63544,How many schools are being operated by a single driver?,SELECT COUNT(*) AS num_schools FROM school_bus GROUP BY school_id; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63545,What is the average age of the full-time drivers?,SELECT AVG(age) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id WHERE sb.if_full_time = TRUE; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63546,What is the name of the drivers who have been working in schools for more than 5 years?,SELECT d.name FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id WHERE sb.years_working > 5 GROUP BY d.name; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63547,What is the total number of schools operated by male drivers?,SELECT COUNT(*) FROM school_bus WHERE school_id IN (SELECT school_id FROM school_bus sb WHERE if_full_time = TRUE); ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63548,What is the average age of the full-time drivers who are older than 40?,SELECT AVG(age) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id WHERE d.age > 40 AND sb.if_full_time = TRUE; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63549,How many drivers are older than 40 and work full-time?,SELECT COUNT(*) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id WHERE d.age > 40 AND sb.if_full_time = TRUE; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63550,What is the average age of the full-time drivers older than 40 from a specific city?,SELECT AVG(age) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id JOIN school s ON sb.school_id = s.school_id WHERE d.age > 40 AND sb.if_full_time = TRUE AND s.location = 'New York'; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63551,What is the total number of schools where the full-time female drivers operate?,SELECT COUNT(*) FROM school_bus sb WHERE if_full_time = TRUE AND school_id IN (SELECT school_id FROM school_bus WHERE if_full_time = TRUE); ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63552,What is the average age of the full-time drivers who are from the same city?,SELECT AVG(age) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id JOIN school s ON sb.school_id = s.school_id WHERE sb.if_full_time = TRUE AND s.location = 'New York'; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63554,What is the average age of the full-time drivers from a specific city?,SELECT AVG(age) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id WHERE sb.if_full_time = TRUE AND d.age > 40; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63555,What is the total number of schools where the full-time male drivers operate?,SELECT COUNT(*) FROM school_bus sb WHERE if_full_time = TRUE; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63558,What is the total number of schools operated by female part-time drivers?,SELECT COUNT(*) FROM school_bus sb WHERE if_full_time = FALSE AND school_id IN (SELECT school_id FROM school_bus WHERE if_full_time = FALSE); ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63559,What is the average age of the full-time drivers from a specific party?,SELECT AVG(age) FROM driver d JOIN school_bus sb ON d.driver_id = sb.driver_id WHERE sb.if_full_time = TRUE AND d.party = 'Republican'; ,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
63561,How many missions took place in a specific year?,SELECT COUNT(*) FROM mission WHERE launched_year = 2020,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63562,What is the percentage of ships that sank during the mission?,SELECT COUNT(*) FROM mission WHERE fate = 'sank'::TEXT,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63565,What mission had the highest speed?,"SELECT mission_id, MAX(speed_knots) FROM mission GROUP BY mission_id","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63566,What is the total number of lost ships in each location?,"SELECT location, COUNT(*) FROM ship WHERE lost_in_battle = 1 GROUP BY location","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63570,"What is the number of ships in each mission, grouped by mission?","SELECT mission_id, COUNT(*) FROM mission GROUP BY mission_id","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63571,What is the total number of ships with a disposition of 'unknown'?,SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'unknown'::TEXT,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63574,What is the number of battles fought by each ship?,"SELECT id, COUNT(*) FROM ship WHERE lost_in_battle = 1 GROUP BY id","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63575,What is the highest membership level among all members?,SELECT MAX(level_of_membership) AS highest_level FROM member;,"
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63576,What is the total membership purchase amount for each member?,"SELECT m.name, SUM(p.total_pounds) AS total_purchase_amount FROM member m JOIN purchase p ON m.member_id = p.member_id GROUP BY m.name ORDER BY total_purchase_amount DESC;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63577,What is the total membership purchase amount for each membership level?,"SELECT m.level_of_membership, SUM(p.total_pounds) AS total_purchase_amount FROM member m JOIN purchase p ON m.member_id = p.member_id GROUP BY m.level_of_membership ORDER BY total_purchase_amount DESC;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63578,What is the top 3 highest spenders in each branch?,"SELECT b.name, m.name, SUM(p.total_pounds) AS total_spend FROM branch b JOIN member m ON b.branch_id = m.member_id JOIN purchase p ON m.member_id = p.member_id GROUP BY b.name, m.name ORDER BY total_spend DESC LIMIT 3;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63579,What is the total membership purchase amount for each year?,"SELECT year, SUM(total_pounds) AS total_purchase_amount FROM purchase GROUP BY year ORDER BY total_purchase_amount DESC;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63580,What is the total membership purchase amount for each branch and membership level?,"SELECT b.name, m.level_of_membership, SUM(p.total_pounds) AS total_purchase_amount FROM branch b JOIN member m ON b.branch_id = m.member_id JOIN purchase p ON m.member_id = p.member_id GROUP BY b.name, m.level_of_membership ORDER BY total_purchase_amount DESC;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63581,What is the top 3 highest spenders overall?,"SELECT m.name, SUM(p.total_pounds) AS total_spend FROM member m JOIN purchase p ON m.member_id = p.member_id GROUP BY m.name ORDER BY total_spend DESC LIMIT 3;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63583,"What is the total membership purchase amount for each branch, membership level, and year?","SELECT b.name, m.level_of_membership, year, SUM(p.total_pounds) AS total_purchase_amount FROM branch b JOIN member m ON b.branch_id = m.member_id JOIN purchase p ON m.member_id = p.member_id GROUP BY b.name, m.level_of_membership, year ORDER BY total_purchase_amount DESC;","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
63584,What are the top 2 song genres in terms of average rating?,"SELECT GENRE_IS, AVG(RATING) as AVG_RATING FROM SONG GROUP BY GENRE_IS ORDER BY AVG_RATING DESC LIMIT 2","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63585,Which country has the most songs released?,"SELECT COUNTRY, COUNT(*) as COUNT_SONGS FROM SONG GROUP BY COUNTRY ORDER BY COUNT_SONGS DESC","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63586,What is the average age of singers from the US?,SELECT AVG(AGE) as AVG_AGE FROM SINGER WHERE country = 'US',"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63587,What are the top 5 songs from the US?,"SELECT SONG_NAME, COUNT(*) as COUNT_SONGS FROM SINGER NATURAL JOIN SONG WHERE country = 'US' GROUP BY SONG_NAME ORDER BY COUNT_SONGS DESC LIMIT 5","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63588,Who are the top 2 singers from each country?,"WITH CountrySingers AS (SELECT SONG_NAME, country, ROW_NUMBER() OVER (PARTITION BY country ORDER BY COUNT(*) DESC) as country_rank FROM SINGER NATURAL JOIN SONG GROUP BY SONG_NAME, country) SELECT * FROM CountrySingers WHERE country_rank <= 2","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63589,Which song has the highest resolution?,"SELECT song_name, resolution FROM SONG ORDER BY resolution DESC LIMIT 1","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63590,What is the earliest released song?,SELECT MIN(releasedate) as EARLIEST_RELEASE_DATE FROM SONG,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63591,What are the top 2 genres with the most languages?,"SELECT GENRE_IS, COUNT(DISTINCT languages) as UNIQUE_LANGUAGES FROM SONG NATURAL JOIN SINGER GROUP BY GENRE_IS ORDER BY UNIQUE_LANGUAGES DESC LIMIT 2","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63592,What is the average age of singers?,SELECT AVG(AGE) as AVG_AGE FROM SINGER,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63593,Who are the top 5 male singers?,SELECT * FROM SINGER WHERE is_male = 't'::boolean ORDER BY age DESC LIMIT 5,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63594,What is the most popular country for song releases?,"SELECT country, COUNT(*) as COUNT_SONGS FROM SONG GROUP BY country ORDER BY COUNT_SONGS DESC LIMIT 1","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63595,What is the average rating of songs from the US?,SELECT AVG(RATING) as AVG_RATING FROM SONG WHERE country = 'US',"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63596,What are the top 2 countries with the most resolutions?,"SELECT country, AVG(resolution) as AVG_RESOLUTION FROM SONG GROUP BY country ORDER BY AVG_RESOLUTION DESC LIMIT 2","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63597,What is the latest released song?,SELECT MAX(releasedate) as LATEST_RELEASE_DATE FROM SONG,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63598,What is the average rating of songs with languages?,SELECT AVG(RATING) as AVG_RATING FROM SONG WHERE languages IS NOT NULL,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63599,What are the top 5 songs from the US with languages?,"SELECT SONG_NAME, COUNT(*) as COUNT_SONGS FROM SINGER NATURAL JOIN SONG WHERE country = 'US' AND languages IS NOT NULL GROUP BY SONG_NAME ORDER BY COUNT_SONGS DESC LIMIT 5","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63600,"What is the average age of singers from each country, excluding the US?","SELECT country, AVG(AGE) as AVG_AGE FROM SINGER WHERE country NOT LIKE 'US' GROUP BY country ORDER BY AVG_AGE","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63601,What is the latest released song from the US?,SELECT MAX(releasedate) as LATEST_RELEASE_DATE FROM SONG WHERE country = 'US',"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63602,What are the top 2 genres with the lowest average rating?,"SELECT GENRE_IS, AVG(RATING) as AVG_RATING FROM SONG GROUP BY GENRE_IS ORDER BY AVG_RATING LIMIT 2","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63603,What is the average resolution of songs from each country?,"SELECT country, AVG(resolution) as AVG_RESOLUTION FROM SONG GROUP BY country ORDER BY AVG_RESOLUTION","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63604,What are the top 5 female singers?,SELECT * FROM SINGER WHERE is_male = 'f'::boolean ORDER BY age DESC LIMIT 5,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63605,What are the top 2 countries with the most resolutions?,"SELECT country, COUNT(*) as COUNT_RESOLUTIONS FROM SONG GROUP BY country ORDER BY COUNT_RESOLUTIONS DESC LIMIT 2","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63606,"What is the average rating of songs from each country, excluding the US?","SELECT country, AVG(RATING) as AVG_RATING FROM SONG WHERE country NOT LIKE 'US' GROUP BY country ORDER BY AVG_RATING","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63607,What is the average age of female singers?,SELECT AVG(AGE) as AVG_AGE FROM SINGER WHERE is_male = 'f'::boolean,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
63608,What are the top 3 stations with the highest dock count?,"SELECT s.name, s.dock_count FROM station s GROUP BY s.name, s.dock_count ORDER BY s.dock_count DESC LIMIT 3","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63609,What are the stations near the city 'New York'? ,SELECT s.name FROM station s WHERE CAST(s.city AS TEXT) LIKE '%New York%',"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63610,What is the highest recorded high temperature in weekly_weather ?,SELECT MAX(high_temperature) FROM weekly_weather,"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63611,What are the trains going from 'Chicago' to 'Los Angeles'? ,SELECT t.name FROM train t WHERE t.origin='Chicago' AND t.destination='Los Angeles',"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63612,What are the trains going from 'New York' to 'Los Angeles'? ,SELECT t.name FROM train t WHERE t.origin='New York' AND t.destination='Los Angeles',"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63613,What are the top 3 trains by travel time? ,SELECT t.time FROM train t ORDER BY t.time LIMIT 3,"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63614,Where are trains number 1 and 2 going? ,"SELECT t.origin, t.destination FROM train t WHERE t.train_number IN (1, 2)","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63615,What are the stations with an installation date more recent than 2010-01-01?,"SELECT s.name, s.installation_date FROM station s WHERE CAST(s.installation_date AS DATE) >= '2010-01-01'","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63617,What are the trains with the highest interval frequency?,"SELECT t.interval, COUNT(*) FROM train t GROUP BY t.interval ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63618,Which station has the highest docking capacity?,"SELECT s.name, s.dock_count FROM station s ORDER BY s.dock_count DESC LIMIT 1","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63619,What routes does train number 1 go on?,"SELECT r.station_id, r.train_id FROM route r WHERE r.train_id IN (SELECT id FROM train WHERE train_number = 1)","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63620,What trains go from 'New York'?,SELECT t.name FROM train t WHERE t.origin='New York',"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63621,What trains go to 'Los Angeles'?,SELECT t.name FROM train t WHERE t.destination='Los Angeles',"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63622,What are the top 3 trains by frequency?,"WITH train_frequencies AS (SELECT t.interval, COUNT(*) AS frequency FROM train t GROUP BY t.interval) SELECT tf.interval, tf.frequency FROM train_frequencies tf ORDER BY tf.frequency DESC LIMIT 3","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63623,What stations do trains 1 and 2 stop at?,"WITH routes AS (SELECT r.train_id, r.station_id FROM route r WHERE r.train_id IN (1, 2)) SELECT DISTINCT s.name FROM routes r JOIN station s ON r.station_id=s.id","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63624,What is the least windy day?,SELECT MIN(wind_speed_mph) FROM weekly_weather,"
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63626,What trains go from stations with installation date after 2010?,"WITH installed_after_2010 AS (SELECT s.id FROM station s WHERE CAST(s.installation_date AS DATE) >= '2010-01-01') SELECT t.name FROM train t JOIN route r ON t.id=r.train_id JOIN installed_after_2010 s ON r.station_id=s.id WHERE t.train_number IN (1, 2)","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63628,What trains go from stations with installation date on or before 2000?,"WITH installed_on_or_before_2000 AS (SELECT s.id FROM station s WHERE CAST(s.installation_date AS DATE) <= '2000-01-01') SELECT t.name FROM train t JOIN route r ON t.id=r.train_id JOIN installed_on_or_before_2000 s ON r.station_id=s.id WHERE t.train_number IN (1, 2)","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63629,What are the most common frequencies for trains?,"SELECT t.interval, COUNT(*) FROM train t GROUP BY t.interval ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63630,What are the top 3 stations with the lowest dock count?,"SELECT s.name, s.dock_count FROM station s GROUP BY s.name, s.dock_count ORDER BY s.dock_count ASC LIMIT 3","
CREATE TABLE route (
	train_id INTEGER, 
	station_id INTEGER
)


CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE weekly_weather (
	station_id INTEGER, 
	day_of_week TEXT, 
	high_temperature INTEGER, 
	low_temperature INTEGER, 
	precipitation REAL, 
	wind_speed_mph INTEGER
)"
63631,What is the total number of cities affected by each storm?,"SELECT storm_id, SUM(number_city_affected) AS total_cities_affected FROM affected_region GROUP BY storm_id","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63632,What is the most affected region by every storm?,"SELECT storm_id, MAX(number_city_affected) AS most_affected FROM affected_region GROUP BY storm_id","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63633,Get the count of regions for each storm,"SELECT storm_id, COUNT(DISTINCT region_id) AS region_count FROM affected_region GROUP BY storm_id","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63634,Get the maximum number of cities affected by a storm,SELECT MAX(number_city_affected) AS max_cities_affected FROM affected_region,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63635,What is the total number of storms in each region?,"SELECT region_id, COUNT(DISTINCT storm_id) AS storm_count FROM affected_region GROUP BY region_id","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63636,Get the average number of cities affected per storm,SELECT AVG(number_city_affected) AS avg_cities_affected FROM affected_region,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63637,Get the lastest storm,SELECT * FROM region ORDER BY date DESC LIMIT 1,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63638,Which storms affected the most cities?,"SELECT storm_id, SUM(number_city_affected) AS affected_cities FROM affected_region GROUP BY storm_id ORDER BY affected_cities DESC","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63640,Get the storms by the most destructive date,SELECT * FROM region ORDER BY date LIMIT 1,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63641,What is the longest storm duration?,SELECT MAX(dates_active) AS max_duration FROM storm,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63642,Get the storms that exceeded 10 million in damage,SELECT * FROM storm WHERE damage_millions_usd > 10,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63644,Get the storms with the most fatal,SELECT * FROM storm WHERE number_deaths > 0,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63645,What is the average speed of each storm?,SELECT AVG(max_speed) AS avg_speed FROM storm,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63647,Get the name of the storm that affected the most number of cities,SELECT name FROM storm WHERE storm_id IN (SELECT storm_id FROM affected_region GROUP BY storm_id ORDER BY COUNT(*) DESC LIMIT 1),"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63649,What is the number of cities affected by each storm in millions,"SELECT storm_id, SUM(number_city_affected) / 1e6 AS millions_cities_affected FROM affected_region GROUP BY storm_id","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63650,Get the number of storms that affected the most regions,"SELECT region_id, COUNT(DISTINCT storm_id) AS storm_count FROM affected_region GROUP BY region_id ORDER BY storm_count DESC LIMIT 1","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63651,Get the average damage per storm in millions,SELECT AVG(damage_millions_usd) AS avg_damage FROM storm,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63653,Get the storms with the most damage,SELECT * FROM storm WHERE damage_millions_usd > 0,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63655,Get the storms that exceeded 5 million in damage,SELECT * FROM storm WHERE damage_millions_usd > 5,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
63658,What is the most common last name among teachers?,SELECT COUNT(last_name) AS common_last_name FROM teachers GROUP BY last_name ORDER BY common_last_name DESC LIMIT 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63659,What is the average grade of students?,SELECT AVG(grade) AS avg_grade FROM list;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63660,Who is the teacher with the most students?,"SELECT COUNT(*) AS num_students, last_name FROM teachers GROUP BY last_name ORDER BY num_students DESC LIMIT 1;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63661,What is the most common gender among teachers?,SELECT COUNT(*) AS common_gender FROM teachers WHERE gender = 'Male';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63662,Which classroom has the most students?,"SELECT COUNT(*) AS num_students, classroom FROM list GROUP BY classroom ORDER BY num_students DESC LIMIT 1;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63663,What is the average cell mobile number length among teachers?,SELECT AVG(LENGTH(cell_mobile_number)) AS avg_mobile_length FROM teachers WHERE cell_mobile_number IS NOT NULL;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63664,What is the most common first name among teachers?,SELECT COUNT(*) AS common_first_name FROM teachers GROUP BY first_name ORDER BY common_first_name DESC LIMIT 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63665,Which teacher has the earliest address?,SELECT MIN(address_id) AS earliest_address FROM teachers;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63666,What is the average length of email addresses among teachers?,SELECT AVG(LENGTH(email_address)) AS avg_email_length FROM teachers WHERE email_address IS NOT NULL;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63667,What is the most common gender among students?,SELECT COUNT(*) AS common_gender FROM list WHERE grade > 0;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63668,What is the most common last name among students in a specific grade?,SELECT COUNT(*) AS common_last_name FROM list WHERE grade = 5 GROUP BY lastname ORDER BY common_last_name DESC LIMIT 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63669,What is the average grade of students in a specific classroom?,SELECT AVG(grade) AS avg_grade FROM list WHERE classroom = 2;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63670,What is the most common gender among students in a specific grade?,SELECT COUNT(*) AS common_gender FROM list WHERE grade = 4;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63671,What is the most common first name among students?,SELECT COUNT(*) AS common_first_name FROM list GROUP BY firstname ORDER BY common_first_name DESC LIMIT 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63672,What is the average grade of students in a specific classroom?,SELECT AVG(grade) AS avg_grade FROM list WHERE classroom = 3;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63673,Who is the teacher with the most students in a specific classroom and grade?,"SELECT COUNT(*) AS num_students, last_name FROM teachers JOIN list ON teachers.teacher_id = list.classroom WHERE grade = 6 GROUP BY last_name ORDER BY num_students DESC LIMIT 1;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63675,Who is the teacher with the most students in a specific classroom and grade?,"SELECT COUNT(*) AS num_students, last_name FROM teachers JOIN list ON teachers.teacher_id = list.classroom WHERE grade = 5 GROUP BY last_name ORDER BY num_students DESC LIMIT 1;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63676,What is the most common email address domain among teachers?,SELECT COUNT(*) AS common_domain FROM teachers WHERE email_address LIKE '%@%';,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63677,Which classroom has the most students in a specific grade?,"SELECT COUNT(*) AS num_students, classroom FROM list WHERE grade = 2 GROUP BY classroom ORDER BY num_students DESC LIMIT 1;","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63679,What is the average grade of students in a specific grade and classroom?,SELECT AVG(grade) AS avg_grade FROM list WHERE grade = 1 AND classroom = 1;,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
63680,What is the average attendance of the biggest events?,SELECT AVG(event_attendance) FROM event WHERE event_attendance > (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY event_attendance) FROM event);,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63681,What is the maximum attendance for each stadium?,"SELECT stadium.name, MAX(event_attendance) AS max_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63682,What is the total attendance for the biggest attendances at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63683,What is the average attendance for each stadium?,"SELECT stadium.name, AVG(event_attendance) AS average_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63684,What are the top 3 attendances for each stadium?,"SELECT stadium.name, event_attendance FROM event JOIN stadium ON event.venue = stadium.name ORDER BY event_attendance DESC LIMIT 3;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63685,What is the minimum attendance for each stadium?,"SELECT stadium.name, MIN(event_attendance) AS min_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63686,What is the total attendance for each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63687,What is the attendance for the biggest events?,SELECT event_attendance FROM event ORDER BY event_attendance DESC LIMIT 5;,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63688,What is the average attendance of the biggest attendances at each stadium?,"SELECT stadium.name, AVG(event_attendance) AS average_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY average_attendance DESC;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63689,What is the total attendance for the top 3 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 3;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63690,What is the average attendance for the last 5 events at each stadium?,"SELECT stadium.name, AVG(event_attendance) AS average_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY average_attendance DESC LIMIT 5;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63692,What is the total attendance for the top 5 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 5;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63693,What is the average attendance of the last 10 events at each stadium?,"SELECT stadium.name, AVG(event_attendance) AS average_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY average_attendance DESC LIMIT 10;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63694,What is the total attendance for the last 10 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 10;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63696,What is the total attendance for the last 15 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 15;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63698,What is the total attendance for the last 20 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 20;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63700,What is the total attendance for the last 25 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 25;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63702,What is the total attendance for the last 30 events at each stadium?,"SELECT stadium.name, SUM(event_attendance) AS total_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY total_attendance DESC LIMIT 30;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
63708,What is the total revenue from ticket sales?,SELECT SUM(ticket_price) FROM exhibition,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
63709,What is the earliest exhibition held?,SELECT MIN(date) FROM exhibition_record,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
63710,What is the total ticket price for all exhibitions held by 'Sarah'?,SELECT SUM(ticket_price) FROM exhibition WHERE artist_id IN (SELECT artistid FROM artist WHERE name = 'Sarah'),"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
63711,What is the total attendance for exhibitions held in 2015?,SELECT SUM(attendance) FROM exhibition_record WHERE date LIKE '%2015%',"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
63713,What is the total attendance for exhibitions held in 2014?,SELECT SUM(attendance) FROM exhibition_record WHERE date LIKE '%2014%',"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
63714,What is the average enrollment of universities?,SELECT AVG(enrollment) FROM university;,"
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63715,Which team has the highest winning percentage in all games?,"SELECT team_name, acc_percent FROM basketball_match WHERE acc_percent = (SELECT MAX(acc_percent) FROM basketball_match);","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63716,What are the schools sorted by location in ascending order?,"SELECT school, location FROM university ORDER BY location ASC;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63717,What is the total number of games played by each team?,"SELECT team_name, COUNT(all_games) FROM basketball_match GROUP BY team_name;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63718,What is the average founded year of universities?,SELECT AVG(founded) FROM university;,"
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63719,What is the total number of games played in each home and away?,"SELECT SUM(CASE WHEN all_home IS NOT NULL THEN 1 ELSE 0 END) AS all_home_games, SUM(CASE WHEN all_road IS NOT NULL THEN 1 ELSE 0 END) AS all_road_games FROM basketball_match;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63720,What are the schools sorted by affiliation in descending order?,"SELECT school, affiliation FROM university ORDER BY affiliation DESC;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63721,What is the percentage of wins for each team in the regular season?,"SELECT team_name, acc_regular_season, acc_percent AS wins FROM basketball_match;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63722,What is the total number of games played by each team in the regular season?,"SELECT team_name, COUNT(acc_regular_season) AS regular_season_games FROM basketball_match GROUP BY team_name;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63723,What is the total number of games played by each team in all locations?,"SELECT team_name, COUNT(all_games) AS total_games FROM basketball_match GROUP BY team_name;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63724,What are the schools sorted by enrollment in ascending order?,"SELECT school, enrollment FROM university ORDER BY enrollment ASC;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63725,What is the total number of neutral games played?,SELECT COUNT(all_neutral) AS neutral_games FROM basketball_match;,"
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63726,What are the schools sorted by nickname in alphabetical order?,"SELECT school, nickname FROM university ORDER BY nickname ASC;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63727,What is the average number of all games played?,SELECT AVG(all_games_percent) FROM basketball_match;,"
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63728,What is the average founded year and school name of each university?,"SELECT school, AVG(founded) FROM university GROUP BY school;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63729,What are the top 5 universities sorted by enrollment in descending order?,"SELECT school, enrollment FROM university ORDER BY enrollment DESC LIMIT 5;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63730,What is the total number of neutral games played by each team?,"SELECT team_name, COUNT(all_neutral) AS neutral_games FROM basketball_match GROUP BY team_name;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63731,What are the schools sorted by location in descending order?,"SELECT school, location FROM university ORDER BY location DESC;","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
63733,Which church has the highest number of weddings?,"SELECT c.name, COUNT(*) FROM wedding w JOIN church c ON w.church_id = c.church_id GROUP BY c.name ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63734,What is the average height of the people who attended weddings in the year 2010?,SELECT AVG(height) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63735,What are the top 3 churches with the highest number of weddings?,"SELECT c.name, COUNT(*) FROM wedding w JOIN church c ON w.church_id = c.church_id GROUP BY c.name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63736,What is the total height of the people who attended weddings in the year 2010?,SELECT SUM(height) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63737,What is the average weight of the people who attended weddings in the year 2010?,SELECT AVG(weight) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63738,What is the date of the first church?,SELECT open_date FROM church ORDER BY open_date LIMIT 1,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63739,What is the name of the church where the first wedding took place?,SELECT name FROM church c JOIN wedding w ON c.church_id = w.church_id WHERE w.year = (SELECT MIN(year) FROM wedding),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63740,What is the weight range of the people who attended weddings in the year 2010?,"SELECT MIN(weight), MAX(weight) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63741,What is the rate of people with height above 6 feet who attended weddings in the year 2010?,SELECT COUNT(*) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010 AND p.height > 6,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63742,What is the total number of weddings at church 1?,SELECT COUNT(*) FROM wedding w JOIN church c ON w.church_id = c.church_id WHERE c.name = 'church 1',"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63743,What is the average weight of the people who attended weddings at church 1?,SELECT AVG(weight) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year > 2000 AND w.church_id = (SELECT church_id FROM church WHERE name = 'church 1'),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63744,What is the rate of people with height above 6 feet who attended weddings at church 1?,SELECT COUNT(*) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year > 2000 AND w.church_id = (SELECT church_id FROM church WHERE name = 'church 1') AND p.height > 6,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63745,What is the name of the church where the first people attended weddings in the year 2010?,SELECT name FROM church c JOIN wedding w ON c.church_id = w.church_id WHERE w.year = 2010 AND w.year = (SELECT MIN(year) FROM wedding),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63747,What is the total height of the people who attended weddings in the year 2010 at church 1?,SELECT SUM(height) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010 AND w.church_id = (SELECT church_id FROM church WHERE name = 'church 1'),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63748,What is the total number of the people who attended weddings in the year 2010 at church 1?,SELECT COUNT(*) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010 AND w.church_id = (SELECT church_id FROM church WHERE name = 'church 1'),"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63749,What are the top 3 churches with the highest total weight of people who attended weddings in the year 2010?,SELECT SUM(weight) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010 GROUP BY name ORDER BY SUM(weight) DESC LIMIT 3,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63750,What is the total number of the people who attended weddings in the year 2010?,SELECT COUNT(*) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63751,What is the rate of people with height above 6 feet who attended weddings in the year 2010 at church 1?,SELECT COUNT(*) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010 AND w.church_id = (SELECT church_id FROM church WHERE name = 'church 1') AND p.height > 6,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63752,What is the total weight of the people who attended weddings in the year 2010?,SELECT SUM(weight) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63753,What is the total height of the people who attended weddings in the year 2010 at church 1 and with weight above 60 kg?,SELECT SUM(height) FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year = 2010 AND w.church_id = (SELECT church_id FROM church WHERE name = 'church 1') AND p.weight > 60,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
63756,What is the average price of wines from each appelation?,"SELECT appelation, AVG(price) FROM wine GROUP BY appelation","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63757,Which year did each wine producer start producing wine?,"SELECT winery, MIN(year) FROM wine GROUP BY winery","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63758,How many cases of wine are there per state?,"SELECT state, SUM(cases) FROM wine GROUP BY state","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63759,What is the highest rated wine by each wine producer?,"SELECT winery, MAX(score) FROM wine GROUP BY winery","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63760,What are the top 3 most common grape colors?,"SELECT color, COUNT(*) FROM grapes GROUP BY color ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63763,What is the average score of wines from each appelation?,"SELECT appelation, AVG(score) FROM wine GROUP BY appelation","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63765,What are the unique appelations?,SELECT DISTINCT appelation FROM wine,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63768,What are the average cases of wine produced by each wine producer?,"SELECT winery, AVG(cases) FROM wine GROUP BY winery","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63769,What is the total number of wines produced by each wine producer?,"SELECT winery, COUNT(*) FROM wine GROUP BY winery","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63771,What are the unique states with wine producers?,SELECT DISTINCT state FROM wine,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63772,What is the total number of wines with each rating?,"SELECT score, COUNT(*) FROM wine GROUP BY score","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63776,What are the unique wine names?,SELECT DISTINCT name FROM wine,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63778,What are the total number of wines per state and wine producer?,"SELECT state, winery, COUNT(*) FROM wine GROUP BY state, winery","
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63782,What are the unique grape combinations?,SELECT grape FROM grapes,"
CREATE TABLE appellations (
	no INTEGER, 
	appelation TEXT, 
	county TEXT, 
	state TEXT, 
	area TEXT, 
	isava TEXT
)


CREATE TABLE grapes (
	id INTEGER, 
	grape TEXT, 
	color TEXT
)


CREATE TABLE wine (
	no INTEGER, 
	grape TEXT, 
	winery TEXT, 
	appelation TEXT, 
	state TEXT, 
	name TEXT, 
	year INTEGER, 
	price INTEGER, 
	score INTEGER, 
	cases INTEGER, 
	drink TEXT
)"
63783,What is the population of cities with regional population greater than 100 million?,"SELECT city, regional_population FROM city WHERE regional_population > 100000000","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63785,List countries where English is the official language?,SELECT * FROM countrylanguage WHERE isofficial = 'T' AND language = 'English',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63787,Which countries have a regional population greater than 100 million and a GDP greater than $1 billion?,SELECT * FROM city JOIN country ON city.city_id = country.country_id WHERE regional_population > 100000000 AND gdp > 1000000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63789,What is the total GDP of cities with a population greater than 1 million?,SELECT SUM(gdp) FROM city WHERE regional_population > 1000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63790,List countries with at least 30% speaking English?,SELECT * FROM countrylanguage WHERE percentage >= 0.3 AND isofficial = 'T' AND language = 'English',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63791,List cities in China?,SELECT * FROM city WHERE hanzi LIKE '%China%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63792,Get the countries with at least 50% speaking English?,SELECT * FROM countrylanguage WHERE percentage >= 0.5 AND isofficial = 'T' AND language = 'English',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63793,Get the city with the highest GDP per capita?,SELECT * FROM city ORDER BY gdp / regional_population DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63794,Get the countries with at least 40% speaking English?,SELECT * FROM countrylanguage WHERE percentage >= 0.4 AND isofficial = 'T' AND language = 'English',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63796,Get the cities with a GDP greater than $1 billion?,SELECT * FROM city WHERE gdp > 1000000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63797,Get the countries with at least 60% speaking English?,SELECT * FROM countrylanguage WHERE percentage >= 0.6 AND isofficial = 'T' AND language = 'English',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63798,Get the cities with a regional population greater than 50 million?,SELECT * FROM city WHERE regional_population > 50000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63799,Get the countries with at least 70% speaking English?,SELECT * FROM countrylanguage WHERE percentage >= 0.7 AND isofficial = 'T' AND language = 'English',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63800,Get the cities with a GDP greater than $50 million?,SELECT * FROM city WHERE gdp > 50000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
63801,What is the average age of all tennis players?,SELECT AVG(players.birth_date::DATE - '1900-01-01'::DATE) FROM players,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63802,What is the ranking points distribution of players by ranking points?,"SELECT ranking_points, COUNT(*) FROM rankings GROUP BY ranking_points ORDER BY ranking_points","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63804,What is the average winner's age in tennis matches?,SELECT AVG(matches.winner_age) FROM matches,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63805,What is the distribution of the number of tournaments played in each tour?,"SELECT tours, COUNT(*) FROM rankings GROUP BY tours","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63806,What is the winning percentage for each player in the matches table?,"SELECT winner_id, COUNT(*) AS wins, (COUNT(*) / (SELECT COUNT(*) FROM matches)) AS winning_percentage FROM matches WHERE winner_id IS NOT NULL GROUP BY winner_id","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63807,What is the earliest birthday among all tennis players?,SELECT MIN(players.birth_date) FROM players,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63808,Who won the most matches in tennis tournaments?,"SELECT winner_name, COUNT(*) FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63809,What is the highest ranking points in the rankings table?,SELECT MAX(ranking_points) FROM rankings,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63810,What is the average rating of each player from the rankings table?,SELECT AVG(ranking_points) AS average_rating FROM rankings,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63812,What is the most common outcome of a tennis match?,"SELECT score, COUNT(*) FROM matches GROUP BY score ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63814,What is the distribution of winner seeds for each tennis match?,"SELECT winner_seed, COUNT(*) FROM matches WHERE winner_seed IS NOT NULL GROUP BY winner_seed","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63815,What is the highest ATP ranking of each player?,"SELECT player_id, MAX(ranking_points) FROM rankings GROUP BY player_id","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63817,What is the earliest tournament date in the tournaments table?,SELECT MIN(tourney_date) FROM matches,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63818,What is the distribution of match winners and losers by age?,"SELECT CASE WHEN loser_age IS NOT NULL THEN 'loser' ELSE 'winner' END AS player_type, AVG(loser_age) AS age FROM matches GROUP BY player_type","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63821,What are the top 5 players by the number of matches they won?,"SELECT winner_name, COUNT(*) AS wins FROM matches GROUP BY winner_name ORDER BY wins DESC LIMIT 5","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63822,What is the earliest year of a tennis tournament?,SELECT MIN(year) FROM matches,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63823,What is the number of tennis players born in each month?,"SELECT EXTRACT(MONTH FROM birth_date) AS month, COUNT(*) FROM players GROUP BY month ORDER BY month","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63824,What is the number of matches won by each player?,"SELECT winner_name, COUNT(*) AS wins FROM matches GROUP BY winner_name","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63826,What is the distribution of player ranks in the rankings table?,"SELECT ranking_points, COUNT(*) FROM rankings GROUP BY ranking_points","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63829,What is the number of matches played by each player?,"SELECT winner_name, COUNT(*) AS matches_played FROM matches GROUP BY winner_name","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
63837,Which authors have written more than 3 publications?,SELECT DISTINCT name FROM author WHERE aid IN (SELECT aid FROM writes GROUP BY aid HAVING COUNT(pid) > 3);,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63839,What is the list of domains and their corresponding journals?,"SELECT d.name, j.name FROM domain d JOIN domain_journal dj ON d.did = dj.did JOIN journal j ON dj.jid = j.jid;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63841,What are the top 5 most commonly used keywords?,"SELECT kid, COUNT(*) FROM publication_keyword GROUP BY kid ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63842,What is the list of authors with more than 2 citations?,"SELECT DISTINCT a.name, COUNT(*) FROM author a JOIN writes w ON a.aid = w.aid GROUP BY a.name HAVING COUNT(*) > 2;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63843,What is the average number of references per publication?,SELECT AVG(reference_num) FROM publication;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63845,What is the list of authors who have published more than 3 publications?,SELECT DISTINCT a.name FROM author a JOIN writes w ON a.aid = w.aid GROUP BY a.name HAVING COUNT(w.pid) > 3;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63847,What is the list of domains and their corresponding conferences?,"SELECT d.name, c.name FROM domain d JOIN domain_conference dc ON d.did = dc.did JOIN conference c ON dc.cid = c.cid;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63848,What is the total number of organizations?,SELECT COUNT(*) FROM organization;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63849,What is the list of authors who have published more than 1 publication in a specific domain?,"SELECT DISTINCT a.name, d.name FROM domain d JOIN domain_author da ON d.did = da.did JOIN author a ON da.aid = a.aid JOIN writes w ON a.aid = w.aid GROUP BY a.name, d.name HAVING COUNT(*) > 1;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63851,What is the list of authors who have published more than 1 publication in a specific domain and conference?,"SELECT DISTINCT a.name, d.name, c.name FROM domain d JOIN domain_author da ON d.did = da.did JOIN author a ON da.aid = a.aid JOIN writes w ON a.aid = w.aid JOIN domain_conference dc ON d.did = dc.did JOIN conference c ON dc.cid = c.cid GROUP BY a.name, d.name, c.name HAVING COUNT(*) > 1;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63852,What is the total number of keywords used in publications?,SELECT COUNT(*) FROM publication_keyword;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63854,What is the total number of authors who have written more than 1 publication?,SELECT COUNT(*) FROM author a JOIN writes w ON a.aid = w.aid GROUP BY a.name HAVING COUNT(pid) > 1;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63855,What is the list of domains that have more than 2 journals?,"SELECT d.name, COUNT(*) FROM domain d JOIN domain_journal dj ON d.did = dj.did JOIN journal j ON dj.jid = j.jid GROUP BY d.name HAVING COUNT(*) > 2;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63856,What is the list of authors who have published more than 2 publications in a specific domain and conference?,"SELECT DISTINCT a.name, d.name, c.name FROM domain d JOIN domain_author da ON d.did = da.did JOIN author a ON da.aid = a.aid JOIN writes w ON a.aid = w.aid JOIN domain_conference dc ON d.did = dc.did JOIN conference c ON dc.cid = c.cid GROUP BY a.name, d.name, c.name HAVING COUNT(*) > 2;","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63857,What is the total number of domains with more than 2 publications?,SELECT COUNT(*) FROM domain d JOIN domain_author da ON d.did = da.did JOIN author a ON da.aid = a.aid JOIN writes w ON a.aid = w.aid GROUP BY d.name HAVING COUNT(pid) > 2;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
63858,What is the list of architects?,SELECT * FROM architect;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63859,What is the nationality of Architect Y?,SELECT nationality FROM architect WHERE name = 'Y';,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63860,When was Mill Y built?,SELECT built_year FROM mill WHERE name = 'Y';,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63861,What are the distinct names of architects?,SELECT DISTINCT name FROM architect;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63862,What are the possible values for the 'gender' column?,SELECT DISTINCT gender FROM architect;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63863,What are the architectural engineers with the same nationality as Architect E?,SELECT a.name AS architect_name FROM architect a WHERE nationality IN (SELECT nationality FROM architect WHERE name = 'E');,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63864,What is the list of mill locations?,SELECT DISTINCT location FROM mill;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63865,What is the average length of bridges in Kilometers?,SELECT AVG(length_meters / 1000) FROM bridge;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63868,What are the architectural engineers with the same gender as Architect I?,SELECT a.name AS architect_name FROM architect a WHERE gender IN (SELECT gender FROM architect WHERE name = 'I');,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63870,What are the mills located in Location X?,SELECT name FROM mill WHERE location = 'X';,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63871,What is the average length of mills in a specific location?,SELECT AVG(built_year) FROM mill WHERE location = 'X';,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63872,What are the architectural engineers with the same nationality as Architect K?,SELECT a.name AS architect_name FROM architect a WHERE nationality IN (SELECT nationality FROM architect WHERE name = 'K');,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63873,What is the list of bridge names?,SELECT DISTINCT name FROM bridge;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63875,What are the architectural engineers with the same nationality as Architect L?,SELECT a.name AS architect_name FROM architect a WHERE nationality IN (SELECT nationality FROM architect WHERE name = 'L');,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63877,What is the list of bridge lengths?,SELECT DISTINCT length_meters FROM bridge;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63879,What is the total number of mills?,SELECT COUNT(*) FROM mill;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
63880,What is the name of the longest ship in a battle?,SELECT name FROM ship WHERE location = (SELECT location FROM ship ORDER BY tonnage DESC LIMIT 1);,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63881,What are the total killed and injured in a battle?,SELECT SUM(killed + injured) AS total_victims FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = 1);,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63882,What is the name of the commander who won the most battles?,"SELECT name, COUNT(*) AS win_count FROM battle WHERE result = 'won' GROUP BY name ORDER BY win_count DESC LIMIT 1;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63883,What is the location of the battles where most ships were lost?,"SELECT location, COUNT(*) AS ship_count FROM ship WHERE lost_in_battle = 1 GROUP BY location ORDER BY ship_count DESC LIMIT 1;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63884,What were the captains of the ships that lost the most battles?,"SELECT latin_commander, COUNT(*) AS loss_count FROM battle WHERE result = 'lost' GROUP BY latin_commander ORDER BY loss_count DESC;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63886,What is the longest lost ship's name?,SELECT name FROM ship WHERE lost_in_battle = 1 ORDER BY length(name) DESC LIMIT 1;,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63887,What is the commander of the most victorious battle?,"SELECT result, COUNT(*) AS win_count FROM battle WHERE result = 'won' GROUP BY result ORDER BY win_count DESC LIMIT 1;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63888,What is the location of the battle where the most ships went down?,"SELECT location, COUNT(*) AS lost_ship_count FROM ship WHERE lost_in_battle = 1 GROUP BY location ORDER BY lost_ship_count DESC LIMIT 1;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63889,What is the ship's type that had the most losses?,"SELECT ship_type, COUNT(*) AS loss_count FROM ship WHERE lost_in_battle = 1 GROUP BY ship_type ORDER BY loss_count DESC LIMIT 1;","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63890,What is the average killed in a battle?,SELECT AVG(killed) AS avg_killed FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = 1);,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63892,What was the total killed and injured in all battles?,SELECT SUM(killed + injured) AS total_victims FROM death;,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63893,What is the average injured in a battle?,SELECT AVG(injured) AS avg_injured FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = 1);,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
63894,What is the weather condition like at each station?,"SELECT s.name, w.events, w.max_temperature_f FROM station s JOIN weather w ON s.id = w.zip_code WHERE w.date = '2021-01-01'","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63895,What is the most popular trip destination?,"SELECT start_station_name, COUNT(*) AS start_count FROM trip GROUP BY start_station_name ORDER BY start_count DESC LIMIT 1","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63896,What is the most common bike subscription type?,"SELECT COUNT(*) AS count, subscription_type FROM trip GROUP BY subscription_type ORDER BY count DESC LIMIT 1","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63897,What are the stations with the highest dock availability?,"SELECT s.name, AVG(docks_available) AS avgailability FROM station s JOIN status w ON s.id = w.station_id GROUP BY s.name ORDER BY avgailability DESC","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63898,What is the top 5 stations with highest bike availability?,"SELECT s.name, AVG(bikes_available) AS availability FROM station s JOIN status w ON s.id = w.station_id GROUP BY s.name ORDER BY availability DESC LIMIT 5","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63899,What are the most common trip starting points?,"SELECT start_station_name, COUNT(*) AS count FROM trip GROUP BY start_station_name ORDER BY count DESC LIMIT 5","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63900,What is the distance between consecutive trips?,"SELECT duration, COUNT(*) AS count FROM trip GROUP BY duration ORDER BY count DESC LIMIT 1","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63901,What are the most common trip destinations?,"SELECT end_station_name, COUNT(*) AS count FROM trip GROUP BY end_station_name ORDER BY count DESC LIMIT 5","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
63905,What is the total number of publications per year?,"SELECT year, COUNT(*) FROM publication GROUP BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63907,What are the top 5 authors by publication count?,"SELECT writer, COUNT(*) FROM book GROUP BY writer ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63908,What is the average number of references per publication?,SELECT AVG(reference_num) FROM publication,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63909,Which publications have the most citations?,"SELECT title, SUM(citation_num) FROM publication GROUP BY title ORDER BY SUM(citation_num) DESC","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63910,What is the earliest published book?,SELECT MIN(issues) FROM book,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63911,What is the latest published book?,SELECT MAX(issues) FROM book,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63912,What is the average citation count per year?,SELECT AVG(citation_num) FROM publication GROUP BY year,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63913,Which authors have written the fewest books?,"SELECT writer, COUNT(*) FROM book GROUP BY writer ORDER BY COUNT(*)","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63915,What is the most referenced reference?,"SELECT abstract, COUNT(*) FROM publication GROUP BY abstract ORDER BY COUNT(*) DESC","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63916,What is the total number of publications per author?,"SELECT writer, COUNT(*) FROM book GROUP BY writer","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63918,Which books have the most issues?,"SELECT title, SUM(issues) FROM book GROUP BY title ORDER BY SUM(issues) DESC","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63920,What is the latest publication?,SELECT MAX(year) FROM publication,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63921,What is the most cited reference?,"SELECT abstract, SUM(citation_num) FROM publication GROUP BY abstract ORDER BY SUM(citation_num) DESC","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63922,What is the total number of issues per book?,"SELECT title, SUM(issues) FROM book GROUP BY title","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63923,Which publications have the least citations?,"SELECT title, SUM(citation_num) FROM publication GROUP BY title ORDER BY SUM(citation_num)","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63928,Which publications have the most references?,"SELECT title, SUM(reference_num) FROM publication GROUP BY title ORDER BY SUM(reference_num) DESC","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
63930,List all candidates who are from a specific poll source,SELECT * FROM candidate WHERE poll_source = 'ABC',"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63931,What is the total support rate of candidates from ABC for each date,"SELECT date, SUM(support_rate) FROM candidate WHERE poll_source = 'ABC' GROUP BY date","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63932,Average consider rate for each candidate,"SELECT candidate_id, AVG(consider_rate) FROM candidate GROUP BY candidate_id","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63935,Find candidates with a support rate above a certain threshold,SELECT * FROM candidate WHERE support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63937,What is the total consider rate of candidates from each poll source,"SELECT poll_source, SUM(consider_rate) FROM candidate GROUP BY poll_source","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63938,Get the average oppose rate for each candidate,"SELECT candidate_id, AVG(oppose_rate) FROM candidate GROUP BY candidate_id","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63939,Count the number of candidates from each poll source for each date,"SELECT date, poll_source, COUNT(*) FROM candidate WHERE poll_source = 'ABC' GROUP BY date, poll_source","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63942,List all candidates who are from a specific poll source and have a certain support rate,SELECT * FROM candidate WHERE poll_source = 'ABC' AND support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63943,Get the total support rate of all candidates for each poll source,"SELECT poll_source, SUM(support_rate) FROM candidate GROUP BY poll_source","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63944,Get the average height of people of a specific height range,SELECT AVG(height) FROM people WHERE height >= 170,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63945,Find the candidates with the lowest support rate,SELECT * FROM candidate ORDER BY support_rate ASC LIMIT 1,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63947,What is the total consider rate of candidates from each poll source for each date,"SELECT date, poll_source, SUM(consider_rate) FROM candidate WHERE poll_source = 'ABC' GROUP BY date, poll_source","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63949,What is the average unsure rate of candidates from each poll source for each date,"SELECT date, poll_source, AVG(unsure_rate) FROM candidate WHERE poll_source = 'ABC' GROUP BY date, poll_source","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63950,Get the total support rate of all candidates for each date,"SELECT date, SUM(support_rate) FROM candidate GROUP BY date","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63952,Get the average height of people of a specific height,SELECT AVG(height) FROM people WHERE height = 175,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63954,Get the total oppose rate of all candidates for each poll source,"SELECT poll_source, SUM(oppose_rate) FROM candidate GROUP BY poll_source","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63955,Find candidates from a specific poll source and have a certain consider rate,SELECT * FROM candidate WHERE poll_source = 'ABC' AND consider_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
63958,Which continents have the most car models?,"SELECT continent, COUNT(*) FROM countries GROUP BY continent","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
63959,What is the total production cost of all cinemas?,SELECT SUM(capacity * 10) AS total_production_cost FROM cinema;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63960,What is the average capacity of cinemas in a particular location?,SELECT AVG(capacity) AS average_capacity FROM cinema WHERE location = 'Mumbai';,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63961,What is the total number of showtimes for all films in a particular cinema?,SELECT SUM(show_times_per_day) AS total_showtimes FROM schedule WHERE cinema_id = 5;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63962,What is the total revenue generated by all cinemas on a particular day?,SELECT SUM(show_times_per_day * price) AS total_revenue FROM schedule WHERE date = '2022-07-25';,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63963,What films were released in a particular cinema?,SELECT * FROM film WHERE film_id IN (SELECT film_id FROM schedule WHERE cinema_id = 1);,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63964,What are the cinemas that have films with the highest rank?,SELECT * FROM cinema WHERE cinema_id IN (SELECT DISTINCT cinema_id FROM schedule WHERE film_id IN (SELECT film_id FROM film WHERE rank_in_series >= 4));,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63965,What is the total revenue generated by a particular cinema?,SELECT SUM(show_times_per_day * price) AS total_revenue FROM schedule WHERE cinema_id = 1;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63966,What are the films that have been released in multiple cinemas?,SELECT * FROM film WHERE film_id IN (SELECT DISTINCT film_id FROM schedule);,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63967,What is the average rating of films released in a particular cinema?,SELECT AVG(rank_in_series) AS average_rating FROM film WHERE film_id IN (SELECT film_id FROM schedule WHERE cinema_id = 1);,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63968,What is the average price of showtimes in a particular cinema?,SELECT AVG(price) AS average_price FROM schedule WHERE cinema_id = 2;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63969,What is the total revenue generated by a particular film?,SELECT SUM(show_times_per_day * price) AS total_revenue FROM schedule WHERE film_id = 1;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63970,What are the maximum and minimum capacities of cinemas?,"SELECT MIN(capacity) AS min_capacity, MAX(capacity) AS max_capacity FROM cinema;","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63971,What is the total number of cinemas?,SELECT COUNT(*) AS total_cinemas FROM cinema;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63972,What is the average showtime for all films?,SELECT AVG(show_times_per_day) AS average_showtime FROM schedule;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63974,What is the total revenue generated by all cinemas?,SELECT SUM(show_times_per_day * price) AS total_revenue FROM schedule;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63975,What are the top 3 cinemas based on their total capacity?,SELECT * FROM cinema ORDER BY capacity DESC LIMIT 3;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63976,What is the average price of showtimes in all cinemas?,SELECT AVG(price) AS average_price FROM schedule;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63977,What is the total number of cinemas in a particular location?,SELECT COUNT(*) AS total_cinemas FROM cinema WHERE location = 'Mumbai';,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
63978,Which hosting city hosted the most matches in the given time range?,SELECT host_city FROM hosting_city GROUP BY host_city ORDER BY count(*) DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63979,What is the average January temperature of the cities with the highest GDP?,SELECT AVG(jan) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp DESC LIMIT 5),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63980,Which pilot won the most matches in a given year?,SELECT winning_pilot FROM match GROUP BY winning_pilot ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63981,What is the average monthly temperature of the bottom 3 cities by GDP?,SELECT AVG(dec) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp ASC LIMIT 3),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63982,What is the average temperature in October of the cities with the highest GDP?,SELECT AVG(oct) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp DESC LIMIT 3),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63983,Which aircraft won the most matches in the given time range?,SELECT winning_aircraft FROM match GROUP BY winning_aircraft ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63984,What is the average September temperature of the cities with the lowest GDP?,SELECT AVG(sep) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp ASC LIMIT 3),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63986,What is the average June temperature of the top 5 cities by GDP?,SELECT AVG(jun) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp DESC LIMIT 5),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63987,What is the average April temperature of the cities with the highest GDP?,SELECT AVG(apr) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp DESC LIMIT 3),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63989,What is the average March temperature of the cities with the lowest GDP?,SELECT AVG(mar) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp ASC LIMIT 3),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63990,What is the average January temperature of the top 3 cities by GDP?,SELECT AVG(jan) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.city IN (SELECT city FROM city ORDER BY gdp DESC LIMIT 3),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
63993,Which country has the most climbers?,"SELECT country, COUNT(*) as total_climbers FROM climber GROUP BY country ORDER BY total_climbers DESC;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
63995,Which mountain has the highest prominence?,"SELECT name, prominence FROM mountain ORDER BY prominence DESC LIMIT 1;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
63996,Which climber has the most points?,"SELECT name, SUM(points) as total_points FROM climber GROUP BY name ORDER BY total_points DESC LIMIT 1;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
63997,Which country has the highest peak?,"SELECT country, MAX(height) as highest_peak FROM mountain GROUP BY country ORDER BY highest_peak DESC;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
63998,What is the total number of climbers by country?,"SELECT country, COUNT(*) as total_climbers FROM climber GROUP BY country;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
63999,What is the minimum time it takes for a climber to climb a mountain?,SELECT MIN(time) FROM climber;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64000,How many climbers are there in total?,SELECT COUNT(*) as total_climbers FROM climber;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64001,What is the total number of mountains?,SELECT COUNT(*) FROM mountain;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64002,Which climber is from a specific country?,"SELECT name, country FROM climber WHERE country = 'specific_country';","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64003,Which mountain is the highest in a specific range?,SELECT name FROM mountain WHERE range = 'specific_range' ORDER BY height DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64004,Which climber has climbed the most mountains?,"SELECT name, COUNT(mountain_id) as total_mountains FROM climber GROUP BY name ORDER BY total_mountains DESC LIMIT 1;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64005,What is the average points earned by climbers in a specific country?,SELECT AVG(points) FROM climber WHERE country = 'specific_country';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64006,Which country has the most prominent peaks?,"SELECT country, SUM(prominence) as total_prominence FROM mountain GROUP BY country ORDER BY total_prominence DESC;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64007,What is the total sum of points by country?,"SELECT country, SUM(points) as total_points FROM climber GROUP BY country;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64008,How many climbers are there from a specific country?,SELECT COUNT(*) as total_climbers FROM climber WHERE country = 'specific_country';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64009,What is the maximum points earned by a climber?,SELECT MAX(points) FROM climber;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64011,What is the total sum of points by mountain?,"SELECT mountain.name, SUM(points) as total_points FROM climber JOIN mountain ON climber.mountain_id = mountain.mountain_id GROUP BY mountain.name;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64012,How many climbers are there who climbed a specific mountain?,SELECT COUNT(*) FROM climber WHERE mountain_id = (SELECT mountain_id FROM mountain WHERE name = 'specific_mountain');,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64013,Which country has the highest peak in a specific range?,SELECT country FROM mountain WHERE range = 'specific_range' ORDER BY height DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64014,Which climber climbed the most mountains in a specific country?,"SELECT name, COUNT(mountain_id) as total_mountains FROM climber WHERE country = 'specific_country' GROUP BY name ORDER BY total_mountains DESC LIMIT 1;","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64015,Which peak has the highest prominence in a specific range?,SELECT name FROM mountain WHERE range = 'specific_range' ORDER BY prominence DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
64016,What is the average monthly total amount spent by each member at each shop?,"SELECT h.hh_id, m.name, SUM(h.total_amount) FROM happy_hour_member h JOIN member m ON h.member_id = m.member_id GROUP BY h.hh_id, m.name","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64017,What is the total number of members at each shop?,"SELECT s.shop_id, COUNT(DISTINCT m.member_id) FROM shop s JOIN happy_hour_member h ON s.shop_id = h.hh_id JOIN member m ON h.member_id = m.member_id GROUP BY s.shop_id","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64018,What is the highest total amount spent by a single member at a single shop?,SELECT h.total_amount FROM happy_hour_member h ORDER BY h.total_amount DESC LIMIT 1,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64019,What are the top 3 members who have spent the most in total at all shops?,"SELECT m.name, SUM(h.total_amount) FROM happy_hour_member h JOIN member m ON h.member_id = m.member_id GROUP BY m.name ORDER BY 2 DESC LIMIT 3","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64020,What are the top 5 shops with the highest total amount spent by all members?,"SELECT s.address, SUM(h.total_amount) FROM shop s JOIN happy_hour_member h ON s.shop_id = h.hh_id GROUP BY s.address ORDER BY 2 DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64022,What is the number of happy hours at each shop?,"SELECT s.shop_id, COUNT(DISTINCT h.hh_id) FROM shop s JOIN happy_hour h ON s.shop_id = h.hh_id GROUP BY s.shop_id","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64023,What are the top 3 shops with the highest number of staff?,"SELECT s.address, COUNT(s.num_of_staff) FROM shop s GROUP BY s.address ORDER BY 2 DESC LIMIT 3","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64024,What is the average address length of all shops?,SELECT AVG(LENGTH(s.address)) FROM shop s,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64025,What are the top 5 shops with the highest score?,"SELECT s.address, s.score FROM shop s ORDER BY s.score DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64026,What are the top 5 members who have spent the most in total at each shop?,"SELECT m.name, SUM(h.total_amount) FROM happy_hour_member h JOIN member m ON h.member_id = m.member_id GROUP BY m.name ORDER BY 2 DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64027,What are the top 5 shops with the lowest score?,"SELECT s.address, s.score FROM shop s ORDER BY s.score ASC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64028,What are the top 5 members who have spent the most in total at each shop and year?,"SELECT s.address, SUM(h.total_amount) FROM shop s JOIN happy_hour_member h ON s.shop_id = h.hh_id JOIN member m ON h.member_id = m.member_id GROUP BY s.address ORDER BY 2 DESC LIMIT 5","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64029,What are the top 3 shops with the highest number of happy hours at all shops?,"SELECT s.address, COUNT(DISTINCT h.hh_id) FROM shop s JOIN happy_hour h ON s.shop_id = h.hh_id GROUP BY s.address ORDER BY 2 DESC LIMIT 3","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64030,What advisors teach which courses?,"SELECT a.i_id, c.crs_code FROM advisor a JOIN teaches t ON a.i_id = t.id JOIN course c ON t.course_id = c.crs_code","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64031,What departments have the most courses?,"SELECT d.dept_name, COUNT(c.crs_code) FROM department d JOIN course c ON d.dept_code = c.dept_code GROUP BY d.dept_name ORDER BY COUNT(*) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64032,Who teaches the most courses?,"SELECT i.name, COUNT(*) FROM instructor i JOIN teaches t ON i.id = t.id GROUP BY i.name ORDER BY COUNT(*) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64033,What are the most popular courses?,"SELECT c.crs_code, COUNT(t.id) FROM course c JOIN takes t ON c.crs_code = t.course_id GROUP BY c.crs_code ORDER BY COUNT(t.id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64034,What time slots are the most popular?,"SELECT ts.time_slot_id, COUNT(t.id) FROM takes t JOIN section s ON t.sec_id = s.sec_id JOIN time_slot ts ON s.time_slot_id = ts.time_slot_id GROUP BY ts.time_slot_id ORDER BY COUNT(t.id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64035,What courses are most often taken together?,"SELECT p.course_id, COUNT(p.prereq_id) FROM prereq p GROUP BY p.course_id ORDER BY COUNT(p.prereq_id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64037,What are the most popular departments?,"SELECT d.dept_code, COUNT(c.crs_code) FROM department d JOIN course c ON d.dept_code = c.dept_code GROUP BY d.dept_code ORDER BY COUNT(c.crs_code) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64038,What courses have the most sections?,"SELECT c.crs_code, COUNT(s.sec_id) FROM course c JOIN section s ON c.crs_code = s.course_id GROUP BY c.crs_code ORDER BY COUNT(s.sec_id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64040,What departments have the most sections?,"SELECT d.dept_code, COUNT(s.sec_id) FROM department d JOIN section s ON d.dept_code = s.building GROUP BY d.dept_code ORDER BY COUNT(s.sec_id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64042,What are the most popular rooms?,"SELECT c.room_number, COUNT(t.id) FROM section s JOIN takes t ON s.sec_id = t.sec_id JOIN classroom c ON s.building = c.building AND s.room_number = c.room_number GROUP BY c.room_number ORDER BY COUNT(t.id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64043,What departments have the most advisors?,"SELECT d.dept_code, COUNT(a.i_id) FROM department d JOIN advisor a ON d.dept_code = a.i_id GROUP BY d.dept_code ORDER BY COUNT(a.i_id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64045,What are the most popular semesters?,"SELECT s.semester, COUNT(t.id) FROM takes t JOIN section s ON t.sec_id = s.sec_id GROUP BY s.semester ORDER BY COUNT(t.id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64046,What are the most popular instructors?,"SELECT i.name, COUNT(t.id) FROM instructor i JOIN teaches t ON i.id = t.id GROUP BY i.name ORDER BY COUNT(t.id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64048,What time slots have the most sections?,"SELECT ts.time_slot_id, COUNT(s.sec_id) FROM takes t JOIN section s ON t.sec_id = s.sec_id JOIN time_slot ts ON s.time_slot_id = ts.time_slot_id GROUP BY ts.time_slot_id ORDER BY COUNT(s.sec_id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64049,What departments have the most sections in each semester?,"SELECT d.dept_code, s.semester, COUNT(s.sec_id) FROM department d JOIN section s ON d.dept_code = s.building GROUP BY d.dept_code, s.semester ORDER BY COUNT(s.sec_id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64050,What are the most popular courses for each semester?,"SELECT s.semester, c.crs_code FROM takes t JOIN section s ON t.sec_id = s.sec_id JOIN course c ON t.course_id = c.crs_code GROUP BY s.semester, c.crs_code ORDER BY COUNT(t.id) DESC","
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
64051,List all departments with their corresponding addresses,"SELECT d.dept_name, d.dept_address FROM department d","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64052,What is the average age of all employees?,"SELECT AVG(AGE) FROM (SELECT (date_part('year', birthdate) - 1970) AS age FROM employee) AS t","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64053,What is the most common title among employees?,"SELECT title, COUNT(*) AS count FROM employee GROUP BY title ORDER BY count DESC","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64055,What is the most common sex among dependents?,"SELECT sex, COUNT(*) AS count FROM dependent GROUP BY sex ORDER BY count DESC","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64056,What is the average number of hours worked by employees born in the 1980s?,SELECT AVG(hours) FROM works_on WHERE essn IN (SELECT essn FROM employee WHERE EXTRACT(YEAR FROM birthdate) >= 1980),"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64058,List all departments with their corresponding numbers,"SELECT d.dept_name, d.dept_code FROM department d","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64060,What is the most common relationship among dependents?,"SELECT relationship, COUNT(*) AS count FROM dependent GROUP BY relationship ORDER BY count DESC","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64061,List all dependents with their corresponding sexes,"SELECT dependent_name, sex FROM dependent","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
64062,What is the name of the company with the highest market value in the tech industry?,SELECT name FROM company WHERE industry='tech' ORDER BY market_value_in_billion DESC LIMIT 1;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64063,What is the average height of people working at companies with headquarters in Asia?,SELECT AVG(height) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.headquarters LIKE '%Asia%';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64064,How many people are working at companies with a sales revenue of over $10 billion?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.sales_in_billion > 10;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64065,What are the top 5 companies with the highest sales revenue in the financial industry?,"SELECT name, sales_in_billion FROM company WHERE industry='financial' ORDER BY sales_in_billion DESC LIMIT 5;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64066,What is the total number of people working at companies with a market value of over $50 billion?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.market_value_in_billion > 50;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64067,How many people are working at companies in the pharmaceutical industry?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.industry='pharmaceutical';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64068,What is the average weight of people working at companies with a sales revenue of over $1 billion?,SELECT AVG(weight) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.sales_in_billion > 1;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64069,What are the top 3 companies with the highest profits in the retail industry?,"SELECT name, profits_in_billion FROM company WHERE industry='retail' ORDER BY profits_in_billion DESC LIMIT 3;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64070,What is the total number of people working at companies in the energy industry?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.industry='energy';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64071,What are the top 5 companies with the highest assets in the banking industry?,"SELECT name, assets_in_billion FROM company WHERE industry='banking' ORDER BY assets_in_billion DESC LIMIT 5;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64072,How many people are working at companies in the manufacturing industry?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.industry='manufacturing';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64073,What is the average height of people working at companies with profits of over $500 million?,SELECT AVG(height) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.profits_in_billion > 500;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64074,What are the top 3 companies with the highest sales revenue in the technology industry?,"SELECT name, sales_in_billion FROM company WHERE industry='tech' ORDER BY sales_in_billion DESC LIMIT 3;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64075,How many people are working at companies with a market value of over $30 billion?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.market_value_in_billion > 30;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64076,What is the total number of people working at companies in the retail industry?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.industry='retail';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64077,What is the average weight of people working at companies with assets of over $5 billion?,SELECT AVG(weight) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.assets_in_billion > 5;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64078,What are the top 5 companies with the highest profits in the energy industry?,"SELECT name, profits_in_billion FROM company WHERE industry='energy' ORDER BY profits_in_billion DESC LIMIT 5;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64079,How many people are working at companies with a sales revenue of over $5 billion?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.sales_in_billion > 5;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64081,What is the average height of people working at companies with profits of over $1 billion?,SELECT AVG(height) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.profits_in_billion > 1;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64083,What are the top 5 companies with the highest assets in the financial industry?,"SELECT name, assets_in_billion FROM company WHERE industry='financial' ORDER BY assets_in_billion DESC LIMIT 5;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64084,What is the total number of people working at companies with a market value of over $10 billion?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.market_value_in_billion > 10;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64085,What is the average weight of people working at companies with a sales revenue of over $10 billion?,SELECT AVG(weight) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.sales_in_billion > 10;,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64086,What are the top 3 companies with the highest profits in the technology industry?,"SELECT name, profits_in_billion FROM company WHERE industry='tech' ORDER BY profits_in_billion DESC LIMIT 3;","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64087,How many people are working at companies in the banking industry?,SELECT COUNT(*) FROM people JOIN employment ON people.people_id=employment.people_id JOIN company ON employment.company_id=company.company_id WHERE company.industry='banking';,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE employment (
	company_id INTEGER, 
	people_id INTEGER, 
	year_working INTEGER
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64090,What is the average crime rate for counties with a police force?,SELECT AVG(crime_rate) FROM county_public_safety WHERE police_force IS NOT NULL,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64092,Which city has the highest GDP?,"SELECT city, MAX(gdp) FROM city GROUP BY city","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64096,What city has the highest regional population density?,"SELECT city, ROUND(regional_population / (SELECT MIN(regional_population) FROM city)) AS regional_population_density FROM city ORDER BY regional_population_density DESC LIMIT 1","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64097,What proportion of cities have more than 10 million residents?,SELECT COUNT(*) AS proportion FROM city WHERE regional_population > 10000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64100,What is the total number of residents in counties with a police force?,SELECT SUM(population) FROM county_public_safety WHERE police_force IS NOT NULL,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64101,What is the average population of a county with a police force?,SELECT AVG(population) FROM county_public_safety WHERE police_force IS NOT NULL,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64102,What is the highest case burden in a county?,SELECT MAX(case_burden) FROM county_public_safety,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64104,What city has the lowest GDP?,"SELECT city, MIN(gdp) FROM city GROUP BY city","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64107,What is the highest regional population growth rate?,SELECT MAX(regional_population) FROM city,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64109,What is the highest police force in a county?,SELECT MAX(police_officers) FROM county_public_safety,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64111,What proportion of counties have more than 10 police officers?,SELECT COUNT(*) AS proportion FROM county_public_safety WHERE police_officers > 10,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64114,What city has the lowest regional population?,"SELECT city, MIN(regional_population) FROM city GROUP BY city","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
64115,What is the average credit hours offered by the Department of Math?,SELECT AVG(crs_credit) FROM course WHERE dept_code='MATH',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64117,What are the total courses offered by the Department of Computer Science?,SELECT COUNT(*) FROM course WHERE dept_code='CSC',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64118,How many courses are offered by the Department of English?,SELECT COUNT(*) FROM course WHERE dept_code='ENG',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64119,List the top 5 courses offered by the Department of Math with the highest credits?,SELECT * FROM course WHERE dept_code='MATH' ORDER BY crs_credit DESC LIMIT 5,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64120,What are the total credits offered by the Department of Computer Science?,SELECT SUM(crs_credit) FROM course WHERE dept_code='CSC',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64121,What are the top 5 course credit hours in the Department of English?,SELECT * FROM course WHERE dept_code='ENG' ORDER BY crs_credit DESC LIMIT 5,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64122,What are the total credits for Math courses?,SELECT SUM(crs_credit) FROM course WHERE dept_code='MATH',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64123,What is the total number of courses offered by the Department of Math and the Department of Computer Science?,SELECT COUNT(*) FROM course WHERE dept_code='MATH' UNION ALL SELECT COUNT(*) FROM course WHERE dept_code='CSC',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64124,What is the average credit hours for the Department of Math and the Department of Computer Science?,SELECT AVG(crs_credit) FROM course WHERE dept_code='MATH' UNION ALL SELECT AVG(crs_credit) FROM course WHERE dept_code='CSC',"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64125,What are the top 3 courses with the highest credits for the Department of Math?,SELECT * FROM course WHERE dept_code='MATH' ORDER BY crs_credit DESC LIMIT 3,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64126,What are the top 3 courses with the highest credits for the Department of Computer Science?,SELECT * FROM course WHERE dept_code='CSC' ORDER BY crs_credit DESC LIMIT 3,"
CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE course_arrange (
	course_id INTEGER, 
	teacher_id INTEGER, 
	grade INTEGER
)


CREATE TABLE teacher (
	teacher_id INTEGER, 
	name TEXT, 
	age TEXT, 
	hometown TEXT
)"
64127,What is the total budget and gross worldwide for all movies?,"SELECT SUM(budget_million), SUM(gross_worldwide) FROM movie;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64129,What is the average equity shareholding for each company?,SELECT AVG(group_equity_shareholding) FROM culture_company;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64130,What books were published by a specific author?,SELECT * FROM book_club WHERE author_or_editor = 'Specific Author';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64132,Which company has the highest equity shareholding?,SELECT * FROM culture_company ORDER BY group_equity_shareholding DESC LIMIT 1;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64133,Which movies had a budget over 10 million?,SELECT * FROM movie WHERE budget_million > 10;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64134,What are the total movie budgets sorted in ascending order?,SELECT budget_million FROM movie ORDER BY budget_million ASC;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64135,What are the total movie grosses sorted in descending order?,SELECT gross_worldwide FROM movie ORDER BY gross_worldwide DESC;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64136,What companies have been incorporated before 1990?,SELECT * FROM culture_company WHERE incorporated_in < '1990-01-01';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64137,How many books were published in the 1980s?,SELECT COUNT(*) FROM book_club WHERE year >= 1980 AND year <= 1989;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64138,What are the books published in the 1990s?,SELECT * FROM book_club WHERE year >= 1990 AND year <= 1999;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64139,What are the total equity shareholdings for each company grouped by type?,"SELECT type, AVG(group_equity_shareholding) FROM culture_company GROUP BY type;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64141,How many movies were released between 2010-2019?,SELECT COUNT(*) FROM movie WHERE year >= 2010 AND year <= 2019;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64142,What are the total equity shareholdings for each company sorted in ascending order?,"SELECT company_name, group_equity_shareholding FROM culture_company ORDER BY group_equity_shareholding ASC;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64143,How many movies had a gross worldwide less than 10 million?,SELECT COUNT(*) FROM movie WHERE gross_worldwide < 10000000;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64144,What are the total book titles and their genres for each book club member?,"SELECT book_title, category FROM book_club GROUP BY book_title, category;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64145,How many companies are classified as 'limited'?,SELECT COUNT(*) FROM culture_company WHERE type = 'limited';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64147,How many books were published by women authors?,SELECT COUNT(*) FROM book_club WHERE author_or_editor LIKE '%woman%';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64149,What are the movies released in the last 10 years?,SELECT * FROM movie WHERE year >= 2010;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64150,What are the top 2 company names with the highest equity shareholding?,"SELECT company_name, group_equity_shareholding FROM culture_company ORDER BY group_equity_shareholding DESC LIMIT 2;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64151,How many books were published in the 1970s?,SELECT COUNT(*) FROM book_club WHERE year >= 1970 AND year <= 1979;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64153,What are the movie titles sorted in ascending order by director?,"SELECT director, title FROM movie ORDER BY director ASC;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64154,How many companies were incorporated in the 1990s?,SELECT COUNT(*) FROM culture_company WHERE incorporated_in >= '1990-01-01' AND incorporated_in <= '1999-12-31';,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64156,What are the movies released between 1980-1989?,SELECT * FROM movie WHERE year >= 1980 AND year <= 1989;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64158,How many movies have a budget higher than 50 million?,SELECT COUNT(*) FROM movie WHERE budget_million > 50;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
64159,Who has participated in the most debates?,"SELECT people.name, COUNT(*) FROM people, debate_people WHERE people.people_id = debate_people.debate_id GROUP BY people.name ORDER BY COUNT DESC LIMIT 10;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64160,What is the average height of affirmative debaters?,"SELECT AVG(height) FROM people, debate_people WHERE people.people_id = debate_people.debate_id AND debate_people.if_affirmative_win = TRUE;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64161,What is the distribution of debaters' weights?,"SELECT weight, COUNT(*) FROM people GROUP BY weight;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64162,Which debaters have a higher weight than average?,"SELECT people.name, people.weight FROM people WHERE people.weight > (SELECT AVG(weight) FROM people);","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64163,How many negative debaters have won?,SELECT COUNT(*) FROM debate_people WHERE if_affirmative_win = FALSE;,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64164,Which debaters have the most debate wins?,"SELECT people.name, COUNT(*) FROM people, debate_people WHERE people.people_id = debate_people.debate_id AND debate_people.if_affirmative_win = TRUE GROUP BY people.name ORDER BY COUNT DESC LIMIT 10;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64165,Who are the top 10 debaters by weight?,"SELECT people.name, people.weight FROM people ORDER BY people.weight DESC LIMIT 10;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64166,What is the distribution of debaters by height?,"SELECT height, COUNT(*) FROM people GROUP BY height;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64167,Which debaters have a lower weight than average?,"SELECT people.name, people.weight FROM people WHERE people.weight < (SELECT AVG(weight) FROM people);","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64170,What is the distribution of debaters by height and weight?,"SELECT height, weight, COUNT(*) FROM people GROUP BY height, weight;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64171,Who has participated in the least number of debates?,"SELECT people.name, COUNT(*) FROM people, debate_people WHERE people.people_id = debate_people.debate_id GROUP BY people.name ORDER BY COUNT LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64175,What is the list of all colleges?,SELECT * FROM college;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64176,What is the full name of the college in 'New York'?,SELECT * FROM college WHERE city='New York';,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64177,List all members in 'New York'?,SELECT * FROM member WHERE address LIKE '%New York%';,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64178,Show the number of members in 'New York'?,SELECT COUNT(*) FROM member WHERE address LIKE '%New York%';,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64180,What are the top 3 members with the highest membership level?,SELECT * FROM member ORDER BY level_of_membership DESC LIMIT 3;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64182,What are the top 3 members by their age?,SELECT * FROM member ORDER BY age DESC LIMIT 3;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64183,List all members who are above 25 years of age?,SELECT * FROM member WHERE age > 25;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64186,What are the top 3 colleges by the number of members?,"SELECT c.name_full, COUNT(*) FROM member m JOIN college c ON m.address = c.city GROUP BY c.name_full ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64187,What is the list of all members sorted by their age?,SELECT * FROM member ORDER BY age;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64188,list all members who are younger than 20 years?,SELECT * FROM member WHERE age < 20;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64192,List all members who are above 30 years of age?,SELECT * FROM member WHERE age > 30;,"
CREATE TABLE college (
	college_id TEXT, 
	name_full TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE round (
	round_id INTEGER, 
	member_id INTEGER, 
	decoration_theme TEXT, 
	rank_in_round INTEGER
)"
64195,"What's the average age of a head, grouped by state of birth?","SELECT born_state, AVG(age) AS average_age FROM head GROUP BY born_state","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64196,What's the number of departments by length of department name?,"SELECT LENGTH(dept_name) AS length, count(*) as total_depts FROM department GROUP BY length ORDER BY total_depts DESC","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64197,What are the top 3 employees with the highest age?,"SELECT name, age FROM head ORDER BY age DESC LIMIT 3","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64198,What's the total age of all heads?,SELECT SUM(age) FROM head,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64200,"What's the number of employees in each department, ordered by department name?","SELECT dept_name, COUNT(*) as total_employees FROM department GROUP BY dept_name ORDER BY dept_name","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64201,What's the total number of departments?,SELECT COUNT(*) as total_dept FROM department,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64204,What's the total number of employees in the marketing department?,SELECT COUNT(*) as total_employees FROM department WHERE dept_name = 'Marketing',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64205,What's the total number of employees in each state of birth?,"SELECT born_state, COUNT(*) as total_employees FROM head GROUP BY born_state","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64207,What are the top 3 states with the highest number of employees?,"SELECT born_state, COUNT(*) as total_employees FROM head GROUP BY born_state ORDER BY total_employees DESC LIMIT 3","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64208,"What's the total number of employees in each department, sorted in descending order?","SELECT dept_name, COUNT(*) as total_employees FROM department GROUP BY dept_name ORDER BY total_employees DESC","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64209,"What's the number of employees in each department, sorted in ascending order?","SELECT dept_name, COUNT(*) as total_employees FROM department GROUP BY dept_name ORDER BY total_employees ASC","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64210,What's the total number of employees in the sales department?,SELECT COUNT(*) as total_employees FROM department WHERE dept_name = 'Sales',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
64211,What devices are available in the shop?,"SELECT d.device_id, d.device FROM device d WHERE d.device_id IN (SELECT s.device_id FROM stock s) ORDER BY d.device;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64213,What devices are not available in the shop?,"SELECT d.device_id, d.device FROM device d WHERE d.device_id NOT IN (SELECT s.device_id FROM stock s);","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64214,What is the average score of the shops?,SELECT AVG(sh.score) AS average_score FROM shop sh;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64215,How many devices are available in total?,SELECT COUNT(*) AS total_devices FROM stock s;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64217,How many shops are there?,SELECT COUNT(*) AS total_shops FROM shop s;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64218,What is the total quantity of each device in each shop?,"SELECT s.shop_id, d.device_id, SUM(s.quantity) AS total_quantity FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY s.shop_id, d.device_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64219,What is the most popular device?,"SELECT d.device_id, COUNT(*) AS total_users FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id ORDER BY total_users DESC LIMIT 1;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64220,How many shops have a score above a certain threshold?,SELECT COUNT(*) AS shop_above_threshold FROM shop s WHERE s.score > 0.8;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64222,What is the average number of devices per shop?,SELECT AVG(s.device_id) AS average_devices FROM stock s;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64223,How many devices have a certain carrier?,SELECT COUNT(*) AS devices_with_carrier FROM device d WHERE d.carrier = 'AT&T';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64224,What is the total quantity of devices with a certain carrier?,SELECT SUM(s.quantity) AS total_quantity FROM stock s WHERE s.device_id IN (SELECT d.device_id FROM device d WHERE d.carrier = 'AT&T');,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64225,What is the average quantity of each device?,"SELECT d.device_id, AVG(s.quantity) AS average_quantity FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64226,How many devices have a certain package version?,SELECT COUNT(*) AS devices_with_package_version FROM device d WHERE d.package_version = '5.6';,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64227,What is the total quantity of devices with a certain package version?,SELECT SUM(s.quantity) AS total_quantity FROM stock s WHERE s.device_id IN (SELECT d.device_id FROM device d WHERE d.package_version = '5.6');,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64228,What is the most popular shop?,"SELECT sh.shop_id, AVG(sh.score) AS average_score FROM shop sh GROUP BY sh.shop_id ORDER BY average_score DESC LIMIT 1;","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64229,What is the total quantity of devices without a certain carrier?,SELECT SUM(s.quantity) AS total_quantity FROM stock s WHERE s.device_id NOT IN (SELECT d.device_id FROM device d WHERE d.carrier = 'AT&T');,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64230,How many shops have a certain score?,SELECT COUNT(*) AS shops_with_score FROM shop s WHERE s.score > 8;,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64231,What is the total quantity of devices with a certain carrier and package version?,SELECT SUM(s.quantity) AS total_quantity FROM stock s WHERE s.device_id IN (SELECT d.device_id FROM device d WHERE d.carrier = 'AT&T' AND d.package_version = '5.6');,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64232,How many devices are new?,SELECT COUNT(*) AS devices_new FROM device d WHERE d.device_id IN (SELECT s.device_id FROM stock s);,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
64238,What is the average population of counties with zip code starting with 1?,SELECT AVG(population) FROM county WHERE zip_code LIKE '1%';,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64241,What are the top 5 districts with the highest number of elections?,SELECT * FROM election ORDER BY district DESC LIMIT 5;,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64242,What is the total number of parties?,SELECT COUNT(DISTINCT party) FROM party;,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64244,What are the top 5 years of all parties?,SELECT * FROM party ORDER BY year DESC LIMIT 5;,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64246,What is the total number of lieutenant governors?,SELECT COUNT(DISTINCT lieutenant_governor) FROM party;,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64247,What is the total number of comptrollers?,SELECT COUNT(DISTINCT comptroller) FROM party;,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64251,What are the top 5 dates of first elected officials?,SELECT * FROM election ORDER BY first_elected DESC LIMIT 5;,"
CREATE TABLE county (
	county_id INTEGER, 
	county_name TEXT, 
	population REAL, 
	zip_code TEXT
)


CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)"
64258,List all employees born before 1985,SELECT * FROM employee WHERE birthdate < '1985-01-01',"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64259,Who are the full-time employees?,SELECT * FROM hiring WHERE is_full_time = 't';,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64261,List all employees in the US,SELECT * FROM employee WHERE country='US';,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64262,What is the highest bonus given?,SELECT MAX(bonus) FROM evaluation;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64264,List all employees who are leaders,SELECT * FROM employee WHERE reportsto IS NOT NULL;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64265,Show the list of shops,SELECT * FROM shop;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64268,Which shop is open for the longest time?,SELECT * FROM shop ORDER BY OPEN_YEAR DESC LIMIT 1;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64269,Get the total score of shops,SELECT SUM(score) FROM shop;,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64270,Which employee has the longest service?,"SELECT * FROM employee ORDER BY EXTRACT(YEAR FROM age(current_date, hiredate)) DESC LIMIT 1;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64272,Get the sum of total age of employees,"SELECT SUM(extract(year from age(current_date, birthdate))) FROM employee;","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
64277,What is the festival with the most attendees?,"SELECT location, COUNT(*) AS total_attendees FROM festival_detail GROUP BY location ORDER BY total_attendees DESC LIMIT 1","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64280,What is the most common location for festivals?,"SELECT location, COUNT(*) AS total_festivals FROM festival_detail GROUP BY location ORDER BY total_festivals DESC LIMIT 1","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64282,What are the top 5 most attended festivals?,"SELECT festival_name, num_of_audience FROM festival_detail ORDER BY num_of_audience DESC LIMIT 5","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64283,What is the average number of attendees for each location?,"SELECT location, AVG(num_of_audience) AS avg_attendees FROM festival_detail GROUP BY location","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64285,What is the festival with the most nominations?,"SELECT festival_id, COUNT(*) AS num_nominations FROM nomination GROUP BY festival_id ORDER BY num_nominations DESC LIMIT 1","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64286,What is the number of festivals held in each year?,"SELECT year, COUNT(*) AS num_festivals FROM festival_detail GROUP BY year","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64290,What is the number of nominations for each artwork?,"SELECT artwork_id, COUNT(*) AS num_nominations FROM nomination GROUP BY artwork_id","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64291,What is the total number of attendees?,SELECT SUM(num_of_audience) AS total_attendees FROM festival_detail,"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64292,What is the earliest and latest festival held?,"SELECT MIN(year), MAX(year) FROM festival_detail","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64293,What is the number of attendees for each location and year?,"SELECT location, year, SUM(num_of_audience) AS total_attendees FROM festival_detail GROUP BY location, year","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
64299,What is the number of male entrepreneurs?,SELECT COUNT(*) FROM people WHERE height > (SELECT AVG(height) FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur)),"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64300,What is the tallest entrepreneur?,SELECT MAX(height) FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur),"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64302,What is the most frequent birth place of entrepreneurs?,SELECT birth_place FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur) GROUP BY birth_place ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64303,How many entrepreneurs have more than one request?,SELECT COUNT(*) FROM entrepreneur GROUP BY people_id HAVING COUNT(*) > 1,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64304,What is the smallest requesting entrepreneur?,SELECT MIN(money_requested) FROM entrepreneur,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64305,What is the number of requests by women?,SELECT COUNT(*) FROM entrepreneur WHERE investor = 'women',"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64306,What is the average height of entrepreneurs who are funded?,SELECT AVG(height) FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur) AND people_id IN (SELECT people_id FROM entrepreneur WHERE money_requested > 0),"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64307,What is the most common company?,SELECT company FROM entrepreneur GROUP BY company ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64308,What is the number of entrepreneurs requesting more than 200000?,SELECT COUNT(*) FROM entrepreneur WHERE money_requested > 200000,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64309,What is the average weight of entrepreneurs who are funded?,SELECT AVG(weight) FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur) AND people_id IN (SELECT people_id FROM entrepreneur WHERE money_requested > 0),"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64310,What is the number of entrepreneurs requesting less than 100000?,SELECT COUNT(*) FROM entrepreneur WHERE money_requested < 100000,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64311,What is the average height of entrepreneurs requesting more than 200000?,SELECT AVG(height) FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur) AND people_id IN (SELECT people_id FROM entrepreneur WHERE money_requested > 200000),"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64312,What is the average height of entrepreneurs requesting more than 100000?,SELECT AVG(height) FROM people WHERE people_id IN (SELECT people_id FROM entrepreneur) AND people_id IN (SELECT people_id FROM entrepreneur WHERE money_requested > 100000),"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64313,What is the number of entrepreneurs requesting more than 100000?,SELECT COUNT(*) FROM entrepreneur WHERE money_requested > 100000,"
CREATE TABLE entrepreneur (
	entrepreneur_id INTEGER, 
	people_id INTEGER, 
	company TEXT, 
	money_requested REAL, 
	investor TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
64318,What is the most trusted user?,"SELECT target_u_id, SUM(trust) AS total_trust FROM trust GROUP BY target_u_id ORDER BY total_trust DESC LIMIT 1;","
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
64320,Who are the top 5 users with the most trusted reviews?,"SELECT source_u_id, SUM(trust) AS total_trust FROM trust GROUP BY source_u_id ORDER BY total_trust DESC LIMIT 5;","
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
64321,What is the number of unique users that reviewed an item?,SELECT COUNT(DISTINCT u_id) FROM review;,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
64323,What are the popular items?,SELECT title FROM item WHERE i_id IN (SELECT i_id FROM review GROUP BY i_id ORDER BY COUNT(*) DESC LIMIT 5);,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
64324,What is the most popular review?,SELECT * FROM review ORDER BY rank DESC LIMIT 1;,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
64340,Which theme has been used most often in competitions?,"SELECT theme, COUNT(*) AS count FROM farm_competition GROUP BY theme ORDER BY count DESC LIMIT 1;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64341,Get the farm with the most working horses.,SELECT * FROM farm ORDER BY working_horses DESC LIMIT 1;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64342,Get the total working horses of all farms.,SELECT SUM(working_horses) FROM farm;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64344,Get the farm with the most oxen.,SELECT * FROM farm ORDER BY oxen DESC LIMIT 1;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64346,What is the highest average sheep or goats of all farms?,SELECT AVG(sheep_and_goats) FROM farm;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64347,Get the farm with the most sheep or goats.,SELECT * FROM farm ORDER BY sheep_and_goats DESC LIMIT 1;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64348,Group farm competitions by year.,"SELECT year, COUNT(*) AS count FROM farm_competition GROUP BY year;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64349,Get the farm competition with the highest rank.,SELECT * FROM competition_record ORDER BY rank DESC LIMIT 1;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64350,What is the average rank of all farm competitions?,SELECT AVG(rank) FROM competition_record;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64352,What is the lowest rank of all farm competitions?,SELECT * FROM competition_record ORDER BY rank ASC LIMIT 1;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64353,Group competition records by farm ID.,"SELECT farm_id, COUNT(*) AS count FROM competition_record GROUP BY farm_id;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64354,Get the host city with the most hosted competitions.,"SELECT host_city_id, COUNT(*) AS count FROM farm_competition GROUP BY host_city_id ORDER BY count DESC LIMIT 1;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64355,Get the top 5 hosts of competitions.,"SELECT host_city_id, COUNT(*) AS count FROM farm_competition GROUP BY host_city_id ORDER BY count DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64358,Group competition records by theme.,"SELECT theme, COUNT(*) AS count FROM farm_competition GROUP BY theme;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
64361,What is the average disk loading of all aircraft?,SELECT AVG(max_disk_loading::float) FROM aircraft,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64364,Who is the oldest employee in the company?,SELECT * FROM employee ORDER BY birthdate ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64367,What is the average distance of all flights?,SELECT AVG(distance::float) FROM flight,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64369,Which flight with the highest price?,SELECT * FROM flight ORDER BY price DESC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64374,What are the top 5 flights with the lowest prices?,SELECT * FROM flight ORDER BY price ASC LIMIT 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64375,What are the top 5 employees with the highest salaries?,SELECT * FROM employee ORDER BY title DESC LIMIT 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64377,What is the total number of unique destinations?,SELECT COUNT(DISTINCT destination) FROM flight,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64378,What is the number of aircraft produced in each year?,"SELECT EXTRACT(YEAR FROM birthdate) AS year, COUNT(*) FROM employee GROUP BY year","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64379,What is the average distance of flights from country X?,SELECT AVG(distance) FROM flight WHERE origin LIKE '%X',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64380,What is the total number of unique origins?,SELECT COUNT(DISTINCT origin) FROM flight,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64383,What is the total number of unique destinations from country X?,SELECT COUNT(DISTINCT destination) FROM flight WHERE origin LIKE '%X',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64384,What is the number of flights from country Y between two specific dates?,SELECT COUNT(*) FROM flight WHERE origin LIKE '%Y' AND departure_date BETWEEN '2020-01-01' AND '2020-12-31',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64385,What is the average price of flights from country X?,SELECT AVG(price) FROM flight WHERE origin LIKE '%X',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64386,What are the top 5 employees with the lowest salaries?,SELECT * FROM employee ORDER BY title ASC LIMIT 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64388,What is the average distance of flights to country Z?,SELECT AVG(distance) FROM flight WHERE destination LIKE '%Z',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64389,What are the top 5 flights with the longest flight times?,SELECT * FROM flight ORDER BY (arrival_date - departure_date) DESC LIMIT 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64390,What is the earliest and latest pilots?,"SELECT MIN(birthdate) AS earliest, MAX(birthdate) AS latest FROM employee","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64391,What is the total number of employees in a specific age range?,SELECT COUNT(*) FROM employee WHERE EXTRACT(YEAR FROM birthdate) < 1980,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
64392,Which airline has the most flights from the US?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country = 'United States') GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64393,What is the most frequent flight route?,"SELECT sourceairport, destairport, COUNT(*) as frequency FROM flights GROUP BY sourceairport, destairport ORDER BY frequency DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64394,Which airline has the highest number of flights from Asia?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('China', 'Japan', 'South Korea')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64395,What is the country with the most airports?,"SELECT country, COUNT(*) as total_airports FROM airports GROUP BY country ORDER BY total_airports DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64396,Which airline has the highest number of flights to the Americas?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('USA', 'Canada', 'Mexico')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64397,What are the top 5 airlines by number of flights?,"SELECT airline, COUNT(*) as total_flights FROM flights GROUP BY airline ORDER BY total_flights DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64400,Which airline has the highest number of flights to South America?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('Brazil', 'Argentina', 'Chile')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64401,What is the most popular airline globally?,"SELECT airline, COUNT(*) as total_flights FROM flights GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64402,Which airline has the highest number of flights to Africa?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('South Africa', 'Morocco', 'Egypt')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64403,Which airline has the highest number of flights to the Middle East?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('Israel', 'United Arab Emirates', 'Saudi Arabia')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64404,What is the country with the lowest number of airports?,"SELECT country, COUNT(*) as total_airports FROM airports GROUP BY country ORDER BY total_airports LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64406,Which airline has the highest number of flights to Oceania?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('Australia', 'New Zealand', 'Papua New Guinea')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64407,What is the country with the highest number of airlines?,"SELECT country, COUNT(DISTINCT airline) as total_airlines FROM airlines GROUP BY country ORDER BY total_airlines DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64408,Which airline has the highest number of flights to Europe?,"SELECT airline, COUNT(*) as total_flights FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE country IN ('Germany', 'France', 'Italy')) GROUP BY airline ORDER BY total_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64412,What is the country with the highest number of airport codes?,"SELECT country, COUNT(DISTINCT airportcode) as total_airportcodes FROM airports GROUP BY country ORDER BY total_airportcodes DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
64414,Which airport is the busiest?,"SELECT a.airportname, COUNT(r) AS num_flights FROM routes r JOIN airports a ON r.dst_ap = a.airportcode GROUP BY a.airportname ORDER BY num_flights DESC LIMIT 1;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64415,What are the top 5 airports in terms of arrival passengers?,"SELECT a.airportname, SUM(1) AS num_passengers FROM routes r JOIN airports a ON r.src_ap = a.airportcode GROUP BY a.airportname ORDER BY num_passengers DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64416,What are the top 5 airports in terms of departures?,"SELECT a.airportname, SUM(1) AS num_departures FROM routes r JOIN airports a ON r.src_ap = a.airportcode GROUP BY a.airportname ORDER BY num_departures DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64417,How many airports operate in each country?,"SELECT country, COUNT(DISTINCT a.airportname) AS num_airports FROM airports a GROUP BY country;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64418,What are the top 5 arriving airports in terms of number of flights?,"SELECT a.airportname, COUNT(*) AS num_flights FROM routes r JOIN airports a ON r.dst_ap = a.airportcode GROUP BY a.airportname ORDER BY num_flights DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64419,What are the top 5 airports in terms of arrival passengers and a total of flights to and from each airport?,"SELECT a.airportname, SUM(1) AS num_passengers, (SELECT COUNT(*) FROM routes r JOIN airports a ON r.src_ap = a.airportcode WHERE r.src_ap = a.airportcode) + (SELECT COUNT(*) FROM routes r JOIN airports a ON r.dst_ap = a.airportcode WHERE r.dst_ap = a.airportcode) AS num_total_flights FROM routes r JOIN airports a ON r.src_ap = a.airportcode GROUP BY a.airportname ORDER BY num_passengers DESC, num_total_flights DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64420,How many countries have airlines operating in them?,SELECT COUNT(DISTINCT country) FROM airlines;,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64422,What are the top 5 airports in terms of number of routes?,"SELECT a.airportname, COUNT(*) AS num_routes FROM routes r JOIN airports a ON r.src_ap = a.airportcode GROUP BY a.airportname ORDER BY num_routes DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64423,What are the top 5 airports in terms of total number of flights?,"SELECT a.airportname, (SELECT COUNT(*) FROM routes r JOIN airports a ON r.src_ap = a.airportcode WHERE r.src_ap = a.airportcode) + (SELECT COUNT(*) FROM routes r JOIN airports a ON r.dst_ap = a.airportcode WHERE r.dst_ap = a.airportcode) AS num_total_flights FROM routes r JOIN airports a ON r.src_ap = a.airportcode GROUP BY a.airportname ORDER BY num_total_flights DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64424,Which airlines fly to each airport?,SELECT dst_ap FROM routes r JOIN airports a ON r.dst_ap = a.airportcode GROUP BY dst_ap;,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64427,How many airports operate in the most countries?,"SELECT country, COUNT(DISTINCT a.airportname) AS num_airports FROM airports a GROUP BY country ORDER BY num_airports DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64429,How many airlines operate in each country?,"SELECT country, COUNT(DISTINCT airline) AS num_airlines FROM airlines GROUP BY country;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64431,Which airlines fly from each airport?,SELECT src_ap FROM routes r JOIN airports a ON r.src_ap = a.airportcode GROUP BY src_ap;,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64432,What are the top 5 airports in terms of total number of flights?,"SELECT a.airportname, (SELECT COUNT(*) FROM routes r JOIN airports a ON r.src_ap = a.airportcode WHERE r.src_ap = a.airportcode) + (SELECT COUNT(*) FROM routes r JOIN airports a ON r.dst_ap = a.airportcode WHERE r.dst_ap = a.airportcode) AS num_total_flights FROM airports a GROUP BY a.airportname ORDER BY num_total_flights DESC LIMIT 5;","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
64434,What is the average distance of flights from each airport?,SELECT AVG(distance) FROM flight GROUP BY aid,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64436,What are the top 3 operate companies by principal activities?,SELECT * FROM operate_company ORDER BY principal_activities DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64437,What is the total number of passengers from 2010-2015?,SELECT SUM(total_passengers) FROM airport WHERE airport_id IN (SELECT aid FROM flight WHERE departure_date BETWEEN '2010-01-01' AND '2015-12-31'),"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64440,What are the top 3 airports by domestic passengers?,SELECT * FROM airport ORDER BY domestic_passengers DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64442,What are the top 3 operate companies by type?,SELECT * FROM operate_company ORDER BY type DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64443,What is the airport with the highest number of transit passengers?,SELECT * FROM airport WHERE transit_passengers = (SELECT MAX(transit_passengers) FROM airport),"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64445,What is the number of flights from a specific date range?,SELECT COUNT(*) FROM flight WHERE departure_date BETWEEN '2010-01-01' AND '2015-12-31',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64448,What are the top 5 operate companies by principal activities?,SELECT * FROM operate_company ORDER BY principal_activities DESC LIMIT 5,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64449,What is the airport with the highest number of aircraft movements?,SELECT * FROM airport WHERE aircraft_movements = (SELECT MAX(aircraft_movements) FROM airport),"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64450,What are the top 3 flights by distance?,SELECT * FROM flight ORDER BY distance ASC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64451,What is the average price of flights from each airport?,SELECT AVG(price) FROM flight GROUP BY aid,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64453,What are the top 3 operate companies by type?,SELECT * FROM operate_company ORDER BY type ASC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
64454,What is the average air freight in kg?,SELECT AVG(freight_metric_tonnes * 1000) FROM airport,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
