Unnamed: 0,question,query,schema
67889,What is the name of the city with the highest population in China?,SELECT city FROM city WHERE city LIKE '%China' ORDER BY regional_population DESC LIMIT 1;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67890,What are the top 5 countries by GDP?,"SELECT country_name, SUM(gdp) AS total_gdp FROM country, city WHERE country.capital = city.city GROUP BY country_name ORDER BY total_gdp DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67891,What is the official language of Germany?,SELECT language FROM countrylanguage WHERE countrycode = 'DEU';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67892,What are the top 3 cities with the highest GDP in China?,"SELECT city, SUM(gdp) AS total_gdp FROM city, country WHERE city.city = country.capital AND country.country_name = 'China' GROUP BY city ORDER BY total_gdp DESC LIMIT 3;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67893,What is the capital of Germany?,SELECT capital FROM country WHERE country_name = 'Germany';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67894,What are the countries with the highest percentage of Spanish speakers?,"SELECT countrycode, language, percentage FROM countrylanguage WHERE language = 'Spanish';","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67895,What is the city with the highest GDP in China?,"SELECT city FROM city, country WHERE city.city = country.capital AND country.country_name = 'China' ORDER BY gdp DESC LIMIT 1;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67896,What are the countries with the highest percentage of English speakers?,"SELECT countrycode, language, percentage FROM countrylanguage WHERE language = 'English';","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67897,What is the population of Beijing?,SELECT regional_population FROM city WHERE city LIKE '%Beijing';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67898,What are the top 3 cities with the highest population in China?,SELECT city FROM city WHERE city LIKE '%China' ORDER BY regional_population DESC LIMIT 3;,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67899,What is the GDP of Tokyo?,SELECT gdp FROM city WHERE city LIKE '%Tokyo';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67900,What are the countries with the highest percentage of French speakers?,"SELECT countrycode, language, percentage FROM countrylanguage WHERE language = 'French';","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67901,What is the capital of Japan?,SELECT capital FROM country WHERE country_name = 'Japan';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67902,What is the city with the highest GDP in Japan?,"SELECT city FROM city, country WHERE city.city = country.capital AND country.country_name = 'Japan' ORDER BY gdp DESC LIMIT 1;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67903,What are the countries with the highest percentage of German speakers?,"SELECT countrycode, language, percentage FROM countrylanguage WHERE language = 'German';","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67904,What is the GDP of Beijing?,SELECT gdp FROM city WHERE city LIKE '%Beijing';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67905,What are the top 3 countries by population?,"SELECT country_name, SUM(regional_population) AS total_population FROM city, country WHERE city.city = country.capital GROUP BY country_name ORDER BY total_population DESC LIMIT 3;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67906,What is the official language of Japan?,SELECT language FROM countrylanguage WHERE countrycode = 'JPN';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67907,What is the city with the highest GDP in the USA?,"SELECT city FROM city, country WHERE city.city = country.capital AND country.country_name = 'USA' ORDER BY gdp DESC LIMIT 1;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67908,What are the top 5 cities with the highest GDP in China?,"SELECT city FROM city, country WHERE city.city = country.capital AND country.country_name = 'China' ORDER BY gdp DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67909,What is the capital of France?,SELECT capital FROM country WHERE country_name = 'France';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67910,What are the countries with the highest percentage of Chinese speakers?,"SELECT countrycode, language, percentage FROM countrylanguage WHERE language = 'Chinese';","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67911,What is the GDP of Paris?,SELECT gdp FROM city WHERE city LIKE '%Paris';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67912,What are the top 3 cities with the highest GDP in the USA?,"SELECT city FROM city, country WHERE city.city = country.capital AND country.country_name = 'USA' ORDER BY gdp DESC LIMIT 3;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67913,What are the countries with the highest percentage of Portuguese speakers?,"SELECT countrycode, language, percentage FROM countrylanguage WHERE language = 'Portuguese';","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67915,What are the top 5 countries by population?,"SELECT country_name, SUM(regional_population) AS total_population FROM city, country WHERE city.city = country.capital GROUP BY country_name ORDER BY total_population DESC LIMIT 5;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67916,What is the official language of France?,SELECT language FROM countrylanguage WHERE countrycode = 'FRA';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67917,What are the top 3 cities with the highest GDP in Japan?,"SELECT city FROM city, country WHERE city.city = country.capital AND country.country_name = 'Japan' ORDER BY gdp DESC LIMIT 3;","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67918,What is the GDP of Shanghai?,SELECT gdp FROM city WHERE city LIKE '%Shanghai';,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
67920,How many players are there in total?,SELECT COUNT(*) FROM players,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67921,What is the earliest and latest birth date of a player?,"SELECT MIN(birth_date), MAX(birth_date) FROM players","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67922,How many matches were played in 2020?,SELECT COUNT(*) FROM matches WHERE EXTRACT(YEAR FROM tourney_date) = 2020,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67923,What is the most represented country in tennis?,"SELECT country_code, COUNT(player_id) AS players_count FROM players GROUP BY country_code ORDER BY players_count DESC LIMIT 1","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67924,What is the average ranking points of a player over the last year?,SELECT AVG(ranking_points) FROM rankings WHERE ranking_date >= CURRENT_DATE - INTERVAL '1 year',"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67925,How many matches were played on clay.,SELECT COUNT(*) FROM matches WHERE surface = 'clay',"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67926,What are the top 5 players in ranking points from the last year?,"SELECT * FROM (SELECT player_id, ranking_points, DENSE_RANK() OVER (ORDER BY ranking_points DESC) AS ranking FROM rankings WHERE ranking_date >= CURRENT_DATE - INTERVAL '1 year') AS subq WHERE ranking <= 5","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67927,How many players were born in the 90's,SELECT COUNT(*) FROM players WHERE EXTRACT(YEAR FROM birth_date) >= 1990,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67928,How many players are still active?,SELECT COUNT(*) FROM players WHERE birth_date <= CURRENT_DATE,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67929,How many active players have won at least one match ,SELECT COUNT(*) FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE p.birth_date <= CURRENT_DATE,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67930,What are the top 5 countries by the number of players?,"SELECT country_code, COUNT(*) FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67931,How many players born in the 80's are active,SELECT COUNT(*) FROM players WHERE EXTRACT(YEAR FROM birth_date) >= 1980 AND birth_date <= CURRENT_DATE,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67932,How many players are there from different countries,SELECT COUNT(*) FROM players GROUP BY country_code,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67933,How many players are active in a particular year,SELECT COUNT(*) FROM players WHERE birth_date <= CURRENT_DATE - INTERVAL '1 year',"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67934,What are the top 5 players by ranking points,"SELECT * FROM (SELECT player_id, ranking_points, DENSE_RANK() OVER (ORDER BY ranking_points DESC) AS ranking FROM rankings) AS subq WHERE ranking <= 5","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
67936,List the countries where authors affiliated with the 'Computer Science' domain reside?,SELECT DISTINCT continent FROM organization WHERE oid IN (SELECT aid FROM domain_author WHERE did IN (SELECT did FROM domain WHERE name='Computer Science'));,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
67937,What is the name of the conference where the most publications were published?,SELECT name FROM conference WHERE cid IN (SELECT citing FROM cite GROUP BY citing ORDER BY COUNT(cited) DESC LIMIT 1);,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
67938,What are the top 3 conferences in the 'Computer Science' domain with the most publications?,SELECT name FROM conference WHERE cid IN (SELECT citing FROM cite GROUP BY citing ORDER BY COUNT(cited) DESC LIMIT 3);,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
67939,What are the top 5 most popular organizations in the 'Computer Science' domain?,SELECT name FROM organization WHERE oid IN (SELECT aid FROM domain_author WHERE did IN (SELECT did FROM domain WHERE name='Computer Science')) GROUP BY name ORDER BY COUNT(name) DESC LIMIT 5;,"
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
67940,What are the names of airports that have more than 10000000 passengers?,SELECT a.airport_name FROM airport a WHERE a.total_passengers > '10000000',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
67941,What are the names of airlines that use aircraft with a maximum disk area greater than 2500 square meters?,SELECT a.aircraft FROM aircraft a WHERE a.total_disk_area > '2500',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
67942,What is the number of pilots with age greater than 40?,SELECT count(p.pilot_id) FROM pilot p WHERE p.age > '40',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
67943,What are the names of flights with more than 500 air movements?,SELECT a.airport_name FROM airport a JOIN airport_aircraft aa ON a.airport_id = aa.airport_id WHERE aa.aircraft_id IN (SELECT aircraft_id FROM aircraft WHERE total_disk_area > '2500'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
67944,What are the names of the battles where the Bulgarian commander was involved?,SELECT name FROM battle WHERE bulgarian_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67945,What is the total injured count in battles?,SELECT SUM(injured) AS total_injured FROM death,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67946,List the battles where the Latin commander won?,SELECT name FROM battle WHERE result = 'win' AND latin_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67947,What is the disposition of the ship that was lost in the most battles?,SELECT disposition_of_ship FROM ship WHERE lost_in_battle = (SELECT MAX(lost_in_battle) FROM ship),"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67948,What is the total number of wounded and killed soldiers in all battles?,SELECT SUM(killed) + SUM(injured) AS total_wounded_killed FROM death,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67949,What is the note associated with the death caused by ship 123?,SELECT note FROM death WHERE caused_by_ship_id = 123,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67950,Get the name of the battle where the Latin commander was involved and the result was a draw,SELECT name FROM battle WHERE latin_commander IS NOT NULL AND result = 'draw',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67951,What is the most common disposition of ship's that were lost in battles?,"SELECT disposition_of_ship, COUNT(*) AS freq FROM ship JOIN battle USING (id) WHERE lost_in_battle IS NOT NULL GROUP BY disposition_of_ship ORDER BY freq DESC","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67952,Get the total number of battles where the Bulgarian commander was involved,SELECT COUNT(*) AS total_battles FROM battle WHERE bulgarian_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67953,What is the total number of ships that were lost in battles?,SELECT COUNT(*) AS total_lost_ships FROM ship JOIN battle USING (id) WHERE lost_in_battle IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67954,What is the most frequent death injury type in battles?,"SELECT note, COUNT(*) AS freq FROM death GROUP BY note ORDER BY freq DESC","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67955,Get the total number of deaths in battles where the Latin commander was involved,SELECT SUM(killed) + SUM(injured) AS total_deaths FROM death JOIN battle USING (id) WHERE latin_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67956,What is the average number of wounded soldiers in battles?,SELECT AVG(injured) AS average_injured FROM death,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67957,Get the name of the ship that was lost in the fewest battles,SELECT name FROM ship WHERE lost_in_battle = (SELECT MIN(lost_in_battle) FROM ship),"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67959,Get the total number of battles where the commander was killed or injured,SELECT COUNT(*) AS total_battles FROM death JOIN battle USING (id),"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67960,What is the most common location of ships that were lost in battles?,"SELECT location, COUNT(*) AS freq FROM ship JOIN battle USING (id) WHERE lost_in_battle IS NOT NULL GROUP BY location ORDER BY freq DESC","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67961,Get the total number of battles where the Bulgarian commander was killed or injured,SELECT COUNT(*) AS total_battles FROM death JOIN battle USING (id) WHERE bulgarian_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67962,Get the name of the ship that was lost in the most battles,SELECT name FROM ship WHERE lost_in_battle = (SELECT MAX(lost_in_battle) FROM ship),"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67963,What is the most common ship type of ships that were lost in battles?,"SELECT ship_type, COUNT(*) AS freq FROM ship JOIN battle USING (id) WHERE lost_in_battle IS NOT NULL GROUP BY ship_type ORDER BY freq DESC","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67964,Get the total number of battles where the Latin commander was killed or injured,SELECT COUNT(*) AS total_battles FROM death JOIN battle USING (id) WHERE latin_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
67965,What is the name of the station with the highest dock count?,SELECT name FROM station ORDER BY dock_count DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67966,What is the station with the lowest dock count?,SELECT name FROM station ORDER BY dock_count ASC OFFSET 0 LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67967,What is the average temperature in April?,SELECT AVG(mean_temperature_f) FROM weather WHERE date LIKE '%04-%%';,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67968,What is the station with the most available bikes?,SELECT name FROM station s JOIN status ON s.id = station_id WHERE bikes_available > 10 ORDER BY bikes_available DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67969,What is the duration of the longest trip?,SELECT MAX(duration) FROM trip;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67970,What is the average duration of trips in the morning?,SELECT AVG(duration) FROM trip WHERE start_date LIKE '%0000%%';,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67971,Which station has the most installations?,"SELECT name, COUNT(*) AS installations FROM station GROUP BY name ORDER BY installations DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67972,What is the average precipitation in May?,SELECT AVG(precipitation_inches) FROM weather WHERE date LIKE '%05-%%';,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67973,What is the most common subscription type?,"SELECT subscription_type, COUNT(*) AS frequency FROM trip GROUP BY subscription_type ORDER BY frequency DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67974,Which station has the fewest available docks?,SELECT name FROM station s JOIN status ON s.id = station_id WHERE docks_available < 5 ORDER BY docks_available ASC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67975,What is the average wind speed?,SELECT AVG(mean_wind_speed_mph) FROM weather;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67976,What is the station with the most bike-related trips?,SELECT name FROM station s JOIN trip t ON s.id = t.start_station_id GROUP BY name HAVING COUNT(*) > 100 ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67977,What is the most humid day of the year?,SELECT * FROM weather ORDER BY max_humidity DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67978,What is the average trip duration by subscription type?,"SELECT avg, subscription_type FROM (SELECT AVG(duration) AS avg, subscription_type FROM trip GROUP BY subscription_type) AS sub_cons;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67979,What is the station with the highest installation rate?,SELECT name FROM station s JOIN status ON s.id = station_id WHERE installation_date IS NOT NULL ORDER BY installation_date DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67980,What is the most common start station?,"SELECT start_station_name, COUNT(*) AS frequency FROM trip GROUP BY start_station_name ORDER BY frequency DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67981,What is the average temperature deviation from the mean?,SELECT AVG(mean_temperature_f - mean_temperature_f::float) FROM weather;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67982,What is the most common destination?,"SELECT end_station_name, COUNT(*) AS frequency FROM trip GROUP BY end_station_name ORDER BY frequency DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67983,What is the average precipitation in June?,SELECT AVG(precipitation_inches) FROM weather WHERE date LIKE '%06-%%';,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67984,Which station has the highest available bike count?,SELECT name FROM station s JOIN status ON s.id = station_id WHERE bikes_available > 50 ORDER BY bikes_available DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67985,What is the average duration of trips in the evening?,SELECT AVG(duration) FROM trip WHERE start_date LIKE '%1900%%';,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67986,What is the station with the highest installation rate?,SELECT name FROM station s JOIN status ON s.id = station_id WHERE installation_date IS NOT NULL GROUP BY name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67987,What is the most common subscription type among long trips?,"SELECT subscription_type, COUNT(*) AS frequency FROM trip WHERE duration > 60 GROUP BY subscription_type ORDER BY frequency DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67988,What is the most common start station among subscribers?,"SELECT start_station_name, COUNT(*) AS frequency FROM trip WHERE subscription_type IS NOT NULL GROUP BY start_station_name ORDER BY frequency DESC LIMIT 1;","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67990,What is the average daily precipitation?,SELECT AVG(precipitation_inches) FROM weather;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67991,Which station has the most available docks in the winter?,SELECT name FROM station s JOIN status ON s.id = station_id WHERE time LIKE '%03:00%00%' AND docks_available > 10 ORDER BY docks_available DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67992,What is the most humid day of the year in June?,SELECT * FROM weather WHERE date LIKE '%06-%%' ORDER BY max_humidity DESC LIMIT 1;,"
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE status (
	station_id INTEGER, 
	bikes_available INTEGER, 
	docks_available INTEGER, 
	time TEXT
)


CREATE TABLE trip (
	id INTEGER, 
	duration INTEGER, 
	start_date TEXT, 
	start_station_name TEXT, 
	start_station_id INTEGER, 
	end_date TEXT, 
	end_station_name TEXT, 
	end_station_id INTEGER, 
	bike_id INTEGER, 
	subscription_type TEXT, 
	zip_code INTEGER
)


CREATE TABLE weather (
	date TEXT, 
	max_temperature_f INTEGER, 
	mean_temperature_f INTEGER, 
	min_temperature_f INTEGER, 
	max_dew_point_f INTEGER, 
	mean_dew_point_f INTEGER, 
	min_dew_point_f INTEGER, 
	max_humidity INTEGER, 
	mean_humidity INTEGER, 
	min_humidity INTEGER, 
	max_sea_level_pressure_inches INTEGER, 
	mean_sea_level_pressure_inches INTEGER, 
	min_sea_level_pressure_inches INTEGER, 
	max_visibility_miles INTEGER, 
	mean_visibility_miles INTEGER, 
	min_visibility_miles INTEGER, 
	max_wind_speed_mph INTEGER, 
	mean_wind_speed_mph INTEGER, 
	max_gust_speed_mph INTEGER, 
	precipitation_inches INTEGER, 
	cloud_cover INTEGER, 
	events TEXT, 
	wind_dir_degrees INTEGER, 
	zip_code INTEGER
)"
67994,List the names of people with a snatch lift above 150kg sorted by height descending,"SELECT name, height FROM people, body_builder WHERE people.people_id = body_builder.people_id AND snatch > 150 ORDER BY height DESC","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67995,Who are the top 3 people with the highest total lift?,"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id ORDER BY total DESC LIMIT 3","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67996,List the people with a snap lift above 120kg and weight above 90kg,"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND snatch > 120 AND weight > 90","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67997,Who has the highest clean jerk lift?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id ORDER BY clean_jerk DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67998,List all body builders with a snatch lift above 100kg and total lift above 200kg,SELECT * FROM body_builder WHERE snatch > 100 AND total > 200,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
67999,List the people with a total lift above 180kg and born in a country that starts with the letter 'G',"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND total > 180 AND UPPER(birth_place) LIKE 'G%'","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68000,Who is the body builder with the highest snatch lift among people above 180cm?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id AND height > 180 ORDER BY snatch DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68001,List the people with a total lift above 150kg and weight above 80kg,"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND total > 150 AND weight > 80","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68002,Who has the highest clean jerk lift among people above 160kg?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id AND weight > 160 ORDER BY clean_jerk DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68003,List the body builders with a snatch lift above 140kg and total lift above 200kg,SELECT * FROM body_builder WHERE snatch > 140 AND total > 200,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68004,Who is the body builder with the highest total lift among people between 140cm and 160cm?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id AND height >= 140 AND height <= 160 ORDER BY total DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68005,List the people with a total lift above 220kg and born in a city that starts with the letter 'L',"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND total > 220 AND UPPER(birth_place) LIKE 'L%'","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68006,Who is the body builder with the highest clean jerk lift among people under 160kg?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id AND weight < 160 ORDER BY clean_jerk DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68007,List the people with a total lift above 180kg and weight above 90kg,"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND total > 180 AND weight > 90","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68008,Who has the highest clean jerk lift among people above 190cm?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id AND height > 190 ORDER BY clean_jerk DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68009,List the body builders with a snatch lift above 160kg and total lift above 240kg,SELECT * FROM body_builder WHERE snatch > 160 AND total > 240,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68010,Who is the body builder with the highest total lift among people above 170kg?,"SELECT name FROM people, body_builder WHERE people.people_id = body_builder.people_id AND weight > 170 ORDER BY total DESC LIMIT 1","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68011,List the people with a total lift above 200kg and born in a city that starts with the letter 'S',"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND total > 200 AND UPPER(birth_place) LIKE 'S%'","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68012,List the people with a total lift above 220kg and weight above 100kg,"SELECT * FROM people, body_builder WHERE people.people_id = body_builder.people_id AND total > 220 AND weight > 100","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68013,What is the average height of people who support candidate A?,SELECT AVG(p.height) FROM people p JOIN candidate c ON p.people_id = c.people_id WHERE c.poll_source = 'candidate A' AND c.support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68014,What is the name of the people with the highest birth place?,SELECT p.name FROM people p ORDER BY p.birth_place DESC LIMIT 1,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68015,What is the average weight of people who are unsure about candidate B?,SELECT AVG(p.weight) FROM people p JOIN candidate c ON p.people_id = c.people_id WHERE c.poll_source = 'candidate B' AND (c.unsure_rate > 0.5 OR c.consider_rate > 0.5),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68016,What is the date when candidate C's support rate was highest?,SELECT MAX(c.date) FROM candidate c WHERE c.poll_source = 'candidate C' AND c.support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68017,What is the percentage of people who are unsure about candidate D?,SELECT SUM(c.unsure_rate) / COUNT(*) FROM candidate c WHERE c.poll_source = 'candidate D',"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68018,What is the name of the people with the lowest weight?,SELECT p.name FROM people p ORDER BY p.weight DESC LIMIT 1,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68019,What is the percentage of people who oppose candidate F?,SELECT SUM(c.oppose_rate) / COUNT(*) FROM candidate c WHERE c.poll_source = 'candidate F',"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68020,What is the name of the people with the highest birth height?,SELECT p.name FROM people p ORDER BY p.height DESC LIMIT 1,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68021,What is the average support rate of people who consider candidate I?,SELECT AVG(c.support_rate) FROM candidate c JOIN people p ON c.people_id = p.people_id WHERE c.poll_source = 'candidate I' AND (c.consider_rate > 0.5 OR c.unsure_rate > 0.5),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68022,What is the date when candidate J's oppose rate was highest?,SELECT MAX(c.date) FROM candidate c WHERE c.poll_source = 'candidate J' AND c.oppose_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68024,What is the average height of people who oppose candidate L?,SELECT AVG(p.height) FROM people p JOIN candidate c ON p.people_id = c.people_id WHERE c.poll_source = 'candidate L' AND c.oppose_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68025,What is the date when candidate M's support rate was highest?,SELECT MAX(c.date) FROM candidate c WHERE c.poll_source = 'candidate M' AND c.support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68026,What is the name of the people with the highest weight?,SELECT p.name FROM people p ORDER BY p.weight ASC LIMIT 1,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68027,What is the percentage of people who consider candidate O?,SELECT SUM(c.consider_rate) / COUNT(*) FROM candidate c WHERE c.poll_source = 'candidate O',"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68028,What is the average weight of people who support candidate P?,SELECT AVG(p.weight) FROM people p JOIN candidate c ON p.people_id = c.people_id WHERE c.poll_source = 'candidate P' AND c.support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68029,What is the name of the people with the lowest height?,SELECT p.name FROM people p ORDER BY p.height ASC LIMIT 1,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68030,What is the average percentage of people who support candidate R?,SELECT AVG(c.support_rate) FROM candidate c WHERE c.poll_source = 'candidate R' AND c.support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68031,What is the average height of people who support candidate V?,SELECT AVG(p.height) FROM people p JOIN candidate c ON p.people_id = c.people_id WHERE c.poll_source = 'candidate V' AND c.support_rate > 0.5,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68033,What is the average support rate of people who consider candidate X?,SELECT AVG(c.support_rate) FROM candidate c JOIN people p ON c.people_id = p.people_id WHERE c.poll_source = 'candidate X' AND (c.consider_rate > 0.5 OR c.unsure_rate > 0.5),"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68034,What is the name of the car maker who produced the most cars with good fuel economy?,SELECT m.maker FROM car_makers c JOIN model_list m ON c.id = m.maker JOIN cars_data cd ON m.modelid = cd.id GROUP BY m.maker ORDER BY COUNT(cd.mpg) DESC LIMIT 1;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68035,Which car model has the highest horsepower?,SELECT * FROM cars_data WHERE horsepower = (SELECT MAX(horsepower) FROM cars_data);,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68036,What is the average weight of all cars from a specific country?,SELECT AVG(c.weight) FROM cars_data c JOIN model_list m ON c.id = m.modelid JOIN car_makers cm ON m.maker = cm.id WHERE cm.country = 'Japan';,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68037,Which cars have a specific number of cylinders?,SELECT * FROM cars_data WHERE cylinders = 8;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68038,What are the top 5 countries with the most car models?,"SELECT c.countryname, COUNT(*) AS num_models FROM countries c JOIN model_list m ON c.countryid = m.maker GROUP BY c.countryname ORDER BY num_models DESC LIMIT 5;","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68039,What are the top 5 car models by horsepower?,SELECT * FROM cars_data ORDER BY horsepower DESC LIMIT 5;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68040,What are the countries with the most car models?,"SELECT countryname, COUNT(*) AS num_models FROM countries c JOIN model_list m ON c.countryid = m.maker GROUP BY countryname ORDER BY num_models DESC;","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68041,Which car model is the heaviest?,SELECT * FROM cars_data WHERE weight = (SELECT MAX(weight) FROM cars_data);,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68042,What is the average weight of all cars from a specific maker?,SELECT AVG(weight) FROM cars_data WHERE id IN (SELECT modelid FROM model_list WHERE maker = 1);,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68043,What are the top 5 car makers with the most car models?,"SELECT maker, COUNT(*) AS num_models FROM model_list GROUP BY maker ORDER BY num_models DESC LIMIT 5;","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68044,What are the top 5 car models with the best acceleration?,SELECT * FROM cars_data ORDER BY accelerate DESC LIMIT 5;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68045,What is the average years for all cars from a specific country?,SELECT AVG(year) FROM cars_data WHERE id IN (SELECT modelid FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE country = 'Japan'));,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68047,What are the countries with the most car models with a specific engine size?,"SELECT countryname, COUNT(*) AS num_models FROM countries c JOIN model_list m ON c.countryid = m.maker GROUP BY countryname;","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68050,What are the top 5 car models by mpg?,SELECT * FROM cars_data ORDER BY mpg DESC LIMIT 5;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68053,What is the average weight of all cars from a specific country and car maker?,SELECT AVG(weight) FROM cars_data WHERE id IN (SELECT modelid FROM model_list WHERE maker IN (SELECT id FROM car_makers WHERE country = 'Japan'));,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
68054,What is the total regional population of cities with gdp more than 10000000?,SELECT SUM(regional_population) FROM city WHERE gdp > 10000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68056,What is the total number of hosting cities in 2000?,SELECT COUNT(*) FROM hosting_city WHERE year = 2000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68057,What is the average temperature in August for cities with population more than 1000000?,SELECT AVG(aug) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE regional_population > 1000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68058,What is the total number of matches held in China?,SELECT COUNT(*) FROM match WHERE location ILIKE '%China%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68059,What is the highest temperature in January for cities in China?,SELECT MAX(jan) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%China%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68061,What is the total number of matches in 2010 and 2015?,"SELECT COUNT(*) FROM hosting_city WHERE year IN (2010, 2015)","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68062,What is the average temperature in July for cities with population more than 5000000?,SELECT AVG(jul) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE regional_population > 5000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68063,Which city has the highest gdp in Asia?,SELECT * FROM city WHERE hanyu_pinyin ILIKE '%Asia%' ORDER BY gdp DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68064,What is the total number of cities with gdp less than 1000000?,SELECT COUNT(*) FROM city WHERE gdp < 1000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68065,What is the average temperature in November for cities in North America?,SELECT AVG(nov) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%North America%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68066,What is the highest temperature in December for cities in Europe?,SELECT MAX(dec) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%Europe%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68067,What is the total number of cities hosting matches in 2005?,SELECT COUNT(*) FROM hosting_city WHERE year = 2005,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68068,Which city has the highest regional population in Asia?,SELECT * FROM city WHERE hanyu_pinyin ILIKE '%Asia%' ORDER BY regional_population DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68069,What is the average temperature in June for cities with population more than 2000000?,SELECT AVG(jun) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE regional_population > 2000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68070,What is the total number of matches in 1995?,SELECT COUNT(*) FROM hosting_city WHERE year = 1995,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68071,What is the average temperature in September for cities with population more than 3000000?,SELECT AVG(sep) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE regional_population > 3000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68072,Which city has the highest gdp in South America?,SELECT * FROM city WHERE hanyu_pinyin ILIKE '%South America%' ORDER BY gdp DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68073,What is the total number of cities with population less than 1000000?,SELECT COUNT(*) FROM city WHERE regional_population < 1000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68074,What is the average temperature in October for cities in Africa?,SELECT AVG(oct) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%Africa%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68075,What is the highest temperature in November for cities in Oceania?,SELECT MAX(nov) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%Oceania%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68076,What is the total number of cities hosting matches in 2015?,SELECT COUNT(*) FROM hosting_city WHERE year = 2015,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68077,Which city has the highest gdp in Oceania?,SELECT * FROM city WHERE hanyu_pinyin ILIKE '%Oceania%' ORDER BY gdp DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68078,What is the average temperature in August for cities with population more than 4000000?,SELECT AVG(aug) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE regional_population > 4000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68080,What is the highest temperature in July for cities in South Asia?,SELECT MAX(jul) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%South Asia%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68081,What is the total number of cities hosting matches in 2010?,SELECT COUNT(*) FROM hosting_city WHERE year = 2010,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68082,Which city has the highest gdp in North America?,SELECT * FROM city WHERE hanyu_pinyin ILIKE '%North America%' ORDER BY gdp DESC LIMIT 1,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68083,What is the average temperature in December for cities with population more than 2000000?,SELECT AVG(dec) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE regional_population > 2000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68084,What is the total number of cities with population less than 2000000?,SELECT COUNT(*) FROM city WHERE regional_population < 2000000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68085,What is the highest temperature in June for cities in Europe?,SELECT MAX(jun) FROM temperature JOIN city ON temperature.city_id = city.city_id WHERE city.hanzi ILIKE '%Europe%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
68087,What is the name of the climber with the highest points in the Himalayas?,SELECT name FROM climber WHERE country = 'Nepal' ORDER BY points DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68088,Which mountain in the Karakoram range is the highest?,SELECT name FROM mountain WHERE range = 'Karakoram' ORDER BY height DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68089,Who is the oldest climber in the climber table?,SELECT name FROM climber ORDER BY time ASC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68090,What is the name of the youngest climber in the Andes?,SELECT name FROM climber WHERE country = 'Argentina' ORDER BY time ASC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68091,What is the name of the highest mountain in the Himalayas?,SELECT name FROM mountain WHERE country = 'Nepal' ORDER BY height DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68093,Who are the top 3 climbers in the Andes?,SELECT name FROM climber WHERE country = 'Argentina' ORDER BY points DESC LIMIT 3;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68095,What are the names of the climbers in the Karakoram range?,SELECT name FROM climber WHERE mountain_id IN (SELECT mountain_id FROM mountain WHERE range = 'Karakoram');,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68096,Who are the top 3 points earners in the Himalayas?,SELECT name FROM climber WHERE country = 'Nepal' ORDER BY points DESC LIMIT 3;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68097,What is the name of the youngest climber in the Karakoram range?,SELECT name FROM climber WHERE country = 'Pakistan' ORDER BY time ASC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68100,How many points did the top 3 climbers in the Karakoram range earn?,SELECT points FROM climber WHERE country = 'Pakistan' ORDER BY points DESC LIMIT 3;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68102,Who are the top 3 climbers in the climber table?,SELECT name FROM climber ORDER BY points DESC LIMIT 3;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68104,How many mountains are in the Himalayas?,SELECT COUNT(*) FROM mountain WHERE country = 'Nepal';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68105,Who is the oldest climber in the Himalayas?,SELECT name FROM climber WHERE country = 'Nepal' ORDER BY time ASC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68106,What are the names of the climbers in the Himalayas?,SELECT name FROM climber WHERE country = 'Nepal';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68107,Who are the top 3 climbers in the Karakoram range?,SELECT name FROM climber WHERE country = 'Pakistan' ORDER BY points DESC LIMIT 3;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68108,How many climbers are from Japan?,SELECT COUNT(*) FROM climber WHERE country = 'Japan';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68112,What is the name of the mountain with the highest height in the Andes?,SELECT name FROM mountain WHERE country = 'Argentina' ORDER BY height DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
68115,What is the average age of members who have a membership card?,SELECT AVG(age) FROM member WHERE membership_card IS NOT NULL,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68116,Find the shop with the highest score and display its address and score.,"SELECT address, score FROM shop WHERE score = (SELECT MAX(score) FROM shop)","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68117,Which member spent the most in a happy hour?,SELECT * FROM happy_hour_member ORDER BY total_amount DESC LIMIT 1,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68118,Which shop has been open for the longest?,"SELECT shop_id, open_year FROM shop ORDER BY TO_DATE(open_year, 'YYYY') DESC LIMIT 1","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68119,What are the top 5 happy hours with the highest number of staff?,SELECT * FROM happy_hour ORDER BY num_of_shaff_in_charge DESC LIMIT 5,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68123,Which happy hours had the highest number of members?,SELECT * FROM happy_hour_member ORDER BY total_amount DESC LIMIT 5,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68124,How many staff does the shop with the highest score have?,SELECT num_of_staff FROM shop WHERE score = (SELECT MAX(score) FROM shop),"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68126,How many shops have been open for more than 5 years?,"SELECT COUNT(*) FROM shop WHERE TO_DATE(open_year, 'YYYY') > TO_DATE('2018-01-01', 'YYYY-MM-DD')","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68129,How many happy hours had at least 5 members?,SELECT COUNT(*) FROM happy_hour_member WHERE total_amount > 0,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68130,What is the average age of members who live in a specific address?,SELECT AVG(age) FROM member WHERE address LIKE '%some address%',"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68133,What is the total amount spent by each happy hour's members?,"SELECT hh_id, SUM(total_amount) AS total_amount_spent FROM happy_hour_member GROUP BY hh_id","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68135,List the courses offered by a specific instructor in a given semester.,SELECT course_id FROM teaches WHERE id = 'instructor_id' AND semester = 'semester';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68136,What is the total capacity of classrooms in a specific building?,SELECT SUM(capacity) FROM classroom WHERE building = 'building';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68137,What are the courses that a specific student is taking in a given semester?,SELECT course_id FROM takes WHERE id = 'student_id' AND semester = 'semester';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68138,What is the average credit hours of all courses in a specific department?,SELECT AVG(crs_credit) FROM course WHERE dept_code = 'department_code';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68139,What is the earliest time slot on a Monday?,SELECT * FROM time_slot WHERE day = 'Monday' AND start_hr = (SELECT MIN(start_hr) FROM time_slot WHERE day = 'Monday');,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68140,List all courses that have a specific course as a prerequisite.,SELECT course_id FROM prereq WHERE course_id = 'preq_course_id';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68141,List all instructors in a specific department.,SELECT * FROM instructor WHERE dept_name = 'department_name';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68142,What is the total enrollment in a specific course?,SELECT COUNT(*) FROM takes WHERE course_id = 'course_id';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68144,What is the total number of instructors in a specific department?,SELECT COUNT(*) FROM instructor WHERE dept_name = 'department_name';,"
CREATE TABLE advisor (
	s_id TEXT, 
	i_id TEXT
)


CREATE TABLE classroom (
	building TEXT, 
	room_number TEXT, 
	capacity INTEGER
)


CREATE TABLE course (
	crs_code TEXT, 
	dept_code TEXT, 
	crs_description TEXT, 
	crs_credit DOUBLE PRECISION
)


CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE instructor (
	id TEXT, 
	name TEXT, 
	dept_name TEXT, 
	salary INTEGER
)


CREATE TABLE prereq (
	course_id TEXT, 
	prereq_id TEXT
)


CREATE TABLE section (
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	building TEXT, 
	room_number TEXT, 
	time_slot_id TEXT
)


CREATE TABLE student (
	stuid INTEGER, 
	lname TEXT, 
	fname TEXT, 
	age INTEGER, 
	sex TEXT, 
	major INTEGER, 
	advisor INTEGER, 
	city_code TEXT
)


CREATE TABLE takes (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER, 
	grade TEXT
)


CREATE TABLE teaches (
	id TEXT, 
	course_id TEXT, 
	sec_id TEXT, 
	semester TEXT, 
	year INTEGER
)


CREATE TABLE time_slot (
	time_slot_id TEXT, 
	day TEXT, 
	start_hr INTEGER, 
	start_min INTEGER, 
	end_hr INTEGER, 
	end_min INTEGER
)"
68156,What is the name of the employee who reports to the manager with the code 'SALES'?,"SELECT e.firstname, e.lastname FROM employee AS e, department AS d WHERE e.reportsto = d.emp_num AND d.dept_code = 'SALES'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68157,What are the names of employees who have been working on the same project as the employee with the employee ID '12345'?,"SELECT e1.firstname, e1.lastname FROM employee AS e1 WHERE e1.employeeid IN (SELECT essn FROM works_on WHERE pno IN (SELECT pnumber FROM project WHERE dnum IN (SELECT dnumber FROM dept_locations WHERE dlocation IN (SELECT dlocation FROM department WHERE emp_num IN (SELECT employeeid FROM employee WHERE employeeid = '12345')))))","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68158,What is the total number of employees in the 'Research' department?,"SELECT COUNT(*) FROM employee AS e, department AS d WHERE e.reportsto = d.emp_num AND d.dept_code = 'RESEARCH'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68159,What is the name and title of the manager who has the most employees working under them?,"SELECT e.firstname, e.lastname, e.title, COUNT(*) AS num_employees FROM employee AS e, department AS d WHERE e.reportsto = d.emp_num GROUP BY e.employeeid, e.firstname, e.lastname, e.title ORDER BY num_employees DESC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68160,What is the total number of projects that an employee with the ID '12345' has worked on?,SELECT COUNT(*) FROM works_on WHERE essn = '12345',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68161,What is the name and email of the employee who has been working the longest at the company?,"SELECT e.firstname, e.email, e.hiredate FROM employee AS e ORDER BY e.hiredate ASC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68162,What is the number of employees who report to the manager with the name 'John Smith'?,"SELECT COUNT(*) FROM employee AS e, department AS d WHERE e.reportsto = d.emp_num AND d.school_code = 'x'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68163,What is the total number of dependents of employees working in the 'Marketing' department?,"SELECT COUNT(*) FROM dependent WHERE essn IN (SELECT employeeid FROM employee, department WHERE employee.reportsto = department.emp_num AND department.dept_code = 'MARKETING')","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68164,What is the total number of employees who have worked on a project at the location 'New York'?,"SELECT COUNT(*) FROM employee AS e, works_on AS w, project AS p WHERE e.employeeid = w.essn AND w.pno = p.pnumber AND p.plocation = 'New York'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68165,What is the name and phone number of the employee who has been working the shortest period of time?,"SELECT e.firstname, e.phone, e.hiredate FROM employee AS e ORDER BY e.hiredate DESC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68166,What is the total number of employees in the 'Sales' department?,"SELECT COUNT(*) FROM employee AS e, department AS d WHERE e.reportsto = d.emp_num AND d.dept_code = 'SALES'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68167,What is the total number of projects that have been completed?,SELECT COUNT(*) FROM project WHERE pname LIKE '%Completed%',"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68168,What is the name and title of the employee who has the lowest salary?,"SELECT e.firstname, e.title, e.email FROM employee AS e ORDER BY e.lastname ASC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68169,What is the total number of employees who have worked on at least two projects?,"SELECT COUNT(*) FROM employee AS e, works_on AS w GROUP BY e.employeeid HAVING COUNT(w.pno) >= 2","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68170,What is the name and email of the employee who reports to the manager with the ID '12345'?,"SELECT e.firstname, e.email FROM employee AS e WHERE e.reportsto = '12345'","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68172,What is the total number of employees who have worked on at least three projects?,"SELECT COUNT(*) FROM employee AS e, works_on AS w GROUP BY e.employeeid HAVING COUNT(w.pno) >= 3","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68174,What is the name and email of the employee who has been working for the longest period?,"SELECT e.firstname, e.email, e.hiredate FROM employee AS e ORDER BY e.hiredate DESC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68175,What is the total number of dependents of employees working in the 'Sales' department?,"SELECT COUNT(*) FROM dependent WHERE essn IN (SELECT employeeid FROM employee, department WHERE employee.reportsto = department.emp_num AND department.dept_code = 'SALES')","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68177,What is the name and email of the employee who has the lowest salary?,"SELECT e.firstname, e.email FROM employee AS e ORDER BY e.lastname ASC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE dependent (
	essn INTEGER, 
	dependent_name TEXT, 
	sex TEXT, 
	bdate TEXT, 
	relationship TEXT
)


CREATE TABLE dept_locations (
	dnumber INTEGER, 
	dlocation TEXT
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE project (
	pname TEXT, 
	pnumber INTEGER, 
	plocation TEXT, 
	dnum INTEGER
)


CREATE TABLE works_on (
	essn INTEGER, 
	pno INTEGER, 
	hours REAL
)"
68181,What is the total number of concerts held in 2015?,SELECT COUNT(c.concert_id) FROM concert c WHERE c.year = '2015',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68182,What is the name of the stadium with the lowest capacity?,SELECT st.name FROM stadium st ORDER BY st.capacity LIMIT 1,"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68183,What is the total number of concerts held in 2012?,SELECT COUNT(c.concert_id) FROM concert c WHERE c.year = '2012',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68184,What is the total number of concerts held in 2017?,SELECT COUNT(c.concert_id) FROM concert c WHERE c.year = '2017',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68185,What is the total number of concerts held in 2011?,SELECT COUNT(c.concert_id) FROM concert c WHERE c.year = '2011',"
CREATE TABLE concert (
	concert_id INTEGER, 
	concert_name TEXT, 
	theme TEXT, 
	stadium_id TEXT, 
	year TEXT
)


CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE singer_in_concert (
	concert_id INTEGER, 
	singer_id TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68186,What is the name of the county with the highest crime rate and highest police officers per resident ratio?,SELECT cp.name FROM county_public_safety cp WHERE cp.crime_rate = (SELECT MAX(crime_rate) FROM county_public_safety) AND cp.residents_per_officer = (SELECT MAX(residents_per_officer) FROM county_public_safety),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE county_public_safety (
	county_id INTEGER, 
	name TEXT, 
	population INTEGER, 
	police_officers INTEGER, 
	residents_per_officer INTEGER, 
	case_burden INTEGER, 
	crime_rate REAL, 
	police_force TEXT, 
	location TEXT
)"
68187,"What are the top 3 best-selling books in the comedy genre, ordered by year released?","SELECT book_title, year FROM book_club WHERE category = 'Comedy' ORDER BY year LIMIT 3;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68189,"What are the top 5 bestselling books in the romance genre, ordered by year released?","SELECT book_title, year FROM book_club WHERE category = 'Romance' ORDER BY year LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68190,What is the average budget of movies released in the year 2015?,SELECT AVG(budget_million) FROM movie WHERE year = 2015;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68191,Which book author has written the most books published in the last 10 years?,"SELECT author_or_editor, COUNT(*) FROM book_club WHERE year >= 2011 GROUP BY author_or_editor ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68192,What is the gross worldwide income of the top 3 highest-grossing movies?,"SELECT title, gross_worldwide FROM movie ORDER BY gross_worldwide DESC LIMIT 3;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68193,List all movies with a budget under $10 million and a gross income over $100 million?,SELECT * FROM movie WHERE budget_million < 10 AND gross_worldwide > 100000000;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68194,What is the average gross income of movies released in the year 2000?,SELECT AVG(gross_worldwide) FROM movie WHERE year = 2000;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68195,"What are the top 5 bestselling books in the sci-fi genre, ordered by year released?","SELECT book_title, year FROM book_club WHERE category = 'Science Fiction' ORDER BY year LIMIT 5;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68196,What is the total budget spent on all movies released in the year 2015?,SELECT SUM(budget_million) FROM movie WHERE year = 2015;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68197,What is the average budget of movies released in the year 2012?,SELECT AVG(budget_million) FROM movie WHERE year = 2012;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68198,List all movies with a budget under $5 million and a gross income over $100 million?,SELECT * FROM movie WHERE budget_million < 5 AND gross_worldwide > 100000000;,"
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68199,What is the gross worldwide income of the top 2 highest-grossing movies?,"SELECT title, gross_worldwide FROM movie ORDER BY gross_worldwide DESC LIMIT 2;","
CREATE TABLE book_club (
	book_club_id INTEGER, 
	year INTEGER, 
	author_or_editor TEXT, 
	book_title TEXT, 
	publisher TEXT, 
	category TEXT, 
	result TEXT
)


CREATE TABLE culture_company (
	company_name TEXT, 
	type TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL, 
	book_club_id TEXT, 
	movie_id TEXT
)


CREATE TABLE movie (
	movie_id INTEGER, 
	title TEXT, 
	year INTEGER, 
	director TEXT, 
	budget_million REAL, 
	gross_worldwide INTEGER
)"
68200,Which debaters are above 1.70m tall?,"SELECT p.name, p.height FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id WHERE p.height > 1.70;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68201,Who is the heaviest debater in a debate held at the university?,"SELECT p.name, p.weight FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'university' ORDER BY p.weight DESC LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68202,What is the total number of debates held in each venue?,"SELECT d.venue, COUNT(*) AS total_debates FROM debate d GROUP BY d.venue ORDER BY d.venue;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68203,What are the names of the debaters who won the affirmative side in a debate?,"SELECT p.name, dp.if_affirmative_win FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id WHERE dp.if_affirmative_win = true;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68204,Who is the tallest debater in a debate held at the conference?,"SELECT p.name, p.height FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'conference' ORDER BY p.height DESC LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68205,What are the dates of the debates held at the university?,SELECT d.date FROM debate d WHERE d.venue = 'university';,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68206,What are the names of the debaters who participated in the debate held at the conference?,SELECT p.name FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'conference';,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68207,Who is the lightest debater in a debate held at the university?,"SELECT p.name, p.weight FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'university' ORDER BY p.weight ASC LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68208,What are the dates of the debates held at the conference?,SELECT d.date FROM debate d WHERE d.venue = 'conference';,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68209,What are the names of the debaters who participated in the debate held at the university?,SELECT p.name FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'university';,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68210,Who is the shortest debater in a debate held at the conference?,"SELECT p.name, p.height FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'conference' ORDER BY p.height ASC LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68211,What are the dates of the debates held at the training center?,SELECT d.date FROM debate d WHERE d.venue = 'training center';,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68212,What are the names of the debaters who won the negative side in a debate?,"SELECT p.name, dp.if_affirmative_win FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id WHERE NOT dp.if_affirmative_win;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68213,What are the names of the debaters who participated in the debate held at the training center?,SELECT p.name FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'training center';,"
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68214,Who is the heaviest debater in a debate held at the conference?,"SELECT p.name, p.weight FROM people p JOIN debate_people dp ON p.people_id = dp.debate_id JOIN debate d ON dp.debate_id = d.debate_id WHERE d.venue = 'conference' ORDER BY p.weight DESC LIMIT 1;","
CREATE TABLE debate (
	debate_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	num_of_audience INTEGER
)


CREATE TABLE debate_people (
	debate_id INTEGER, 
	affirmative INTEGER, 
	negative INTEGER, 
	if_affirmative_win BOOLEAN
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68219,What is the average length of a department's address?,SELECT AVG(LENGTH(d.dept_address)) FROM department d,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
68220,Which department has the longest department name?,"SELECT d.dept_name, LENGTH(d.dept_name) AS length FROM department d ORDER BY length DESC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
68222,What is the average extension for each department?,"SELECT d.dept_name, AVG(LENGTH(d.dept_extension)) AS extension_length FROM department d GROUP BY d.dept_name","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
68223,What are all the head's states of origin?,SELECT DISTINCT born_state FROM head,"
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
68224,What is the most common state of origin for the heads?,"SELECT COUNT(born_state) AS count, born_state FROM head GROUP BY born_state ORDER BY count DESC LIMIT 1","
CREATE TABLE department (
	dept_code TEXT, 
	dept_name TEXT, 
	school_code TEXT, 
	emp_num INTEGER, 
	dept_address TEXT, 
	dept_extension TEXT
)


CREATE TABLE head (
	head_id INTEGER, 
	name TEXT, 
	born_state TEXT, 
	age REAL
)


CREATE TABLE management (
	department_id INTEGER, 
	head_id INTEGER, 
	temporary_acting TEXT
)"
68227,Which devices are used by more than 5 shops?,"SELECT DISTINCT d.device_id, d.device FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id, d.device HAVING COUNT(s.shop_id) > 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68229,Which devices are used by only one shop?,"SELECT d.device_id, d.device FROM device d LEFT JOIN stock s ON d.device_id = s.device_id WHERE s.device_id IS NULL","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68230,What is the number of devices used in each shop?,"SELECT s.shop_id, COUNT(s.device_id) AS num_devices FROM stock s GROUP BY s.shop_id","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68231,Which shops have more than 5 devices?,"SELECT s.shop_id, COUNT(s.device_id) AS num_devices FROM stock s GROUP BY s.shop_id HAVING COUNT(s.device_id) > 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68232,What is the average number of devices per shop?,"SELECT AVG(num_devices) FROM (SELECT s.shop_id, COUNT(s.device_id) AS num_devices FROM stock s GROUP BY s.shop_id) t","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68233,Which devices are used by more than 3 shops in a row?,"WITH temp AS (SELECT d.device_id, d.device, ROW_NUMBER() OVER (ORDER BY s.shop_id) AS rn FROM device d JOIN stock s ON d.device_id = s.device_id) SELECT device_id, device FROM temp WHERE rn > 3","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68235,Which devices are used by more than 10 shops?,"SELECT DISTINCT d.device_id, d.device FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id, d.device HAVING COUNT(s.shop_id) > 10","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68236,What is the total number of devices in all shops?,SELECT COUNT(*) FROM stock,"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68237,Which shops have the highest score?,"SELECT s.shop_id, s.score FROM shop s ORDER BY s.score DESC LIMIT 1","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68238,Which devices are used by the same number of shops?,"SELECT d.device_id, d.device, COUNT(s.shop_id) AS num_shops FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id, d.device HAVING COUNT(s.shop_id) > 0","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68240,Which device is used in the most shops?,"SELECT d.device_id, d.device, COUNT(s.shop_id) AS num_shops FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id, d.device ORDER BY num_shops DESC LIMIT 1","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68241,What is the total number of devices used in the last 2 years?,SELECT COUNT(*) FROM stock s JOIN shop sh ON s.shop_id = sh.shop_id WHERE sh.open_year >= '2019',"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68242,Which devices are used by more than 2 times the average number of shops?,"SELECT d.device_id, d.device FROM device d JOIN stock s ON d.device_id = s.device_id GROUP BY d.device_id, d.device HAVING COUNT(s.shop_id) > (SELECT AVG(num_devices) FROM (SELECT s.shop_id, COUNT(s.device_id) AS num_devices FROM stock s GROUP BY s.shop_id) t)","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68243,What is the total number of devices used in the last quarter?,"SELECT COUNT(*) FROM stock s JOIN shop sh ON s.shop_id = sh.shop_id WHERE EXTRACT(MONTH FROM CURRENT_TIMESTAMP) IN (10, 11, 12) AND sh.open_year >= '2019'","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68244,Which shops have the lowest score?,"SELECT s.shop_id, s.score FROM shop s ORDER BY s.score ASC LIMIT 1","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68245,"What is the average number of devices used in each shop, considering only shops with more than 5 devices?","SELECT AVG(num_devices) FROM (SELECT s.shop_id, COUNT(s.device_id) AS num_devices FROM stock s GROUP BY s.shop_id) t WHERE num_devices > 5","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68246,Which shops have the highest number of staff?,"SELECT s.shop_id, s.num_of_staff FROM shop s ORDER BY s.num_of_staff DESC LIMIT 1","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68247,"What is the average number of devices per shop, considering only shops with more than 3 devices?","SELECT AVG(num_devices) FROM (SELECT s.shop_id, COUNT(s.device_id) AS num_devices FROM stock s GROUP BY s.shop_id) t WHERE num_devices > 3","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68249,What is the total number of devices used in the last year?,SELECT COUNT(*) FROM stock s JOIN shop sh ON s.shop_id = sh.shop_id WHERE sh.open_year >= '2018',"
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68250,Which shops have the lowest number of staff?,"SELECT s.shop_id, s.num_of_staff FROM shop s ORDER BY s.num_of_staff ASC LIMIT 1","
CREATE TABLE device (
	device_id INTEGER, 
	device TEXT, 
	carrier TEXT, 
	package_version TEXT, 
	applications TEXT, 
	software_platform TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)


CREATE TABLE stock (
	shop_id INTEGER, 
	device_id INTEGER, 
	quantity INTEGER
)"
68251,List all representatives from California,SELECT * FROM representative WHERE state = 'California',"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68252,Which representatives have been in office the longest?,"SELECT name, lifespan FROM representative ORDER BY lifespan DESC LIMIT 3","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68255,List all representatives who have been elected more than once from the state of California,SELECT name FROM representative WHERE state = 'California' AND representative_id IN (SELECT representative_id FROM election GROUP BY representative_id HAVING COUNT(*) > 1),"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68256,What is the total number of elections held in the 2020 election?,SELECT COUNT(*) AS num_elections FROM election,"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68257,Which representatives have been elected more than once?,SELECT name FROM representative WHERE representative_id IN (SELECT representative_id FROM election GROUP BY representative_id HAVING COUNT(*) > 1),"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68258,What is the total number of elections held by each representative?,"SELECT name, COUNT(*) AS num_elections FROM representative, election WHERE representative_id = (SELECT representative_id FROM representative) GROUP BY name","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68259,Which representatives have been in office for the shortest amount of time?,"SELECT name, lifespan FROM representative ORDER BY lifespan ASC LIMIT 3","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68261,List all representatives who have been elected from the state of New York,SELECT name FROM representative WHERE state = 'New York' AND representative_id IN (SELECT representative_id FROM election WHERE state = 'New York'),"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68262,What is the total number of elections held by each representative from California?,"SELECT name, COUNT(*) AS num_elections FROM representative, election WHERE representative_id = (SELECT representative_id FROM representative) AND state = 'California' GROUP BY name","
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68263,Which representatives have been elected more than 5 times?,SELECT name FROM representative WHERE representative_id IN (SELECT representative_id FROM election GROUP BY representative_id HAVING COUNT(*) > 5),"
CREATE TABLE election (
	election_id INTEGER, 
	counties_represented TEXT, 
	district INTEGER, 
	delegate TEXT, 
	party INTEGER, 
	first_elected REAL, 
	committee TEXT
)


CREATE TABLE representative (
	representative_id INTEGER, 
	name TEXT, 
	state TEXT, 
	party TEXT, 
	lifespan TEXT
)"
68264,"What is the list of employee titles, including their reportee count?","SELECT title, COUNT(*) AS reportee_count FROM employee WHERE reportsto IS NULL GROUP BY title","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68265,What is the average bonus per employee across different years?,SELECT AVG(bonus) AS avg_bonus FROM evaluation,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68267,What is the list of employees who have the same last name and birthdate?,SELECT * FROM employee WHERE LOWER(lastname) IN (SELECT LOWER(lastname) FROM employee GROUP BY lastname HAVING COUNT(*) > 1) AND birthdate IN (SELECT DISTINCT birthdate FROM employee WHERE birthdate IN (SELECT birthdate FROM employee WHERE LOWER(lastname) IN (SELECT LOWER(lastname) FROM employee GROUP BY lastname HAVING COUNT(*) > 1))),"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68268,What is the total number of employees who have worked in every shop?,SELECT COUNT(*) AS total_employees FROM (SELECT employee_id FROM employee JOIN hiring ON employee_id = employee_id GROUP BY employee_id) AS employees,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68269,What is the total number of employees with the same last name and birthdate?,SELECT COUNT(*) AS total_employees FROM (SELECT COUNT(*) FROM employee WHERE LOWER(lastname) IN (SELECT LOWER(lastname) FROM employee GROUP BY lastname HAVING COUNT(*) > 1) AND birthdate IN (SELECT DISTINCT birthdate FROM employee WHERE birthdate IN (SELECT birthdate FROM employee WHERE LOWER(lastname) IN (SELECT LOWER(lastname) FROM employee GROUP BY lastname HAVING COUNT(*) > 1)))) AS employees,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68270,List the top 3 shops with the highest average score,"SELECT s.shop_id, AVG(s.score) AS avg_score FROM shop s GROUP BY s.shop_id ORDER BY avg_score DESC LIMIT 3","
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68271,What is the total number of employees who have worked in the first shop?,SELECT COUNT(*) AS total_employees FROM (SELECT employee_id FROM hiring JOIN employee ON employee_id = employee_id WHERE shop_id = 1) AS employees,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68272,What is the total number of employees with the same first and last name?,SELECT COUNT(*) AS total_employees FROM employee WHERE LOWER(firstname) = LOWER(lastname),"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68273,What is the total number of employees with the same first name and birthdate who work in every shop and have the same last name,SELECT COUNT(*) AS total_employees FROM (SELECT * FROM employee WHERE LOWER(firstname) IN (SELECT LOWER(firstname) FROM employee GROUP BY firstname HAVING COUNT(*) > 1) AND birthdate IN (SELECT DISTINCT birthdate FROM employee WHERE birthdate IN (SELECT birthdate FROM employee WHERE LOWER(firstname) IN (SELECT LOWER(firstname) FROM employee GROUP BY firstname HAVING COUNT(*) > 1))) AND LOWER(lastname) IN (SELECT LOWER(lastname) FROM employee GROUP BY lastname HAVING COUNT(*) > 1)) AS employees,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68274,What is the total number of employees with the same first name and last name who work in every shop,SELECT COUNT(*) AS total_employees FROM (SELECT * FROM employee WHERE LOWER(firstname) = LOWER(lastname)) AS employees,"
CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE evaluation (
	employee_id TEXT, 
	year_awarded TEXT, 
	bonus REAL
)


CREATE TABLE hiring (
	shop_id INTEGER, 
	employee_id INTEGER, 
	start_from TEXT, 
	is_full_time BOOLEAN
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
68275,What is the name of the artwork with the highest number of nominations?,SELECT name FROM artwork WHERE artwork_id = (SELECT artwork_id FROM nomination GROUP BY artwork_id ORDER BY COUNT(*) DESC LIMIT 1),"
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
68276,What is the festival with the highest average audience size?,"SELECT location, AVG(num_of_audience) AS average_audience FROM festival_detail GROUP BY location ORDER BY average_audience DESC","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
68277,What is the type of artwork with the highest number of nominations in the 'Music' festival?,"SELECT type, COUNT(*) AS num_nominations FROM artwork NATURAL JOIN nomination WHERE festival_id = (SELECT festival_id FROM festival_detail WHERE festival_name = 'Music') GROUP BY type ORDER BY num_nominations DESC","
CREATE TABLE artwork (
	artwork_id INTEGER, 
	type TEXT, 
	name TEXT
)


CREATE TABLE festival_detail (
	festival_id INTEGER, 
	festival_name TEXT, 
	chair_name TEXT, 
	location TEXT, 
	year INTEGER, 
	num_of_audience INTEGER
)


CREATE TABLE nomination (
	artwork_id INTEGER, 
	festival_id INTEGER, 
	result TEXT
)"
68280,What is the total trust value from source user 1 to target user 2?,SELECT SUM(trust) FROM trust WHERE source_u_id = 1 AND target_u_id = 2,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
68281,What is the rank of the user with the highest ranking review?,SELECT MAX(rank) FROM review,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
68284,Get the review with the highest ranking and the corresponding ranking,SELECT * FROM review ORDER BY rank DESC LIMIT 1,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
68285,Get the review with the lowest ranking and the corresponding ranking,SELECT * FROM review ORDER BY rank ASC LIMIT 1,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
68286,What is the sum of all trust values from source user 1 to all target users?,SELECT SUM(trust) FROM trust WHERE source_u_id = 1 AND target_u_id IN (SELECT u_id FROM useracct),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
68290,What is the average number of competitors per competition?,SELECT AVG(1.0 * competition_record.rank / (SELECT COUNT(*) FROM farm_competition)) FROM competition_record,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68295,What is the total number of farm_id values in the competition_record table?,SELECT COUNT(DISTINCT farm_id) FROM competition_record,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68304,"What is the total number of cities with a population of more than 100,000?",SELECT COUNT(*) FROM city WHERE regional_population > 100000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68307,What is the total number of farms with more than 50 hectares of land?,SELECT COUNT(*) FROM farm WHERE year = (SELECT MAX(year) FROM farm),"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68309,What is the top 5 farms in terms of cattle?,SELECT * FROM farm ORDER BY total_cattle DESC LIMIT 5,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68311,What is the total number of competitors per theme?,SELECT COUNT(*) FROM farm_competition GROUP BY theme,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68314,What is the top 5 farms in terms of total_horses?,SELECT * FROM farm ORDER BY total_horses DESC LIMIT 5,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
68319,How many films were estimated to gross over 10 million USD in the Asian market during the 2010-2011 seasons?,SELECT COUNT(*) as total_films FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country LIKE '%Asia%' OR country LIKE 'Japan') AND fme.year BETWEEN 2010 AND 2011 AND fme.high_estimate > 10000000;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68320,What films were most likely to gross over 20 million USD worldwide in the 2010-2011 seasons?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2010 AND 2011 AND fme.high_estimate > 20000000 ORDER BY fme.high_estimate DESC;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68321,How many films had an estimated global revenue of over 100 million USD in the 2012-2013 seasons?,SELECT COUNT(*) as total_films FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2012 AND 2013 AND fme.high_estimate > 100000000;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68322,What is the total estimated box-office revenue of all films in the United States market during the 2015-2016 seasons?,SELECT SUM(fme.high_estimate) as total_revenue FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country='United States') AND fme.year BETWEEN 2015 AND 2016;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68323,What are the top 5 films that were most likely to gross over 20 million USD in the 2012-2013 seasons?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2012 AND 2013 AND fme.high_estimate > 20000000 ORDER BY fme.high_estimate DESC LIMIT 5;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68324,How many films were estimated to gross over 50 million USD in the United States market during the 2015-2016 seasons?,SELECT COUNT(*) as total_films FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country='United States') AND fme.year BETWEEN 2015 AND 2016 AND fme.high_estimate > 50000000;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68325,What is the total estimated box-office revenue of all films in the Asian market during the 2010-2011 seasons?,SELECT SUM(fme.high_estimate) as total_revenue FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country LIKE '%Asia%' OR country LIKE 'Japan') AND fme.year BETWEEN 2010 AND 2011;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68326,What are the top 5 films that were most likely to gross over 10 million USD in the 2010-2011 seasons?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2010 AND 2011 AND fme.high_estimate > 10000000 ORDER BY fme.high_estimate DESC LIMIT 5;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68327,How many films had an estimated global revenue of over 50 million USD in the 2012-2013 seasons?,SELECT COUNT(*) as total_films FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2012 AND 2013 AND fme.high_estimate > 50000000;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68328,What is the total estimated box-office revenue of all films in the Asian market during the 2015-2016 seasons?,SELECT SUM(fme.high_estimate) as total_revenue FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country LIKE '%Asia%' OR country LIKE 'Japan') AND fme.year BETWEEN 2015 AND 2016;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68329,What are the top 5 films that were most likely to gross over 20 million USD in the 2015-2016 seasons?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2015 AND 2016 AND fme.high_estimate > 20000000 ORDER BY fme.high_estimate DESC LIMIT 5;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68330,What is the total estimated box-office revenue of all films in the United States market during the 2010-2011 seasons?,SELECT SUM(fme.high_estimate) as total_revenue FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country='United States') AND fme.year BETWEEN 2010 AND 2011;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68331,Which films were most likely to gross over 100 million USD in the 2015 market in the United States?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country='United States') AND fme.year = 2015 AND fme.high_estimate > 100000000 ORDER BY fme.high_estimate DESC;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68332,What are the top 5 films that were most likely to gross over 10 million USD in the 2012-2013 seasons?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2012 AND 2013 AND fme.high_estimate > 10000000 ORDER BY fme.high_estimate DESC LIMIT 5;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68333,How many films had an estimated global revenue of over 50 million USD in the 2015-2016 seasons?,SELECT COUNT(*) as total_films FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2015 AND 2016 AND fme.high_estimate > 50000000;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68335,Which films were most likely to gross over 20 million USD in the 2015-2016 seasons?,SELECT f.title FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.year BETWEEN 2015 AND 2016 AND fme.high_estimate > 20000000 ORDER BY fme.high_estimate DESC;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68337,How many films were estimated to gross over 20 million USD in the Asian market during the 2015-2016 seasons?,SELECT COUNT(*) as total_films FROM film f JOIN film_market_estimation fme ON f.film_id = fme.film_id WHERE fme.market_id = (SELECT market_id FROM market WHERE country LIKE '%Asia%' OR country LIKE 'Japan') AND fme.year BETWEEN 2015 AND 2016 AND fme.high_estimate > 20000000;,"
CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_market_estimation (
	estimation_id INTEGER, 
	low_estimate REAL, 
	high_estimate REAL, 
	film_id INTEGER, 
	type TEXT, 
	market_id INTEGER, 
	year INTEGER
)


CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)"
68339,List the top 5 cities that have the most flights?,"SELECT origin, COUNT(*) FROM flight GROUP BY origin ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68340,What is the total number of flights per month in 2022?,"SELECT EXTRACT(MONTH FROM departure_date), COUNT(*) FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2022 GROUP BY EXTRACT(MONTH FROM departure_date)","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68342,Who is the employee with the longest work experience?,SELECT * FROM employee ORDER BY birthdate ASC,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68344,What is the average flight duration in hours?,SELECT AVG(EXTRACT(EPOCH FROM (arrival_date - departure_date))) FROM flight,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68345,What are the top 5 cities with the most arrivals?,"SELECT destination, COUNT(*) FROM flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68347,What are the top 5 longest work-experienced employees?,SELECT * FROM employee ORDER BY hiredate ASC,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68348,What are the top 5 longest flights by aircraft?,SELECT * FROM flight JOIN aircraft ON flight.aid = aircraft.aircraft_id ORDER BY distance DESC LIMIT 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68350,What is the average flight distance by month in 2022?,"SELECT EXTRACT(MONTH FROM departure_date), AVG(distance) FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2022 GROUP BY EXTRACT(MONTH FROM departure_date)","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68354,What is the total revenue for all flights by month in 2022?,"SELECT EXTRACT(MONTH FROM departure_date), SUM(price) FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2022 GROUP BY EXTRACT(MONTH FROM departure_date)","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68355,What are the top 5 cities with the most arrivals and departures?,"SELECT origin, destination, COUNT(*) FROM flight GROUP BY origin, destination ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68359,What are the top 5 longest work-experienced employees?,SELECT * FROM employee ORDER BY hiredate ASC LIMIT 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68360,What is the average flight distance by aircraft?,SELECT AVG(distance) FROM flight JOIN aircraft ON flight.aid = aircraft.aircraft_id,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
68363,What is the list of airports in the country of Canada?,SELECT * FROM airports WHERE country='Canada',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68364,Which airline operates the most number of flights in the world?,"SELECT airline, COUNT(*) AS total_flights FROM flights GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68365,What is the total number of flights operated by Lufthansa?,SELECT COUNT(*) AS total_flights FROM flights WHERE airline IN (SELECT uid FROM airlines WHERE airline='Lufthansa'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68366,What is the list of airports in Europe?,SELECT * FROM airports WHERE country IN (SELECT country FROM airlines WHERE country LIKE '%Europe'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68367,What is the total number of flights from New York to London?,SELECT COUNT(*) AS total_flights FROM flights WHERE sourceairport='New York' AND destairport='London',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68368,Which airline operates the most number of flights in North America?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country='North America') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68369,What is the list of airports in South America?,SELECT * FROM airports WHERE country IN (SELECT country FROM airlines WHERE country LIKE '%South America'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68370,Which airline has the most number of flights to Europe?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE destairport IN (SELECT city FROM airports WHERE country='Europe') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68371,What is the total number of flights from Tokyo to Beijing?,SELECT COUNT(*) AS total_flights FROM flights WHERE sourceairport='Tokyo' AND destairport='Beijing',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68372,Which airline operates the most number of flights in Africa?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country='Africa') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68373,What is the list of airlines operating in Asia?,SELECT * FROM airlines WHERE country LIKE '%Asia',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68374,Which airline has the most number of flights to Australia?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE destairport IN (SELECT city FROM airports WHERE country='Australia') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68375,What is the total number of flights operated by Delta?,SELECT COUNT(*) AS total_flights FROM flights WHERE airline IN (SELECT uid FROM airlines WHERE airline='Delta'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68376,What is the list of airports in Oceania?,SELECT * FROM airports WHERE country IN (SELECT country FROM airlines WHERE country LIKE '%Oceania'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68377,Which airline operates the most number of flights to South America?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE destairport IN (SELECT city FROM airports WHERE country='South America') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68378,What is the total number of flights from Paris to Rome?,SELECT COUNT(*) AS total_flights FROM flights WHERE sourceairport='Paris' AND destairport='Rome',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68380,What is the list of airports in the Middle East?,SELECT * FROM airports WHERE country IN (SELECT country FROM airlines WHERE country LIKE '%Middle East'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68381,Which airline has the most number of flights to Africa?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE destairport IN (SELECT city FROM airports WHERE country='Africa') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68383,What is the list of airlines operating in Europe?,SELECT * FROM airlines WHERE country LIKE '%Europe',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68384,Which airline has the most number of flights in South America?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE sourceairport IN (SELECT city FROM airports WHERE country='South America') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68385,What is the total number of flights from Los Angeles to Tokyo?,SELECT COUNT(*) AS total_flights FROM flights WHERE sourceairport='Los Angeles' AND destairport='Tokyo',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68386,Which airline operates the most number of flights to North America?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE destairport IN (SELECT city FROM airports WHERE country='North America') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68387,What is the list of airports in North America?,SELECT * FROM airports WHERE country IN (SELECT country FROM airlines WHERE country LIKE '%North America'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68388,Which airline has the most number of flights to Asia?,"SELECT airline, COUNT(*) AS total_flights FROM flights WHERE destairport IN (SELECT city FROM airports WHERE country='Asia') GROUP BY airline ORDER BY total_flights DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68389,What is the total number of flights operated by British Airways?,SELECT COUNT(*) AS total_flights FROM flights WHERE airline IN (SELECT uid FROM airlines WHERE airline='British Airways'),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
68390,What is the airline name for the UID 5?,SELECT airline FROM airlines WHERE uid = 5,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68392,What is the airport code for 'New York John F Kennedy International Airport'?,SELECT airportcode FROM airports WHERE airportname = 'New York John F Kennedy International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68393,Find the airline abbreviation for Virgin Atlantic,SELECT abbreviation FROM airlines WHERE airline = 'Virgin Atlantic',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68394,What is the country abbreviation for Australia?,SELECT countryabbrev FROM airports WHERE country = 'Australia',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68395,List all airlines serving 'London Heathrow Airport',SELECT DISTINCT airline FROM routes WHERE src_ap = 'London Heathrow Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68396,What is the codeshare for the route from 'New York John F Kennedy International Airport' to 'Los Angeles International Airport'?,SELECT codeshare FROM routes WHERE src_ap = 'New York John F Kennedy International Airport' AND dst_ap = 'Los Angeles International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68398,Which airlines operate flights from 'New York John F Kennedy International Airport'?,SELECT DISTINCT airline FROM routes WHERE src_ap = 'New York John F Kennedy International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68399,What is the airline that operates the route from 'Paris Charles de Gaulle Airport' to 'London Heathrow Airport'?,SELECT airline FROM routes WHERE src_ap = 'Paris Charles de Gaulle Airport' AND dst_ap = 'London Heathrow Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68400,What is the total number of airlines operating out of 'New York John F Kennedy International Airport'?,SELECT COUNT(DISTINCT airline) FROM routes WHERE src_ap = 'New York John F Kennedy International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68401,Which airports in the United States are served by more than two airlines?,SELECT DISTINCT airportname FROM airports WHERE country = 'United States' AND (SELECT COUNT(DISTINCT airline) FROM routes WHERE src_ap = airportname) > 2,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68402,What is the country of the airport ?,SELECT country FROM airports WHERE airportname = 'Bangkok Suvarnabhumi Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68403,What airlines has codeshare with each other?,"SELECT r1.airline, r2.airline FROM routes r1, routes r2 WHERE r1.codeshare = r2.codeshare AND r1.rid != r2.rid","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68404,Is there a route between 'New York John F Kennedy International Airport' and 'Los Angeles International Airport'?,SELECT 1 FROM routes WHERE src_ap = 'New York John F Kennedy International Airport' AND dst_ap = 'Los Angeles International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68406,What is the number of routes operated by 'Korean Air'?,SELECT COUNT(rid) FROM routes WHERE airline = 'Korean Air',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68407,What is the number of airlines that serve 'Paris Charles de Gaulle Airport'?,SELECT COUNT(DISTINCT airline) FROM routes WHERE dst_ap = 'Paris Charles de Gaulle Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68408,What is the city of 'Paris Charles de Gaulle Airport'?,SELECT city FROM airports WHERE airportname = 'Paris Charles de Gaulle Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68409,How many routes does 'Lufthansa' operate?,SELECT COUNT(rid) FROM routes WHERE airline = 'Lufthansa',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68410,Is there a route from 'New York John F Kennedy International Airport' to 'Tokyo Haneda Airport'?,SELECT 1 FROM routes WHERE src_ap = 'New York John F Kennedy International Airport' AND dst_ap = 'Tokyo Haneda Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68411,What is the country of 'New York John F Kennedy International Airport'?,SELECT country FROM airports WHERE airportname = 'New York John F Kennedy International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68412,What airlines operate from 'Los Angeles International Airport'?,SELECT DISTINCT airline FROM routes WHERE src_ap = 'Los Angeles International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68413,How many airports are in 'United States'?,SELECT COUNT(*) FROM airports WHERE country = 'United States',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68414,What is the country of 'London Heathrow Airport'?,SELECT country FROM airports WHERE airportname = 'London Heathrow Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68415,What is the number of routes from 'New York John F Kennedy International Airport' and 'Los Angeles International Airport'?,SELECT COUNT(*) FROM routes WHERE src_ap = 'New York John F Kennedy International Airport' OR dst_ap = 'New York John F Kennedy International Airport' OR src_ap = 'Los Angeles International Airport' OR dst_ap = 'Los Angeles International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68417,What is the airline that operates the route from 'New York John F Kennedy International Airport' to 'Los Angeles International Airport'?,SELECT airline FROM routes WHERE src_ap = 'New York John F Kennedy International Airport' AND dst_ap = 'Los Angeles International Airport',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE routes (
	rid INTEGER, 
	dst_apid INTEGER, 
	dst_ap TEXT, 
	src_apid INTEGER, 
	src_ap TEXT, 
	alid INTEGER, 
	airline TEXT, 
	codeshare TEXT
)"
68420,What is the total number of domestic passengers in 2007?,SELECT SUM(domestic_passengers) FROM airport WHERE __change_2007 = '2007';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68422,What is the top 3 operate companies based on group equity shareholding?,"SELECT name, group_equity_shareholding FROM operate_company ORDER BY group_equity_shareholding DESC LIMIT 3;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68423,What is the total number of international passengers in 2010?,SELECT SUM(international_passengers) FROM airport WHERE __change_2007 LIKE '2010%';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68424,What is the top 5 busiest airports in terms of air traffic movements?,"SELECT airport_name, aircraft_movements FROM airport ORDER BY aircraft_movements DESC LIMIT 5;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68425,What is the average total passengers per airport in 2015?,SELECT AVG(total_passengers) FROM airport WHERE __change_2007 LIKE '2015%';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68426,What is the total number of flights within 500km distance?,SELECT COUNT(*) FROM flight WHERE distance <= 500;,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68427,What is the average number of flights per airport per day?,SELECT AVG(aircraft_movements) FROM airport;,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68428,What is the total number of international passengers in 2015?,SELECT SUM(international_passengers) FROM airport WHERE __change_2007 LIKE '2015%';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68429,What is the top 5 busiest airports in terms of freight tonnage?,"SELECT airport_name, freight_metric_tonnes FROM airport ORDER BY freight_metric_tonnes DESC LIMIT 5;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68431,What is the total number of flights from Tokyo?,SELECT COUNT(*) FROM flight WHERE origin = 'Tokyo';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68435,What is the top 3 operate companies based on number of aircraft operated?,"SELECT name, COUNT(*) AS num_aircraft FROM operate_company JOIN flight ON operate_company.id = flight.aid GROUP BY name ORDER BY num_aircraft DESC LIMIT 3;","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68436,What is the total number of domestic passengers in 2010?,SELECT SUM(domestic_passengers) FROM airport WHERE __change_2007 LIKE '2010%';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68437,What is the average distance flown between Tokyo and New York?,SELECT AVG(distance) FROM flight WHERE origin = 'Tokyo' AND destination = 'New York';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68440,What is the total number of flights from Los Angeles?,SELECT COUNT(*) FROM flight WHERE origin = 'Los Angeles';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68441,What is the average number of flights per airport per day in 2010?,SELECT AVG(aircraft_movements) FROM airport WHERE __change_2007 LIKE '2010%';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68444,What is the average distance flown between airports in the Asia-Pacific region?,SELECT AVG(distance) FROM flight WHERE origin LIKE 'Asia-Pacific%';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68446,What is the total number of flights from Paris?,SELECT COUNT(*) FROM flight WHERE origin = 'Paris';,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
68447,Which stadium has the highest average attendance?,"SELECT s.name, AVG(s.capacity) AS avg_attendance FROM stadium s JOIN game g ON s.stadium_id = g.stadium_id GROUP BY s.name ORDER BY avg_attendance DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68448,What is the most common injury sustained by a player in the 2019 season?,"SELECT i.injury, COUNT(i.injury) AS count FROM injury_accident i JOIN game g ON i.game_id = g.id WHERE g.season = 2019 GROUP BY i.injury ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68449,What is the average capacity of stadiums in the Premier League?,SELECT AVG(s.capacity) AS avg_capacity FROM stadium s JOIN game g ON s.stadium_id = g.stadium_id WHERE g.competition LIKE '%Premier%';,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68450,What is the team with the most wins in the 2018 season?,"SELECT home_team, COUNT(score) AS wins FROM game WHERE season = 2018 GROUP BY home_team ORDER BY wins DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68451,What is the average number of matches missed by players due to injury in the 2019 season?,"SELECT i.number_of_matches, AVG(CAST(i.number_of_matches AS INTEGER)) AS avg_matches FROM injury_accident i JOIN game g ON i.game_id = g.id WHERE g.season = 2019 GROUP BY i.number_of_matches ORDER BY avg_matches DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68452,What is the most common competition for which matches were played?,"SELECT competition, COUNT(competition) AS count FROM game GROUP BY competition ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68453,What is the name of the stadium with the highest capacity?,SELECT s.name FROM stadium s ORDER BY s.capacity DESC LIMIT 1;,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68454,What is the most common type of injury sustained by a player?,"SELECT injury, COUNT(injury) AS count FROM injury_accident GROUP BY injury ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68455,What is the team with the most draws in the 2018 season?,"SELECT home_team, COUNT(CASE WHEN score LIKE '%-%' THEN 1 ELSE NULL END) AS draws FROM game WHERE season = 2018 GROUP BY home_team ORDER BY draws DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68456,What is the most common score for a match?,"SELECT SPLIT_PART(score, '-', 1) AS score, COUNT(score) AS count FROM game GROUP BY score ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68458,What is the most common injury sustained by a player in the 2020 season?,"SELECT i.injury, COUNT(i.injury) AS count FROM injury_accident i JOIN game g ON i.game_id = g.id WHERE g.season = 2020 GROUP BY i.injury ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68459,What is the average number of matches missed by players due to injury in the Premier League?,SELECT AVG(CAST(i.number_of_matches AS INTEGER)) AS avg_matches FROM injury_accident i JOIN game g ON i.game_id = g.id WHERE g.competition LIKE '%Premier%';,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68460,What is the most common scoring team in the 2017 season?,"SELECT home_team, COUNT(score) AS count FROM game WHERE season = 2017 AND score LIKE '%-' GROUP BY home_team ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68461,What is the average number of matches won by teams in the 2018 season?,SELECT COUNT(CASE WHEN score LIKE '____-____' THEN 1 ELSE NULL END) AS wins FROM game WHERE season = 2018;,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68462,What is the team with the most draws in the 2020 season?,"SELECT home_team, COUNT(CASE WHEN score LIKE '%-%' THEN 1 ELSE NULL END) AS draws FROM game WHERE season = 2020 GROUP BY home_team ORDER BY draws DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68463,What is the team with the most losses in the 2019 season?,"SELECT home_team, COUNT(CASE WHEN score LIKE '____-____' THEN 1 ELSE NULL END) AS losses FROM game WHERE season = 2019 GROUP BY home_team ORDER BY losses DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68464,What is the most common injury sustained by a player in the 2018 season?,"SELECT i.injury, COUNT(i.injury) AS count FROM injury_accident i JOIN game g ON i.game_id = g.id WHERE g.season = 2018 GROUP BY i.injury ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68466,What is the most common scoring team in the 2020 season?,"SELECT home_team, COUNT(score) AS count FROM game WHERE season = 2020 AND score LIKE '%-' GROUP BY home_team ORDER BY count DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68467,What is the average number of matches won by teams in the 2019 season?,SELECT COUNT(CASE WHEN score LIKE '____-____' THEN 1 ELSE NULL END) AS wins FROM game WHERE season = 2019;,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68468,What is the team with the most losses in the 2017 season?,"SELECT home_team, COUNT(CASE WHEN score LIKE '____-____' THEN 1 ELSE NULL END) AS losses FROM game WHERE season = 2017 GROUP BY home_team ORDER BY losses DESC LIMIT 1;","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
68472,Which company has the highest sales?,"SELECT name, SUM(sales_in_billion) FROM company GROUP BY name ORDER BY 2 DESC LIMIT 1","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68474,Which company has the highest number of gas stations?,SELECT COUNT(*) FROM station_company GROUP BY company_id ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68475,What is the year the gas station opened?,SELECT open_year FROM gas_station WHERE station_id = (SELECT station_id FROM station_company ORDER BY rank_of_the_year DESC LIMIT 1),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68477,What is the number of companies with more than 10 billions in sales?,SELECT COUNT(*) FROM company WHERE sales_in_billion > 10,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68478,What is the ranking of the company with the highest sales?,SELECT rank_of_the_year FROM station_company sc JOIN company c ON sc.company_id = c.company_id ORDER BY c.sales_in_billion DESC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68479,What is the location of the gas station with the highest ranking?,SELECT location FROM gas_station WHERE station_id = (SELECT station_id FROM station_company ORDER BY rank_of_the_year DESC LIMIT 1),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68480,What are the company's financial reports for the year?,"SELECT sales_in_billion, profits_in_billion FROM company WHERE company_id = (SELECT company_id FROM station_company WHERE station_id = (SELECT station_id FROM gas_station ORDER BY open_year DESC LIMIT 1))","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68483,What is the ranking of the company with the highest market value?,SELECT rank_of_the_year FROM station_company sc JOIN company c ON sc.company_id = c.company_id ORDER BY c.market_value_in_billion DESC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68484,What is the number of companies with more than 5 billions in profits?,SELECT COUNT(*) FROM company WHERE profits_in_billion > 5,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68485,What is the company's sales in the US market?,SELECT SUM(sales_in_billion) FROM company WHERE name LIKE '%US%',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68486,What is the ranking of the gas station with the lowest ranking?,SELECT rank_of_the_year FROM station_company ORDER BY rank_of_the_year ASC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68487,What is the ranking of the company with the highest assets?,SELECT rank_of_the_year FROM station_company sc JOIN company c ON sc.company_id = c.company_id ORDER BY c.assets_in_billion DESC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68488,What is the number of companies with more than 20 billions in market value?,SELECT COUNT(*) FROM company WHERE market_value_in_billion > 20,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68490,What is the average profit of the company for a specific year?,SELECT AVG(profits_in_billion) FROM company WHERE company_id = (SELECT company_id FROM station_company WHERE station_id = (SELECT station_id FROM gas_station WHERE open_year = 2010)),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68492,What is the number of companies with more than 15 billions in sales?,SELECT COUNT(*) FROM company WHERE sales_in_billion > 15,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68493,What is the ranking of the company with the highest profits?,SELECT rank_of_the_year FROM station_company sc JOIN company c ON sc.company_id = c.company_id ORDER BY c.profits_in_billion DESC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68496,What is the number of companies with more than 10 billions in assets?,SELECT COUNT(*) FROM company WHERE assets_in_billion > 10,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68497,What is the ranking of the company with the highest ranking?,SELECT rank_of_the_year FROM station_company ORDER BY rank_of_the_year DESC LIMIT 1,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68498,What are the top 5 companies with the highest market value?,"SELECT name, market_value_in_billion FROM company ORDER BY market_value_in_billion DESC LIMIT 5","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
68499,What is the name of the river that traverses the highest peak in the 'Rocky Mountains'?,SELECT river_name FROM river JOIN mountain ON river.traverse = mountain.name WHERE mountain.range = 'Rocky Mountains' ORDER BY mountain.height DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68500,What is the longest lake in a state that borders 'Mexico'?,SELECT lake_name FROM lake WHERE lake.country_name = 'Mexico' ORDER BY area DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68501,What is the name of the border that separates 'USA' and 'Canada'?,SELECT border FROM border_info WHERE state_name IN (SELECT state_name FROM state WHERE country_name = 'USA'),"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68502,What is the name of the mountain with the highest prominence in the 'Rocky Mountains'?,SELECT name FROM mountain WHERE range = 'Rocky Mountains' ORDER BY prominence DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68503,What is the name of the river that flows through the highest peak in the 'Appalachian Mountains'?,SELECT river_name FROM river JOIN mountain ON river.traverse = mountain.name WHERE mountain.range = 'Appalachian Mountains' ORDER BY mountain.height DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68504,What is the name of the state with the lowest population in the contiguous United States?,SELECT state_name FROM state WHERE population < (SELECT AVG(population) FROM state) AND country_name = 'United States',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68505,What is the name of the lake in a state that borders 'Canada'?,SELECT lake_name FROM lake WHERE lake.country_name = 'Canada',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68508,What is the name of the mountain with the lowest elevation in the 'Rocky Mountains'?,SELECT name FROM mountain WHERE range = 'Rocky Mountains' ORDER BY height ASC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68509,What is the name of the state with the highest population density in the United States?,SELECT state_name FROM state WHERE density > (SELECT AVG(density) FROM state) ORDER BY density DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68510,What is the name of the river that flows through the lowest point in the 'Appalachian Mountains'?,SELECT river_name FROM river JOIN mountain ON river.traverse = mountain.name WHERE mountain.range = 'Appalachian Mountains' ORDER BY mountain.height ASC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68511,What is the name of the lake with the highest area in a state that borders 'Canada'?,SELECT lake_name FROM lake WHERE lake.country_name = 'Canada' ORDER BY area DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68512,What is the name of the state with the highest population density in a state that borders 'Canada'?,SELECT state_name FROM state WHERE country_name = 'Canada' ORDER BY density DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68513,What is the name of the lake in a state that borders 'Mexico'?,SELECT lake_name FROM lake WHERE lake.country_name = 'Mexico',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68514,What is the name of the mountain with the highest peak in the 'Rocky Mountains'?,SELECT name FROM mountain WHERE range = 'Rocky Mountains' ORDER BY height DESC LIMIT 1,"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
68516,What is the average height of gymnasts who are taller than 170 cm?,SELECT AVG(height) FROM people WHERE height > 170;,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68518,Who is the youngest gymnast?,SELECT name FROM people ORDER BY birth_date ASC LIMIT 1;,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
68519,What are the top 5 most populous cities in the Asia-Pacific region?,"SELECT l.location_name, COUNT(*) AS population FROM locations l JOIN regions r ON l.location_id = r.region_id WHERE r.region_name = 'Asia-Pacific' GROUP BY l.location_name ORDER BY population DESC LIMIT 5;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
68520,What is the name of the editor with the highest average age?,"SELECT name, AVG(age) FROM editor GROUP BY name ORDER BY AVG(age) DESC LIMIT 1.","
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
68522,List all editors who have worked on more than one journal.,SELECT name FROM editor WHERE editor_id IN (SELECT DISTINCT editor_id FROM journal_committee GROUP BY editor_id HAVING COUNT(journal_id) > 1),"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
68523,What is the number of editors in the 'Science' journal?,SELECT COUNT(*) FROM editor e JOIN journal_committee jc ON e.editor_id = jc.editor_id JOIN journal j ON jc.journal_id = j.jid WHERE j.name = 'Science',"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
68524,What is the average age of editors in the 'Math' journal?,SELECT AVG(age) AS avg_age FROM editor e JOIN journal_committee jc ON e.editor_id = jc.editor_id JOIN journal j ON jc.journal_id = j.jid WHERE j.name = 'Math',"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
68525,What is the name of the editor with the highest age?,SELECT name FROM editor WHERE age > (SELECT MAX(age) FROM editor) LIMIT 1.,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
68526,What is the average age of technicians in a specific team?,SELECT AVG(age) FROM technician WHERE team = '指定的团队名',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68527,List all machines with a quality rank of 5 or higher,SELECT * FROM machine WHERE quality_rank >= 5,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68529,What are the machines with the top 3 highest value points?,SELECT * FROM machine ORDER BY value_points DESC LIMIT 3,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68530,What is the count of repairs for each machine,"SELECT machine_id, COUNT(*) AS repair_count FROM repair_assignment GROUP BY machine_id","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68531,What is the earliest and latest repair dates,"SELECT MIN(launch_date) AS earliest, MAX(launch_date) AS latest FROM repair","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68532,List all machines with no repairs assigned,SELECT * FROM machine WHERE machine_id NOT IN (SELECT machine_id FROM repair_assignment),"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68535,List all machines in a specific machine series,SELECT * FROM machine WHERE machine_series = '指定的机器系列',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68537,What is the average quality rank of machines by making year,"SELECT making_year, AVG(quality_rank) AS average_quality_rank FROM machine GROUP BY making_year","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68539,What is the count of repairs for each technician,"SELECT technician_id, COUNT(*) AS repair_count FROM repair_assignment GROUP BY technician_id","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68540,What is the average age of technicians with a specific name,SELECT AVG(age) FROM technician WHERE name = '指定的姓名',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68541,What is the machine with the highest value points in a specific class,SELECT * FROM machine WHERE class = '指定的类' ORDER BY value_points DESC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68542,List all machines with a quality rank of 1 or lower,SELECT * FROM machine WHERE quality_rank <= 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68543,What is the total age of all technicians,SELECT SUM(age) AS total_age FROM technician,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68544,What is the count of machines by making year and class,"SELECT making_year, class, COUNT(*) AS machine_count FROM machine GROUP BY making_year, class","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68545,What is the machine with the average quality rank in the middle,SELECT * FROM machine ORDER BY quality_rank ASC LIMIT 1 OFFSET 3,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68546,What is the count of technicians by starting year,"SELECT starting_year, COUNT(*) AS technician_count FROM technician GROUP BY starting_year","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68547,What is the machine with the highest value points in a specific machine series,SELECT * FROM machine WHERE machine_series = '指定的机器系列' ORDER BY value_points DESC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68548,What is the count of repairs by repair name,"SELECT name, COUNT(*) AS repair_count FROM repair GROUP BY name","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68550,What is the machine with the lowest value points,SELECT * FROM machine ORDER BY value_points ASC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68551,What is the count of machines with a specific quality rank,SELECT COUNT(*) AS machine_count FROM machine WHERE quality_rank = 5,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68552,What is the average age of technicians with a specific team and name,SELECT AVG(age) FROM technician WHERE team = '指定的团队名' AND name = '指定的姓名',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68553,What is the total age of technicians in a specific team,SELECT SUM(age) AS total_age FROM technician WHERE team = '指定的团队名',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68554,What is the count of machines with a specific class,SELECT COUNT(*) AS machine_count FROM machine WHERE class = '指定的类',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68555,What is the machine with the highest value points in a specific team,SELECT * FROM machine WHERE team = '指定的团队名' ORDER BY value_points DESC LIMIT 1,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
68556,List the names of furniture items that have a price greater than 3000 dollars and a number of components more than 2.,SELECT name FROM furniture WHERE market_rate > 3000 AND num_of_component > 2,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
68557,List the furniture items having a market rate greater than 4000 dollars and fewer than 1000 components.,SELECT name FROM furniture WHERE market_rate > 4000 AND num_of_component < 1000,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
68560,List the names of furniture items with fewer than 500 components.,SELECT name FROM furniture WHERE num_of_component < 500,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
68563,What is the total number of furniture items having a price greater than 4000 dollars and a number of components less than 500?,SELECT COUNT(*) FROM furniture WHERE market_rate > 4000 AND num_of_component < 500,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
68564,List the names of furniture items having a market rate less than 1000 dollars and a number of components more than 1.,SELECT name FROM furniture WHERE market_rate < 1000 AND num_of_component > 1,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
68565,List the furniture items with a market rate less than 500 dollars.,SELECT name FROM furniture WHERE market_rate < 500,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
68566,What is the average height of NBA players born in the 1980s?,SELECT AVG(height) FROM player WHERE birth_year >= 1980 AND birth_year <= 1989,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
68567,What is the average number of games played by players who have played for three different teams?,SELECT AVG(g) FROM team JOIN player ON team.team_id = player.retro_id WHERE (SELECT COUNT(DISTINCT team_id) FROM team WHERE team_id = player.retro_id) >= 3,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
68568,Which team has the highest attendance record in a single season?,"SELECT name, MAX(attendance) AS highest_attendance FROM team WHERE attendance IS NOT NULL GROUP BY name","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
68569,Which team has the highest winning percentage in the NBA?,"SELECT name, SUM(w) / SUM(g) AS win_percentage FROM team GROUP BY name ORDER BY win_percentage DESC LIMIT 1","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
68570,Which team has the highest wins-to-losses ratio in the NBA?,"SELECT name, SUM(w) / SUM(l) AS win_loss_ratio FROM team GROUP BY name ORDER BY win_loss_ratio DESC LIMIT 1","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
68571,Which team has the most players who have played in the NBA?,"SELECT name, COUNT(*) AS num_players FROM team JOIN player ON team.team_id = player.retro_id GROUP BY name ORDER BY num_players DESC","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
68574,What is the name of the enzyme located on chromosome X that is associated with Porphyria?,SELECT name FROM enzyme WHERE chromosome = 'X' AND porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68575,List all FDA-approved medicines that interact with the enzyme Porphobilinogen synthase,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'Porphobilinogen synthase') AND m.fda_approved = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68576,What is the ID of the enzyme located on chromosome 17 that produces the protein Glucose-6-phosphatase?,SELECT id FROM enzyme WHERE chromosome = '17' AND product = 'Glucose-6-phosphatase',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68577,List all medications that interact with the enzyme Aconitase,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'Aconitase'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68578,What is the name of the enzyme that produces the protein Succinyl-CoA ligase?,SELECT name FROM enzyme WHERE product = 'Succinyl-CoA ligase',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68579,What is the ID of the medication that is used to treat Porphyria and is FDA-approved?,SELECT m.id FROM medicine m WHERE m.fda_approved = 'Yes' AND EXISTS (SELECT 1 FROM medicine_enzyme_interaction me WHERE me.medicine_id = m.id AND me.interaction_type = 'treats Porphyria'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68580,List all enzymes that produce proteins containing the sequence pattern 'XXXX' in their name,SELECT name FROM enzyme WHERE name LIKE '%XXXX%',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68581,What is the name of the medication that interacts with the enzyme Alanine-glyoxylate aminotransferase?,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'Alanine-glyoxylate aminotransferase'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68582,What is the ID of the enzyme located on chromosome 11 that is associated with Porphyria?,SELECT id FROM enzyme WHERE chromosome = '11' AND porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68583,List all FDA-approved medications that interact with the enzyme Ferroxidase,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'Ferroxidase') AND m.fda_approved = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68584,What is the name of the enzyme that produces the protein Isomerase?,SELECT name FROM enzyme WHERE product = 'Isomerase',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68585,What is the ID of the medication that is used to treat Hemophilia and is FDA-approved?,SELECT m.id FROM medicine m WHERE m.fda_approved = 'Yes' AND EXISTS (SELECT 1 FROM medicine_enzyme_interaction me WHERE me.medicine_id = m.id AND me.interaction_type = 'treats Hemophilia'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68586,List all enzymes that produce proteins containing the sequence pattern 'TTTT' in their name,SELECT name FROM enzyme WHERE name LIKE '%TTTT%',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68587,What is the name of the medication that interacts with the enzyme L-arginine:glycine amidinotransferase?,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'L-arginine:glycine amidinotransferase'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68588,What is the ID of the enzyme located on chromosome 3 that is associated with Porphyria?,SELECT id FROM enzyme WHERE chromosome = '3' AND porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68589,List all FDA-approved medications that interact with the enzyme Phosphorylase,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'Phosphorylase') AND m.fda_approved = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68590,What is the name of the enzyme that produces the protein Aldolase?,SELECT name FROM enzyme WHERE product = 'Aldolase',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68591,What is the ID of the medication that is used to treat Thalassemia and is FDA-approved?,SELECT m.id FROM medicine m WHERE m.fda_approved = 'Yes' AND EXISTS (SELECT 1 FROM medicine_enzyme_interaction me WHERE me.medicine_id = m.id AND me.interaction_type = 'treats Thalassemia'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68592,List all enzymes that produce proteins containing the sequence pattern 'XXX' in their name,SELECT name FROM enzyme WHERE name LIKE '%XXX%',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68593,What is the name of the medication that interacts with the enzyme GDP-L-fucose: N-acyltransferase?,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'GDP-L-fucose: N-acyltransferase'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68594,What is the ID of the enzyme located on chromosome 7 that is associated with Porphyria?,SELECT id FROM enzyme WHERE chromosome = '7' AND porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68595,List all FDA-approved medications that interact with the enzyme L-amino acid oxidase,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'L-amino acid oxidase') AND m.fda_approved = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68596,What is the name of the enzyme that produces the protein Pyruvate kinase?,SELECT name FROM enzyme WHERE product = 'Pyruvate kinase',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68597,What is the ID of the medication that is used to treat Sickle Cell Anemia and is FDA-approved?,SELECT m.id FROM medicine m WHERE m.fda_approved = 'Yes' AND EXISTS (SELECT 1 FROM medicine_enzyme_interaction me WHERE me.medicine_id = m.id AND me.interaction_type = 'treats Sickle Cell Anemia'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68598,List all enzymes that produce proteins containing the sequence pattern 'TT' in their name,SELECT name FROM enzyme WHERE name LIKE '%TT%',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68599,What is the name of the medication that interacts with the enzyme Hydroxymethylbilane synthase?,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'Hydroxymethylbilane synthase'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68600,What is the ID of the enzyme located on chromosome 10 that is associated with Porphyria?,SELECT id FROM enzyme WHERE chromosome = '10' AND porphyria = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68601,List all FDA-approved medications that interact with the enzyme L-lysine:glycine amidinotransferase,SELECT m.name FROM medicine m JOIN medicine_enzyme_interaction me ON m.id = me.medicine_id WHERE me.enzyme_id IN (SELECT id FROM enzyme WHERE name = 'L-lysine:glycine amidinotransferase') AND m.fda_approved = 'Yes',"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68603,What is the ID of the medication that is used to treat Albinism and is FDA-approved?,SELECT m.id FROM medicine m WHERE m.fda_approved = 'Yes' AND EXISTS (SELECT 1 FROM medicine_enzyme_interaction me WHERE me.medicine_id = m.id AND me.interaction_type = 'treats Albinism'),"
CREATE TABLE enzyme (
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	product TEXT, 
	chromosome TEXT, 
	omim INTEGER, 
	porphyria TEXT
)


CREATE TABLE medicine (
	id INTEGER, 
	name TEXT, 
	trade_name TEXT, 
	fda_approved TEXT
)


CREATE TABLE medicine_enzyme_interaction (
	enzyme_id INTEGER, 
	medicine_id INTEGER, 
	interaction_type TEXT
)"
68604,What are the names of camera lenses with a focal length greater than 50mm?,SELECT name FROM camera_lens WHERE focal_length_mm > 50,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68605,What mountain ranges are located in the Andes?,SELECT DISTINCT range FROM mountain WHERE country = 'Andes',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68606,How many cameras have a maximum aperture greater than f/1.4?,SELECT COUNT(*) FROM camera_lens WHERE max_aperture > 1.4,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68607,What is the average height of mountains in the Rockies?,SELECT AVG(height) FROM mountain WHERE range = 'Rockies',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68608,What is the name of the tourist attraction with photo id 1?,SELECT name FROM photos WHERE photo_id = 1,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68609,What are the countries where mountains have a prominence of more than 1000m?,SELECT DISTINCT country FROM mountain WHERE prominence > 1000,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68610,What is the number of camera lenses made by Nikon?,SELECT COUNT(*) FROM camera_lens WHERE brand = 'Nikon',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68611,What are the names of tourist attractions in Paris?,SELECT name FROM photos WHERE other_details LIKE '%Paris%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68613,What range of mountains is the highest?,SELECT max(height) FROM mountain,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68614,What is the name of the camera lens with the highest maximum aperture?,SELECT name FROM camera_lens WHERE max_aperture = (SELECT MAX(max_aperture) FROM camera_lens),"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68615,How many tourist attractions are there in the USA?,SELECT COUNT(*) FROM photos WHERE other_details LIKE '%USA%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68616,What are the names of mountains in the Andes?,SELECT name FROM mountain WHERE range = 'Andes',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68617,What is the minimum height of mountains,SELECT min(height) FROM mountain,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68618,How many lenses are there from Canon?,SELECT COUNT(*) FROM camera_lens WHERE brand = 'Canon',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68619,What are the countries where mountains have a height greater than 6000m?,SELECT DISTINCT country FROM mountain WHERE height > 6000,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68620,What is the maximum height of mountains in the Himalayas?,SELECT max(height) FROM mountain WHERE range = 'Himalayas',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68621,What are the names of tourist attractions with descriptions containing 'Paris'?,SELECT name FROM photos WHERE description LIKE '%Paris%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68622,What are the names of camera lenses from Nikon?,SELECT name FROM camera_lens WHERE brand = 'Nikon',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68623,How many tourist attractions are there in the Alps?,SELECT COUNT(*) FROM photos WHERE other_details LIKE '%Alps%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68624,What is the average height of mountains in the Alps?,SELECT AVG(height) FROM mountain WHERE range = 'Alps',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68626,What are the countries where mountains have a prominence greater than 500m?,SELECT DISTINCT country FROM mountain WHERE prominence > 500,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68627,What is the maximum focal length of lenses in the camera lens collection?,SELECT max(focal_length_mm) FROM camera_lens,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68628,What are the names of tourist attractions in London?,SELECT name FROM photos WHERE other_details LIKE '%London%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68629,What are the names of mountains in the Rockies?,SELECT name FROM mountain WHERE range = 'Rockies',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68630,What are the countries where mountains have a height greater than 3000m?,SELECT DISTINCT country FROM mountain WHERE height > 3000,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68631,What is the maximum aperture of a lens?,SELECT max_aperture FROM camera_lens,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68632,What are the names of tourist attractions with filenames containing 'Paris'? ,SELECT name FROM photos WHERE filename LIKE '%Paris%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68633,How many tourist attractions are there in Italy?,SELECT COUNT(*) FROM photos WHERE other_details LIKE '%Italy%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68635,What is the maximum prominence of a mountain?,SELECT max(prominence) FROM mountain,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68636,What are the countries where mountains have a height greater than 1000m?,SELECT DISTINCT country FROM mountain WHERE height > 1000,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
68638,Which museum with the most staff also has the highest revenue?,"SELECT name, SUM(total_spent) FROM visit JOIN museum ON visit.museum_id = museum.museum_id GROUP BY name ORDER BY SUM(total_spent) DESC LIMIT 1","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
68639,Which museum received the least income?,"SELECT name, SUM(total_spent) FROM visit JOIN museum ON visit.museum_id = museum.museum_id GROUP BY name ORDER BY SUM(total_spent) ASC LIMIT 1","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
68641,Which museum received the most income?,"SELECT name, SUM(total_spent) FROM visit JOIN museum ON visit.museum_id = museum.museum_id GROUP BY name ORDER BY SUM(total_spent) DESC","
CREATE TABLE museum (
	museum_id INTEGER, 
	name TEXT, 
	num_of_staff INTEGER, 
	open_year TEXT
)


CREATE TABLE visit (
	museum_id INTEGER, 
	visitor_id TEXT, 
	num_of_ticket INTEGER, 
	total_spent REAL
)


CREATE TABLE visitor (
	id INTEGER, 
	name TEXT, 
	level_of_membership INTEGER, 
	age INTEGER
)"
68642,What are the names of actors who have played leading roles in more than 3 musicals?,SELECT name FROM actor WHERE musical_id IN (SELECT musical_id FROM actor GROUP BY musical_id HAVING COUNT(*) > 3),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68643,What are the musicals with the highest number of awards?,"SELECT name, COUNT(*) AS award_count FROM musical WHERE award = 'Winner' GROUP BY name ORDER BY award_count DESC","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68644,What are the musicals that have been nominated but did not win an award?,"SELECT name, nominee FROM musical WHERE result = 'No'","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68645,What is the average age of actors who have played leading roles in a musical?,SELECT AVG(age) FROM actor WHERE musical_id IN (SELECT musical_id FROM actor GROUP BY musical_id HAVING COUNT(*) > 2),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68646,What are the actors who have acted in only one musical?,SELECT name FROM actor WHERE musical_id IN (SELECT musical_id FROM actor GROUP BY musical_id HAVING COUNT(*) = 1),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68647,What are the actors who have acted in more than 2 musicals?,SELECT name FROM actor WHERE musical_id IN (SELECT musical_id FROM actor GROUP BY musical_id HAVING COUNT(*) > 2),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68648,What is the most frequent category of musicals?,"SELECT category, COUNT(*) AS frequency FROM musical GROUP BY category ORDER BY frequency DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68649,What are the category that receive the most awards?,"SELECT category, COUNT(*) AS award_count FROM musical WHERE award = 'Winner' GROUP BY category ORDER BY award_count DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68650,What are the top 5 musicals with the highest number of awards?,"SELECT name, COUNT(*) AS award_count FROM musical WHERE award = 'Winner' GROUP BY name ORDER BY award_count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68651,What is the most frequent year for musical releases?,"SELECT year, COUNT(*) AS frequency FROM musical GROUP BY year ORDER BY frequency DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
68652,"What is the average age of all conductors, and which orchestras do they work with?","SELECT AVG(c.age) AS average_age, o.orchestra AS orchestra FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY o.orchestra","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68653,What is the most popular song to perform on stage?,"SELECT p.songid AS song, COUNT(*) AS performance_count FROM performance p GROUP BY p.songid ORDER BY performance_count DESC LIMIT 1","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68654,Can you enumerate the conductors in the orchestra?,SELECT c.name AS conductor FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68655,"Show me the number of shows where the result was positive, and which conductors led the orchestra?","SELECT s.result AS result, c.name AS conductor FROM show s JOIN conductor c ON s.performance_id = c.conductor_id WHERE s.result='positive'","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68656,Can you list the orchestras that were founded in the last 20 years?,"SELECT o.orchestra AS orchestra, o.year_of_founded AS founded_year FROM orchestra o WHERE o.year_of_founded >= 2000","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68657,Which conductor worked with the most orchestras?,"SELECT c.name AS conductor, COUNT(DISTINCT o.orchestra) AS orchestra_count FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.name ORDER BY orchestra_count DESC LIMIT 1","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68658,Can you show all the songs performed by the singer?,"SELECT p.songid AS song, p.stageposition AS position FROM performance p","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68659,What is the average attendance of all shows?,SELECT AVG(s.attendance) AS average_attendance FROM show s,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68660,Can you list all conductors in a specific orchestra?,SELECT c.name AS conductor FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE o.orchestra='SpecificOrchestra',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68661,Who is the oldest conductor in the orchestra?,"SELECT c.name AS conductor, c.age AS age FROM conductor c WHERE c.age=(SELECT MAX(age) FROM conductor)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68662,What is the total number of shows attended?,SELECT SUM(s.attendance) AS total_attendance FROM show s,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68663,Can you show me the number of shows per orchestra?,"SELECT o.orchestra AS orchestra, COUNT(s.show_id) AS show_count FROM orchestra o JOIN show s ON o.conductor_id = s.performance_id GROUP BY o.orchestra","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68664,Show me all the stage positions where the singer performed,SELECT p.stageposition AS position FROM performance p,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68665,Can you show the results of all shows?,SELECT s.result AS result FROM show s,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68666,Can you list all songs performed on stage?,SELECT p.songid AS song FROM performance p,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68668,Show me all the conductors from a specific year?,"SELECT c.name AS conductor, c.year_of_work AS year FROM conductor c WHERE c.year_of_work=(SELECT year_of_work FROM conductor LIMIT 1)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68671,What is the most popular stage position for performances?,"SELECT p.stageposition AS position, COUNT(p.stageposition) AS count FROM performance p GROUP BY p.stageposition ORDER BY count DESC LIMIT 1","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68672,What is the total number of performances?,SELECT COUNT(*) AS total_performances FROM performance p,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68674,Can you show me the result of the first show?,SELECT s.result AS result FROM show s WHERE s.if_first_show='true',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68675,Can you show me the total number of songs performed?,SELECT COUNT(*) AS total_songs FROM performance p,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68676,Can you list all orchestras working with a specific conductor?,SELECT o.orchestra AS orchestra FROM orchestra o JOIN conductor c ON o.conductor_id = c.conductor_id WHERE c.name='SpecificConductor',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68677,Can you show me the results for each orchestra?,"SELECT o.orchestra AS orchestra, s.result AS result FROM orchestra o JOIN show s ON o.conductor_id = s.performance_id","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
68678,What is the nationality of the host with the highest age?,SELECT nationality FROM host WHERE age=(SELECT MAX(age) FROM host);,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68679,Which party held office in the year 2015?,SELECT party FROM party WHERE year=2015;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68680,What is the name of the governor in 2010?,SELECT governor FROM party WHERE year=2010;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68681,Are there any hosts who are not the main in charge in a party?,"SELECT * FROM host, party_host WHERE party_host.is_main_in_charge=false;","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68682,What is the average age of hosts?,SELECT AVG(age::numeric) FROM host;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68683,What is the nationality of the host who is the main in charge in a party?,"SELECT nationality FROM host, party_host WHERE party_host.is_main_in_charge=True;","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68684,Show all parties where the governor and lieutenant governor have the same name,SELECT * FROM party WHERE governor=lieutenant_governor;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68685,What is the name of the comptroller in 2015?,SELECT comptroller FROM party WHERE year=2015;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68686,What is the lowest age of hosts?,SELECT MIN(age) FROM host;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68687,List all hosts who have the same nationality as the host with the highest age,SELECT * FROM host WHERE nationality=(SELECT nationality FROM host WHERE age=(SELECT MAX(age) FROM host));,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68688,What is the highest age of hosts?,SELECT MAX(age) FROM host;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68689,List all parties where the comptroller and governor are from the same nationality,SELECT * FROM party WHERE comptroller=(SELECT governor FROM party WHERE governor=lieutenant_governor);,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68690,What is the name of the comptroller in 2010?,SELECT comptroller FROM party WHERE year=2010;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68691,Can a comptroller be a governor?,SELECT * FROM party WHERE comptroller=lieutenant_governor;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68692,Are there any hosts who are the main in charge in a party?,"SELECT * FROM host, party_host WHERE party_host.is_main_in_charge=True;","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68693,What is the name of the attorney general in 2015?,SELECT attorney_general FROM party WHERE year=2015;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68694,What is the lowest nationality of hosts?,SELECT MIN(nationality) FROM host;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68696,What is the name of the attorney general in 2010?,SELECT attorney_general FROM party WHERE year=2010;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68697,What is the name of the lieutenant governor in 2015?,SELECT lieutenant_governor FROM party WHERE year=2015;,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
68698,What is the average age of members who have attended the most performances?,SELECT AVG(member.age) FROM member LEFT JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member.member_id ORDER BY COUNT(member_attendance.performance_id) DESC LIMIT 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68699,Which band has performed on stage the most?,"SELECT stageposition, COUNT(*) AS total_performances FROM performance GROUP BY stageposition ORDER BY total_performances DESC LIMIT 1","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68703,What is the total number of members who have attended at least one performance?,SELECT COUNT(DISTINCT member_id) FROM member_attendance,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68704,What is the average time of purchase for members who have attended the most performances?,SELECT AVG(member.time_of_purchase) FROM member JOIN member_attendance ON member.member_id = member_attendance.member_id GROUP BY member.member_id ORDER BY COUNT(member_attendance.performance_id) DESC LIMIT 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68705,What is the total number of members who have attended at least one performance by multiple bands?,SELECT COUNT(DISTINCT member_id) FROM member_attendance WHERE performance_id IN (SELECT songid FROM performance WHERE bandmate IS NOT NULL),"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68706,Which member has the highest level of membership and has attended the most performances?,"SELECT * FROM member m JOIN (SELECT member_id, COUNT(*) AS total_performances FROM member_attendance GROUP BY member_id ORDER BY total_performances DESC LIMIT 1) mp ON m.member_id = mp.member_id ORDER BY level_of_membership DESC LIMIT 1","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68707,Which band has performed on stage the least?,"SELECT stageposition, COUNT(*) AS total_performances FROM performance GROUP BY stageposition ORDER BY total_performances ASC LIMIT 1","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68708,What is the average time of purchase for members who have attended at least one performance by multiple bands?,SELECT AVG(m.time_of_purchase) FROM member m JOIN (SELECT DISTINCT member_id FROM member_attendance WHERE performance_id IN (SELECT songid FROM performance WHERE bandmate IS NOT NULL)) ma ON m.member_id = ma.member_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68709,What is the average time of purchase for members who have attended at least one performance by multiple bands?,SELECT AVG(member.time_of_purchase) FROM member JOIN (SELECT DISTINCT member_id FROM member_attendance WHERE performance_id IN (SELECT songid FROM performance WHERE bandmate IS NOT NULL)) ma ON member.member_id = ma.member_id,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
68714,What was the year with the most perpetrators?,"SELECT year, COUNT(*) FROM perpetrator GROUP BY year ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68715,Which country had the highest number of injured?,"SELECT country, COUNT(injured) FROM perpetrator GROUP BY country ORDER BY COUNT(injured) DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68717,How many people were born in the same year and location?,"SELECT people_id, COUNT(*) FROM people GROUP BY people_id HAVING COUNT(*) > 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68719,Which person was involved in the most crimes?,"SELECT people_id, COUNT(*) FROM perpetrator GROUP BY people_id ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68723,What is the average number of people killed in each location?,"SELECT location, AVG(killed) FROM perpetrator GROUP BY location","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68726,Who are the top 3 countries with the highest number of killed?,"SELECT country, COUNT(killed) FROM perpetrator GROUP BY country ORDER BY COUNT(killed) DESC LIMIT 3","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68728,Which location had the highest number of people killed?,"SELECT location, COUNT(killed) FROM perpetrator GROUP BY location ORDER BY COUNT(killed) DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68731,Which country had the highest number of perpetrators worldwide?,"SELECT country, COUNT(*) FROM perpetrator GROUP BY country ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68732,What is the average number of people killed by country and year?,"SELECT country, year, AVG(killed) FROM perpetrator GROUP BY country, year","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68733,Who are the top 3 people with the highest number of crimes?,"SELECT people_id, COUNT(*) FROM perpetrator GROUP BY people_id ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
68735,Who is the oldest pilot?,SELECT name FROM pilot WHERE age = (SELECT MAX(age) FROM pilot),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68737,List all pilots along with their pilot IDs,"SELECT name, pilot_id FROM pilot","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68739,Which pilot has flown the most aircraft?,"SELECT p.name, COUNT(*) AS num_flights FROM pilot_record pr JOIN pilot p ON pr.pilot_id = p.pilot_id GROUP BY p.name ORDER BY num_flights DESC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68742,Which pilot has the most recent flight record?,"SELECT p.name, MAX(pr.date) AS latest_flight_date FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id GROUP BY p.name ORDER BY latest_flight_date DESC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68743,List all records of pilots flying aircraft with maximum gross weight over 5000kg,SELECT * FROM pilot_record WHERE aircraft_id IN (SELECT aircraft_id FROM aircraft WHERE max_gross_weight > '5000kg'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68745,Which aircraft has the highest total disk area?,"SELECT aircraft, total_disk_area FROM aircraft ORDER BY total_disk_area DESC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68746,List all pilots who have flown the aircraft with maximum disk loading,SELECT p.name FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id WHERE pr.aircraft_id IN (SELECT aircraft_id FROM aircraft WHERE max_disk_loading = (SELECT MAX(max_disk_loading) FROM aircraft)),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68748,What is the pilot with the most flights?,"SELECT p.name, COUNT(*) AS num_flights FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id GROUP BY p.name ORDER BY num_flights DESC LIMIT 1","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68749,List all aircraft with disk loading above 500,SELECT * FROM aircraft WHERE max_disk_loading > '500',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68750,What is the total disk area of aircraft with ID 2?,SELECT total_disk_area FROM aircraft WHERE aircraft_id = 2,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68751,Who is the youngest pilot?,SELECT name FROM pilot WHERE age = (SELECT MIN(age) FROM pilot),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68752,List all pilots who have flown the aircraft with maximum gross weight,SELECT p.name FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id WHERE pr.aircraft_id IN (SELECT aircraft_id FROM aircraft WHERE max_gross_weight = (SELECT MAX(max_gross_weight) FROM aircraft)),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68753,What is the average age of pilots who have flown the aircraft with maximum disk loading,SELECT AVG(age) FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id WHERE pr.aircraft_id IN (SELECT aircraft_id FROM aircraft WHERE max_disk_loading = (SELECT MAX(max_disk_loading) FROM aircraft)),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68756,List all records of pilots flying aircraft with total disk area above 200,SELECT * FROM pilot_record WHERE aircraft_id IN (SELECT aircraft_id FROM aircraft WHERE total_disk_area > '200'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
68761,What are the names of the players who have never made it to the final table?,SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.final_table_made IS NULL,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68762,Which players have an average height above 175 cm?,SELECT p.name FROM people p WHERE p.height > 175,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68763,Who is the oldest player born in a non-US city?,SELECT p.name FROM people p WHERE p.birth_place NOT LIKE '%US%' ORDER BY p.birth_date ASC,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68764,What is the average height of the players who have won a WSOP main event?,SELECT AVG(p.height) FROM people p JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.best_finish = 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68765,Who are the top 5 players in order of their final table finishes?,SELECT p.name FROM people p JOIN poker_player pp ON p.people_id = pp.people_id ORDER BY pp.final_table_made DESC LIMIT 5,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68766,What is the average height of the players who have won multiple WSOP main events?,SELECT AVG(p.height) FROM people p JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.best_finish > 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68767,What is the total weight of the players who have made it to the final table?,SELECT SUM(p.weight) FROM people p JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.final_table_made IS NOT NULL,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68768,Who are the top 10 players in order of their money rank?,SELECT p.name FROM people p JOIN poker_player pp ON p.people_id = pp.people_id ORDER BY pp.money_rank DESC LIMIT 10,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68770,Who are the players who have made it to the final table at least twice?,SELECT p.name FROM people p JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.final_table_made >= 2,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68771,Who are the players who have never made it to the money?,SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.money_rank IS NULL,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68772,What is the total weight of the players who have made it to the final table at least twice?,SELECT SUM(p.weight) FROM people p JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.final_table_made >= 2,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68773,Who are the top 5 players in order of their best finish?,SELECT p.name FROM people p JOIN poker_player pp ON p.people_id = pp.people_id ORDER BY pp.best_finish DESC LIMIT 5,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68774,What is the average height of the players who have never made it to the final table?,SELECT AVG(p.height) FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.final_table_made IS NULL,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68775,Who are the top 10 players in order of their earnings?,SELECT p.name FROM people p JOIN poker_player pp ON p.people_id = pp.people_id ORDER BY pp.earnings DESC LIMIT 10,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
68776,"List programs by their origin, sorted by date launched",SELECT * FROM program ORDER BY launch,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68777,How many programs have been broadcast on channel 1?,SELECT COUNT(*) FROM broadcast b WHERE b.channel_id = 1,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68778,What is the average rating of channels owned by 'ABC'?,SELECT AVG(channel.rating_in_percent) FROM channel WHERE channel.owner = 'ABC',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68779,List channels sorted by their rating,SELECT * FROM channel ORDER BY rating_in_percent DESC,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68780,What is the share of programs on channel 3 at 10:00 AM,SELECT * FROM broadcast WHERE channel_id = 3 AND time_of_day = '10:00 AM',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68781,How many channels have not broadcasted a program,SELECT COUNT(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM broadcast),"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68782,List channels sorted by their share,SELECT * FROM channel ORDER BY share_in_percent DESC,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68784,What is the share of programs on channel 1 at 12:00 PM,SELECT * FROM broadcast WHERE channel_id = 1 AND time_of_day = '12:00 PM',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68785,List channels sorted by their name,SELECT * FROM channel ORDER BY name,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68786,How many programs have not been broadcasted,SELECT COUNT(*) FROM program WHERE program_id NOT IN (SELECT program_id FROM broadcast),"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68787,List programs that have been broadcast in the morning,SELECT * FROM broadcast WHERE time_of_day LIKE '% morning',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68788,How many channels have not shared a program,SELECT COUNT(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM broadcast_share),"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68789,List channels sorted by their owner,SELECT * FROM channel ORDER BY owner,"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68790,What is the share of programs on channel 4 at 3:00 PM,SELECT * FROM broadcast WHERE channel_id = 4 AND time_of_day = '15:00',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68791,List programs that have not been broadcasted,SELECT * FROM program WHERE program_id NOT IN (SELECT program_id FROM broadcast),"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68792,How many channels have broadcasted more than one program,SELECT COUNT(*) FROM channel WHERE channel_id IN (SELECT channel_id FROM broadcast GROUP BY channel_id HAVING COUNT(*) > 1),"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68794,What is the share of programs on channel 3 at 9:00 AM,SELECT * FROM broadcast WHERE channel_id = 3 AND time_of_day = '09:00 AM',"
CREATE TABLE broadcast (
	channel_id INTEGER, 
	program_id INTEGER, 
	time_of_day TEXT
)


CREATE TABLE broadcast_share (
	channel_id INTEGER, 
	program_id INTEGER, 
	date TEXT, 
	share_in_percent REAL
)


CREATE TABLE channel (
	channel_id INTEGER, 
	name TEXT, 
	owner TEXT, 
	share_in_percent REAL, 
	rating_in_percent REAL
)


CREATE TABLE program (
	program_id INTEGER, 
	name TEXT, 
	origin TEXT, 
	launch REAL, 
	owner TEXT
)"
68796,What is the average number of gold medals won by clubs?,SELECT AVG(gold) FROM match_result GROUP BY club_id;,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68797,What is the average starting year of players coached by coaches ranked 3rd or higher?,SELECT AVG(s.starting_year) AS avg_starting_year FROM player_coach s JOIN coach c ON s.coach_id = c.coach_id WHERE c.rank >= 3;,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68798,What is the average height of players from countries 'USA' and 'Canada'?,"SELECT AVG(height) AS avg_height FROM player WHERE birth_country IN ('USA', 'Canada');","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68800,What is the top 5 most frequent birth months?,"SELECT birth_month, COUNT(*) AS freq FROM player GROUP BY birth_month ORDER BY freq DESC LIMIT 5;","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68801,What is the average birth year of players from the USA?,SELECT AVG(birth_year) AS avg_birth_year FROM player WHERE birth_country = 'USA';,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68802,Which clubs have the highest average points per match?,"SELECT club_id, AVG(points) AS avg_points_from_match FROM match_result GROUP BY club_id ORDER BY avg_points_from_match DESC;","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68803,What is the earliest death year of a player?,SELECT MIN(death_year) AS earliest_death_year FROM player;,"
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68804,What is the top 5 most frequent birth states?,"SELECT birth_state, COUNT(*) AS freq FROM player GROUP BY birth_state ORDER BY freq DESC LIMIT 5;","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68805,What is the average weight of players from countries 'USA' and 'Canada'?,"SELECT AVG(weight) AS avg_weight FROM player WHERE birth_country IN ('USA', 'Canada');","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68806,Which teams have won the most silver medals in big and small classes?,"SELECT club_id, SUM(big_silver) + SUM(small_silver) AS total_silver FROM match_result GROUP BY club_id ORDER BY total_silver DESC;","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68807,Which teams have won the most bronze medals?,"SELECT club_id, COUNT(*) AS bronze_medalist FROM match_result GROUP BY club_id ORDER BY bronze_medalist DESC;","
CREATE TABLE club (
	clubid INTEGER, 
	clubname TEXT, 
	clubdesc TEXT, 
	clublocation TEXT
)


CREATE TABLE coach (
	coach_id INTEGER, 
	coach_name TEXT, 
	gender TEXT, 
	club_id INTEGER, 
	rank INTEGER
)


CREATE TABLE match_result (
	rank INTEGER, 
	club_id INTEGER, 
	gold INTEGER, 
	big_silver INTEGER, 
	small_silver INTEGER, 
	bronze INTEGER, 
	points INTEGER
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE player_coach (
	player_id INTEGER, 
	coach_id INTEGER, 
	starting_year INTEGER
)"
68810,What is the country where the roller coaster 'Forbidden Journey' is located?,SELECT c.country_name FROM country c JOIN roller_coaster r ON c.country_id = r.country_id WHERE r.name = 'Forbidden Journey';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68811,What is the name of the roller coaster installed in the country where 'Forbidden Journey' is located?,SELECT name FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68812,What is the total length of all roller coasters in the country where 'Forbidden Journey' is located?,SELECT SUM(length) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68813,What is the highest roller coaster in the country where 'Forbidden Journey' is located?,SELECT MAX(height) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68814,What is the longest roller coaster in the country where 'Forbidden Journey' is located?,SELECT MAX(length) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68815,What is the official native language of the country where 'Forbidden Journey' is located?,SELECT official_native_language FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey');,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68816,What is the capital of the country where 'Forbidden Journey' is located?,SELECT capital FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey');,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68817,How many roller coasters are installed in the country where 'Forbidden Journey' is located?,SELECT COUNT(*) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Forbidden Journey'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68818,What is the country where the roller coaster 'Rumor' is located?,SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68819,What is the name of the roller coaster installed in the country where the roller coaster 'Rumor' is located?,SELECT name FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68820,What is the total length of all roller coasters in the country where the roller coaster 'Rumor' is located?,SELECT SUM(length) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68821,What is the highest roller coaster in the country where the roller coaster 'Rumor' is located?,SELECT MAX(height) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68822,What is the longest roller coaster in the country where the roller coaster 'Rumor' is located?,SELECT MAX(length) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68823,What is the official native language of the country where the roller coaster 'Rumor' is located?,SELECT official_native_language FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor');,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68824,What is the capital of the country where the roller coaster 'Rumor' is located?,SELECT capital FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor');,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68825,How many roller coasters are installed in the country where the roller coaster 'Rumor' is located?,SELECT COUNT(*) FROM roller_coaster WHERE country_id = (SELECT country_id FROM country WHERE country_name = (SELECT country_name FROM country JOIN roller_coaster ON country.country_id = roller_coaster.country_id WHERE name = 'Rumor'));,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
68826,What are the names of drivers who work full-time and have worked for a school bus for more than 5 years?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND years_working > 5 AND if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68827,What is the average age of full-time drivers who have worked for a school bus for more than 5 years?,SELECT avg(age) FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND years_working > 5 AND if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68828,What are the names of drivers who work part-time and have worked for a school bus for more than 5 years?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND years_working > 5 AND NOT if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68829,What is the total number of full-time drivers who have worked for a school bus for more than 5 years?,SELECT COUNT(*) FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND years_working > 5 AND if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68830,What are the ages of drivers who work part-time?,SELECT age FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68831,What are the names of drivers who work full-time and are older than 40?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 40,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68832,What are the names of drivers who work full-time and are older than 50?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 50,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68833,What is the total number of drivers who work part-time?,SELECT COUNT(*) FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68834,What are the names of drivers who work part-time and are younger than 30?,SELECT name FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age < 30,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68835,What are the names of drivers who work full-time and are younger than 40?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age < 40,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68836,What are the names of drivers who work part-time and are older than 35?,SELECT name FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 35,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68837,What are the ages of drivers who work full-time?,SELECT age FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time),"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68839,What are the names of drivers who work part-time and are older than 55?,SELECT name FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 55,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68840,What are the names of drivers who work part-time and are younger than 25?,SELECT name FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age < 25,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68841,What are the names of drivers who work full-time and are older than 60?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 60,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68842,What are the names of drivers who work part-time and are younger than 20?,SELECT name FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age < 20,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68843,What are the names of drivers who work full-time and are younger than 30?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age < 30,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68844,What are the names of drivers who work part-time and are older than 40?,SELECT name FROM driver WHERE NOT exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 40,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68845,What are the names of drives who work full-time and are older than 55?,SELECT name FROM driver WHERE exists (SELECT 1 FROM school_bus WHERE school_bus.driver_id = driver.driver_id AND if_full_time) AND age > 55,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
68846,What is the list of players born in California?,SELECT * FROM player WHERE birth_state = 'California';,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68847,Which players have a birth year greater than 1980?,SELECT * FROM player WHERE birth_year > 1980;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68848,What is the count of players with a height greater than 6 feet?,SELECT COUNT(*) FROM player WHERE height > 72;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68849,What is the list of players with a debut year less than 1900?,SELECT * FROM player WHERE debut < '1900-01-01';,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68850,What is the range of birth years of players in California?,"SELECT MIN(birth_year) AS min_year, MAX(birth_year) AS max_year FROM player WHERE birth_state = 'California';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68851,What are the schools that have a specific type?,"SELECT school, type FROM school WHERE type = 'High';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68853,What is the range of death years of players born in California?,"SELECT MIN(death_year) AS min_year, MAX(death_year) AS max_year FROM player WHERE birth_state = 'California';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68854,What are the players with a debut year greater than 1950?,SELECT * FROM player WHERE debut > '1950-01-01';,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68855,What is the count of players with a birth country different from their birth state?,SELECT COUNT(*) FROM player WHERE birth_country != birth_state;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68856,What are the schools in a specific location?,SELECT school FROM school WHERE location = 'New York';,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68857,What are the players with a death year less than 1900?,SELECT * FROM player WHERE death_year < 1900;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68858,What is the count of players born on a specific day?,SELECT COUNT(*) FROM player WHERE birth_day = 12;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68859,What are the schools with a specific type and location?,"SELECT school, type FROM school WHERE type = 'High' AND location = 'Los Angeles';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68860,What is the range of heights of players?,"SELECT MIN(height) AS min_height, MAX(height) AS max_height FROM player;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68861,What are the players born in California with a birth year greater than 1960?,SELECT * FROM player WHERE birth_state = 'California' AND birth_year > 1960;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68862,What are the players with a specific batting style?,"SELECT name_first, name_last FROM player WHERE bats = 'Left';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68863,What is the count of players with a specific debut year?,SELECT COUNT(*) FROM player WHERE debut = '1955-04-15';,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68864,What are the players born in California with a birth year less than 1950?,SELECT * FROM player WHERE birth_state = 'California' AND birth_year < 1950;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68865,What are the schools that have a specific type and are located in a specific location?,"SELECT school, type, location FROM school WHERE type = 'High' AND location = 'New York';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
68868,What is the average speed of ships that were not lost in battle?,SELECT AVG(speed_knots) FROM mission WHERE fate != 'lost in battle',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68869,What is the total number of missions that were successful?,SELECT COUNT(*) FROM mission WHERE fate = 'successful',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68870,What is the total number of missions that were unsuccessful?,SELECT COUNT(*) FROM mission WHERE fate = 'unsuccessful',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68871,What is the name of the ship with the lowest tonnage?,"SELECT name, tonnage FROM ship ORDER BY tonnage ASC LIMIT 1","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68872,What is the total number of missions that were lost in battle?,SELECT COUNT(*) FROM mission WHERE fate = 'lost in battle',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68873,What is the average speed of ships with a certain location?,SELECT AVG(speed_knots) FROM mission WHERE location = 'atlantic',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68874,What is the total number of missions that were successful and had a certain speed?,SELECT COUNT(*) FROM mission WHERE fate = 'successful' AND speed_knots > 20,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68875,What is the total number of missions that were lost in battle and had a certain speed?,SELECT COUNT(*) FROM mission WHERE fate = 'lost in battle' AND speed_knots > 10,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68877,What is the total number of ships with a certain location?,SELECT COUNT(*) FROM ship WHERE location = 'mediterranean',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68878,What is the name of the ship with the highest tonnage in a certain location?,"SELECT name, tonnage FROM ship WHERE location = 'atlantic' ORDER BY tonnage DESC LIMIT 1","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68879,What is the total number of missions that were unsuccessful and had a certain speed?,SELECT COUNT(*) FROM mission WHERE fate = 'unsuccessful' AND speed_knots < 15,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68880,What is the average speed of ships with a certain location?,SELECT AVG(speed_knots) FROM mission WHERE location = 'pacific',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68882,What is the name of the ship with the lowest tonnage in a certain location?,"SELECT name, tonnage FROM ship WHERE location = 'atlantic' ORDER BY tonnage ASC LIMIT 1","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68883,What is the average speed of ships that were successful?,SELECT AVG(speed_knots) FROM mission WHERE fate = 'successful',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68884,What is the average speed of ships that were unsuccessful?,SELECT AVG(speed_knots) FROM mission WHERE fate = 'unsuccessful',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
68886,What is the total amount spent by a member in a specific branch during a particular year?,"SELECT m.name, SUM(p.total_pounds) AS total_sped FROM member m JOIN purchase p ON m.member_id = p.member_id WHERE p.branch_id = 'Branch ABC' AND p.year = '2019' GROUP BY m.name","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
68887,What is the name of the member who has purchased the most in a specific branch over a particular year?,"SELECT m.name, SUM(p.total_pounds) AS total_spent FROM member m JOIN purchase p ON m.member_id = p.member_id WHERE p.branch_id = 'Branch ABC' AND p.year = '2020' GROUP BY m.name ORDER BY total_spent DESC LIMIT 1","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
68888,What is the level of membership for each member in each branch?,"SELECT m.name, m.level_of_membership FROM member m JOIN membership_register_branch mrb ON m.member_id = mrb.member_id","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
68889,What is the name of the member who has purchased the most in each branch during a specific year?,"SELECT m.name, SUM(p.total_pounds) AS total_spent FROM member m JOIN purchase p ON m.member_id = p.member_id WHERE p.year = '2020' GROUP BY m.name ORDER BY total_spent DESC","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
68890,What is the age of the member who has purchased something in each branch?,"SELECT m.name, m.age AS age FROM member m JOIN membership_register_branch mrb ON m.member_id = mrb.member_id WHERE mrb.register_year = '2020'","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
68892,What is the time of purchase for each member in each branch?,"SELECT m.name, m.time_of_purchase AS time_of_purchase FROM member m JOIN membership_register_branch mrb ON m.member_id = mrb.member_id WHERE mrb.register_year = '2020'","
CREATE TABLE branch (
	branch_id INTEGER, 
	name TEXT, 
	open_year TEXT, 
	address_road TEXT, 
	city TEXT, 
	membership_amount TEXT
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE membership_register_branch (
	member_id INTEGER, 
	branch_id TEXT, 
	register_year TEXT
)


CREATE TABLE purchase (
	member_id INTEGER, 
	branch_id TEXT, 
	year TEXT, 
	total_pounds REAL
)"
68894,What are the employees working in the 'Sales' role?,SELECT e.employee_name FROM employees e WHERE e.role_code = 'Sales',"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68895,List all artists whose name starts with 'A' and have at least one track in the 'Rock' genre,SELECT a.name FROM artists a JOIN tracks t ON a.id = t.album_id WHERE t.genre_id IN (SELECT id FROM genres WHERE name = 'Rock') AND a.name LIKE 'A%',"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68896,What are the tracks with the longest length?,"SELECT t.name, t.milliseconds FROM tracks t ORDER BY t.milliseconds DESC LIMIT 10","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68897,What are the invoices made with credit cards?,SELECT i.invoice_id FROM invoices i WHERE i.payment_method_code = 'CreditCard',"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68898,What are the playlists containing tracks from the 'Rock' genre?,SELECT p.name FROM playlists p JOIN playlist_tracks pt ON p.id = pt.playlist_id JOIN tracks t ON pt.track_id = t.id WHERE t.genre_id IN (SELECT id FROM genres WHERE name = 'Rock'),"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68899,What are the tracks from the 'Pop' genre with length over 4 minutes?,"SELECT t.name, t.milliseconds FROM tracks t WHERE t.genre_id IN (SELECT id FROM genres WHERE name = 'Pop') AND t.milliseconds > 240000","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68900,What are the tracks from the 'Pop' genre with unit price over $1.50?,"SELECT t.name, t.unit_price FROM tracks t WHERE t.genre_id IN (SELECT id FROM genres WHERE name = 'Pop') AND t.unit_price > 1.5","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68901,What are the tracks with the same name?,SELECT t.name FROM tracks t GROUP BY t.name HAVING COUNT(t.name) > 1,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68902,What are the tracks from the 'Rock' genre with a unit price over 1.00?,"SELECT t.name, t.unit_price FROM tracks t WHERE t.genre_id IN (SELECT id FROM genres WHERE name = 'Rock') AND t.unit_price > 1","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
68903,Retrieve the list of teachers with the same middle name as the teacher with the ID 1,SELECT * FROM teachers WHERE middle_name = (SELECT middle_name FROM teachers WHERE teacher_id = 1),"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
68904,"What are the names and grades of students in the same classroom as student 123, sorted by grade","SELECT list.lastname, list.firstname, list.grade FROM list WHERE list.classroom = (SELECT classroom FROM list WHERE lastname = 'Student-123') ORDER BY list.grade","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
68905,Get all female teachers with a phone number containing the digit 7,SELECT * FROM teachers WHERE gender = 'Female' AND cell_mobile_number LIKE '%7%',"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
68906,"List the names and grades of students in the classroom with the ID 2, sorted by grade","SELECT list.lastname, list.firstname, list.grade FROM list WHERE list.classroom = 2 ORDER BY list.grade","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
68907,"What are the teachers' details where the teacher ID is 1, and the address ID is 101?",SELECT * FROM teachers WHERE teacher_id = 1 AND address_id = 101,"
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
68908,"List the names and grades of students in the same classroom as teacher 1, sorted by grade","SELECT list.lastname, list.firstname, list.grade FROM list WHERE list.classroom = (SELECT classroom FROM teachers WHERE teacher_id = 1) ORDER BY list.grade","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
68909,"What are the teachers' email addresses, sorted by last name","SELECT last_name, email_address FROM teachers ORDER BY last_name","
CREATE TABLE list (
	lastname TEXT, 
	firstname TEXT, 
	grade INTEGER, 
	classroom INTEGER
)


CREATE TABLE teachers (
	teacher_id INTEGER, 
	address_id INTEGER, 
	first_name TEXT, 
	middle_name TEXT, 
	last_name TEXT, 
	gender TEXT, 
	cell_mobile_number TEXT, 
	email_address TEXT, 
	other_details TEXT
)"
