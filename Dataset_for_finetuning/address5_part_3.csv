Unnamed: 0,question,query,schema
65575,What is the most reviewed item?,SELECT * FROM item WHERE i_id IN (SELECT i_id FROM review GROUP BY i_id ORDER BY COUNT(*) DESC LIMIT 1),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65576,What are the top 5 users with the most reviews?,SELECT * FROM useracct WHERE u_id IN (SELECT u_id FROM review GROUP BY u_id ORDER BY COUNT(*) DESC LIMIT 5),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65578,What is the sum of all ratings?,SELECT SUM(rating) FROM review,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65579,What are the top 3 most trustworthy users?,SELECT * FROM useracct WHERE u_id IN (SELECT target_u_id FROM trust GROUP BY target_u_id ORDER BY AVG(trust) DESC LIMIT 3),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65580,For which items do we have the most reviews?,SELECT * FROM item WHERE i_id IN (SELECT i_id FROM review GROUP BY i_id ORDER BY COUNT(*) DESC),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65581,What are the top 5 items with the highest average rating?,SELECT * FROM item WHERE i_id IN (SELECT i_id FROM review GROUP BY i_id ORDER BY AVG(rating) DESC LIMIT 5),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65582,What are the top 3 most reviewed users?,SELECT * FROM useracct WHERE u_id IN (SELECT u_id FROM review GROUP BY u_id ORDER BY COUNT(*) DESC LIMIT 3),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65583,What is the total number of reviews with a rating above 4?,SELECT COUNT(*) FROM review WHERE rating > 4,"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65584,What are the top 5 trusted users?,SELECT * FROM useracct WHERE u_id IN (SELECT target_u_id FROM trust ORDER BY trust DESC LIMIT 5),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65587,What are the top 3 most reviewed items?,SELECT * FROM item WHERE i_id IN (SELECT i_id FROM review GROUP BY i_id ORDER BY COUNT(*) DESC LIMIT 3),"
CREATE TABLE item (
	i_id INTEGER, 
	title TEXT
)


CREATE TABLE review (
	a_id INTEGER, 
	u_id INTEGER, 
	i_id INTEGER, 
	rating INTEGER, 
	rank INTEGER
)


CREATE TABLE trust (
	source_u_id INTEGER, 
	target_u_id INTEGER, 
	trust INTEGER
)


CREATE TABLE useracct (
	u_id INTEGER, 
	name TEXT
)"
65590,What is the average farm size?,SELECT AVG(total_horses+total_cattle+pigs+sheep_and_goats) AS avg_farm_size FROM farm,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65591,What is the total number of farms by year?,"SELECT year, COUNT(*) AS total_farms FROM farm GROUP BY year","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65592,What is the number of competition records by theme?,"SELECT theme, COUNT(*) AS total_competitions FROM farm_competition GROUP BY theme","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65593,What are the top 3 cities hosting competitions?,"SELECT hosts, COUNT(*) AS total_hosting FROM farm_competition GROUP BY hosts ORDER BY total_hosting DESC LIMIT 3","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65594,What is the total number of farms by farm type?,"SELECT total_horses+total_cattle+pigs+sheep_and_goats AS farm_type, COUNT(*) AS total_farms FROM farm GROUP BY farm_type","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65595,What is the average farm size by year?,"SELECT year, AVG(total_horses+total_cattle+pigs+sheep_and_goats) AS avg_farm_size FROM farm GROUP BY year","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65596,What city has the highest regional population?,"SELECT city, regional_population FROM city WHERE regional_population = (SELECT MAX(regional_population) FROM city)","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65597,What is the total number of farm animals?,SELECT COUNT(*) AS total_farm_animals FROM farm,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65598,What is the number of competition records by host city?,"SELECT hosts, COUNT(*) AS total_records FROM farm_competition GROUP BY hosts","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65599,What is the total number of farms by theme and year?,"SELECT theme, year, COUNT(*) AS total_farms FROM farm_competition GROUP BY theme, year","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65600,What is the number of competition records by host city and theme?,"SELECT hosts, theme, COUNT(*) AS total_records FROM farm_competition GROUP BY hosts, theme","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65601,What is the total number of farms by animal type and size?,"SELECT total_horses, COUNT(*) AS total_farms FROM farm GROUP BY total_horses","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65602,What is the total number of competition records by host city and year?,"SELECT hosts, year, COUNT(*) AS total_records FROM farm_competition GROUP BY hosts, year","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE competition_record (
	competition_id INTEGER, 
	farm_id INTEGER, 
	rank INTEGER
)


CREATE TABLE farm (
	farm_id INTEGER, 
	year INTEGER, 
	total_horses REAL, 
	working_horses REAL, 
	total_cattle REAL, 
	oxen REAL, 
	bulls REAL, 
	cows REAL, 
	pigs REAL, 
	sheep_and_goats REAL
)


CREATE TABLE farm_competition (
	competition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	host_city_id INTEGER, 
	hosts TEXT
)"
65605,What is the max gross weight of aircraft with id 1?,SELECT max_gross_weight FROM aircraft WHERE aircraft_id = 1;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65606,What are the total disk area and max disk loading of aircraft with id 1?,"SELECT total_disk_area, max_disk_loading FROM aircraft WHERE aircraft_id = 1;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65608,Who are the top 5 oldest employees?,SELECT * FROM employee ORDER BY birthdate LIMIT 5;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65610,What is the total price of all flights from origin and destination?,SELECT SUM(price) FROM flight;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65611,What are the top 5 longest flights?,"SELECT *, DEparture_date, arrival_date FROM flight ORDER BY distance DESC LIMIT 5;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65612,What are the top 5 shortest flights?,"SELECT *, DEparture_date, arrival_date FROM flight ORDER BY distance ASC LIMIT 5;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65614,What are the total number of flights from origin and destination in the year 2020?,SELECT COUNT(*) FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2020;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65615,What are the flights from origin and destination in the month of December?,SELECT * FROM flight WHERE EXTRACT(MONTH FROM departure_date) = 12;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65616,What are the flights from origin and destination in the year 2020 and month of December?,SELECT * FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2020 AND EXTRACT(MONTH FROM departure_date) = 12;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65617,What are the top 5 airlines with the most flights?,"SELECT COUNT(aid) AS count, aid FROM flight GROUP BY aid ORDER BY count DESC LIMIT 5;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65618,What are the top 5 airlines with the least flights?,"SELECT COUNT(aid) AS count, aid FROM flight GROUP BY aid ORDER BY count ASC LIMIT 5;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65619,What are the total number of flight from each airline?,"SELECT COUNT(aid) AS count, aid FROM flight GROUP BY aid;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65620,What are the total number of flight from each airline in the year 2020?,"SELECT COUNT(aid) AS count, aid FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2020 GROUP BY aid;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65621,What are the flights from origin and destination in the year 2020 and month of January?,SELECT * FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2020 AND EXTRACT(MONTH FROM departure_date) = 1;,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65623,What are the total number of aircraft leased by each airline?,"SELECT COUNT(*) AS count, aid FROM flight GROUP BY aid;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65624,What are the total number of aircraft leased by each airline in the year 2020?,"SELECT COUNT(*) AS count, aid FROM flight WHERE EXTRACT(YEAR FROM departure_date) = 2020 GROUP BY aid;","
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE certificate (
	eid INTEGER, 
	aid INTEGER
)


CREATE TABLE employee (
	employeeid INTEGER, 
	lastname TEXT, 
	firstname TEXT, 
	title TEXT, 
	reportsto INTEGER, 
	birthdate TIMESTAMP WITHOUT TIME ZONE, 
	hiredate TIMESTAMP WITHOUT TIME ZONE, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)"
65626,What is the country with the most airports?,"SELECT country, COUNT(airportname) AS total_airports FROM airports GROUP BY country ORDER BY total_airports DESC LIMIT 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65627,What is the list of flights departing from 'London'?,SELECT * FROM flights WHERE sourceairport='LON',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65628,What is the list of airports in a specific country?,"SELECT airportname, city FROM airports WHERE country='UK'","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65629,What is the list of flights returning to 'New York'?,SELECT * FROM flights WHERE destairport='JFK' AND airline=1,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65630,What is the list of cities with airports?,SELECT DISTINCT city FROM airports,"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65632,What is the list of flights from 'Paris' to 'London'?,SELECT * FROM flights WHERE sourceairport='CDG' AND destairport='LHR',"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65633,What is the list of airports with three-letter codes?,"SELECT airportname, airportcode FROM airports WHERE LENGTH(airportcode) = 3","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65634,What is the list of cities with multiple airports?,"SELECT city, COUNT(DISTINCT airportname) AS num_airports FROM airports GROUP BY city HAVING COUNT(DISTINCT airportname) > 1","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65635,What is the list of flights having a layover?,SELECT * FROM flights WHERE (sourceairport != destairport OR destairport != sourceairport),"
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65636,What are the top 3 countries with the most airports?,"SELECT country, COUNT(airportname) AS total_airports FROM airports GROUP BY country ORDER BY total_airports DESC LIMIT 3","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65637,What is the list of airlines having more than 10 flights?,"SELECT airline, COUNT(flightno) AS num_flights FROM flights GROUP BY airline HAVING COUNT(flightno) > 10","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65639,What is the top 3 cities with the most airports?,"SELECT city, COUNT(airportname) AS total_airports FROM airports GROUP BY city ORDER BY total_airports DESC LIMIT 3","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65640,What is the list of airlines having more than 5 flights?,"SELECT airline, COUNT(flightno) AS num_flights FROM flights GROUP BY airline HAVING COUNT(flightno) > 5","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65641,What is the top 3 destinations with the most flights?,"SELECT destairport, COUNT(*) AS num_flights FROM flights GROUP BY destairport ORDER BY num_flights DESC LIMIT 3","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65642,What is the list of cities with the most airports in Asia?,"SELECT city, COUNT(airportname) AS total_airports FROM airports WHERE country='Asia' GROUP BY city ORDER BY total_airports DESC","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65643,What are the top 3 airlines with the most destinations?,"SELECT airline, COUNT(DISTINCT destairport) AS num_destinations FROM flights GROUP BY airline ORDER BY num_destinations DESC LIMIT 3","
CREATE TABLE airlines (
	uid INTEGER, 
	airline TEXT, 
	abbreviation TEXT, 
	country TEXT
)


CREATE TABLE airports (
	city TEXT, 
	airportcode TEXT, 
	airportname TEXT, 
	country TEXT, 
	countryabbrev TEXT
)


CREATE TABLE flights (
	airline INTEGER, 
	flightno INTEGER, 
	sourceairport TEXT, 
	destairport TEXT
)"
65644,What are the top 5 busiest airports in terms of total passengers in 2007?,SELECT * FROM airport WHERE __change_2007 = '2007' ORDER BY total_passengers DESC LIMIT 5,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65645,Which airline operates the most flights per day?,SELECT COUNT(*) FROM flight GROUP BY aid ORDER BY COUNT(*) DESC LIMIT 1,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65646,What are the top 3 busiest routes in terms of distance?,"SELECT origin, destination, AVG(distance) AS avg_distance FROM flight GROUP BY origin, destination ORDER BY avg_distance DESC LIMIT 3","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65647,What are the top 5 busiest airports in terms of transit passengers in 2007?,SELECT * FROM airport WHERE __change_2007 = '2007' AND transit_passengers > 0 ORDER BY transit_passengers DESC LIMIT 5,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65648,What is the average distance of flights departing from airport 'LAX'?,SELECT AVG(distance) AS avg_distance FROM flight WHERE origin = 'LAX',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65649,What are the top 3 airlines operating in the USA?,SELECT COUNT(*) FROM flight WHERE aid IN (SELECT aid FROM operate_company WHERE type = 'US airline') GROUP BY aid ORDER BY COUNT(*) DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65650,What are the top 5 busiest routes by airline in terms of flights per day?,"SELECT origin, destination, COUNT(*) AS daily_flights FROM flight GROUP BY origin, destination, aid ORDER BY daily_flights DESC LIMIT 5","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65651,What is the average price of flights departing from airport 'LAX'?,SELECT AVG(price) AS avg_price FROM flight WHERE origin = 'LAX',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65652,What are the top 5 busiest routes by duration?,"SELECT origin, destination, AVG(distance) AS avg_distance FROM flight GROUP BY origin, destination ORDER BY avg_distance DESC LIMIT 5","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65653,What are the busiest routes departing from airport 'JFK' and destination 'LHR'?,SELECT COUNT(*) FROM flight WHERE origin = 'JFK' AND destination = 'LHR',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65654,What are the top 5 busiest airports in terms of freight tonnage in 2007?,SELECT * FROM airport WHERE __change_2007 = '2007' AND freight_metric_tonnes > 0 ORDER BY freight_metric_tonnes DESC LIMIT 5,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65655,What is the average distance of flights arriving at airport 'LHR'?,SELECT AVG(distance) AS avg_distance FROM flight WHERE destination = 'LHR',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65656,What are the top 3 busiest airlines operating in Europe?,SELECT COUNT(*) FROM flight WHERE aid IN (SELECT aid FROM operate_company WHERE type = 'European airline') GROUP BY aid ORDER BY COUNT(*) DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65658,What is the total number of flights in 2007?,SELECT COUNT(*) FROM flight WHERE departure_date >= '2007-01-01' AND arrival_date <= '2007-12-31',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65659,What are the top 5 busiest airports in terms of aircraft movements in 2007?,SELECT * FROM airport WHERE __change_2007 = '2007' AND aircraft_movements > 0 ORDER BY aircraft_movements DESC LIMIT 5,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65660,What is the average price of flights departing from airport 'NYC'?,SELECT AVG(price) AS avg_price FROM flight WHERE origin = 'NYC',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65661,What are the top 5 busiest airlines operating in Asia?,SELECT COUNT(*) FROM flight WHERE aid IN (SELECT aid FROM operate_company WHERE type = 'Asian airline') GROUP BY aid ORDER BY COUNT(*) DESC LIMIT 5,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65662,What are the top 5 busiest routes in terms of price?,"SELECT origin, destination, AVG(price) AS avg_price FROM flight GROUP BY origin, destination ORDER BY avg_price DESC LIMIT 5","
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65663,What is the total number of flights departing from airport 'JFK'?,SELECT COUNT(*) FROM flight WHERE origin = 'JFK',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65664,What are the busiest routes departing from airport 'LHR'?,SELECT COUNT(*) FROM flight WHERE origin = 'LHR',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65665,What are the top 3 busiest airlines operating in South America?,SELECT COUNT(*) FROM flight WHERE aid IN (SELECT aid FROM operate_company WHERE type = 'South American airline') GROUP BY aid ORDER BY COUNT(*) DESC LIMIT 3,"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65666,What is the average distance of flights departing from airport 'CDG'?,SELECT AVG(distance) AS avg_distance FROM flight WHERE origin = 'CDG',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65669,What are the busiest routes departing from airport 'LEJ' and destination 'CDG'?,SELECT COUNT(*) FROM flight WHERE origin = 'LEJ' AND destination = 'CDG',"
CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE flight (
	flno INTEGER, 
	origin TEXT, 
	destination TEXT, 
	distance INTEGER, 
	departure_date TIMESTAMP WITHOUT TIME ZONE, 
	arrival_date TIMESTAMP WITHOUT TIME ZONE, 
	price INTEGER, 
	aid INTEGER
)


CREATE TABLE operate_company (
	id INTEGER, 
	name TEXT, 
	type TEXT, 
	principal_activities TEXT, 
	incorporated_in TEXT, 
	group_equity_shareholding REAL
)"
65670,What are the top 5 stadiums (by capacity) in the highest recorded attendance?,SELECT * FROM stadium ORDER BY capacity DESC LIMIT 5,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65671,How many games were played in 2015?,SELECT COUNT(*) FROM game WHERE season = 2015,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65672,What is the average attendance per game in 2016?,"SELECT AVG(capacity) FROM stadium, game WHERE stadium.stadium_id = game.stadium_id AND season = 2016 GROUP BY game.stadium_id","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65674,How many matches were played between home and away teams?,SELECT COUNT(*) FROM game WHERE home_team != away_team,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65675,What is the lowest attendance recorded in 2014?,"SELECT MIN(capacity) FROM stadium, game WHERE stadium.stadium_id = game.stadium_id AND season = 2014","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65676,What is the average attendance per match at a certain stadium?,"SELECT AVG(capacity) FROM stadium, game WHERE stadium.stadium_id = game.stadium_id GROUP BY game.stadium_id","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65677,How many games ended in a draw?,SELECT COUNT(*) FROM game WHERE score = 'draw',"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65678,What is the highest recorded attendance in the competition?,"SELECT MAX(capacity) FROM stadium, game WHERE stadium.stadium_id = game.stadium_id AND competition = 'competition'","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65679,What are the highest and lowest scores in a game?,"SELECT MAX(score), MIN(score) FROM game","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65680,What is the most common source of injury data?,"SELECT source, COUNT(*) AS frequency FROM injury_accident GROUP BY source ORDER BY frequency DESC LIMIT 1","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65681,What are the top 5 stadiums (by highest attendance) in a specific competition?,"SELECT * FROM stadium, game WHERE stadium.stadium_id = game.stadium_id AND competition = 'competition' ORDER BY highest DESC LIMIT 5","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65682,What are the top 5 tables (by matches won) in the competition?,"SELECT * FROM game, stadium WHERE stadium.stadium_id = game.stadium_id AND competition = 'competition' ORDER BY score DESC LIMIT 5","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65684,How many matches were played between same teams?,SELECT COUNT(*) FROM game WHERE home_team = away_team,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65686,What is the most common player injured?,"SELECT player, COUNT(*) AS frequency FROM injury_accident GROUP BY player ORDER BY frequency DESC LIMIT 1","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65688,What is the highest average attendance per game?,SELECT MAX(average) FROM stadium,"
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65689,What is the most common competition?,"SELECT competition, COUNT(*) AS frequency FROM game GROUP BY competition ORDER BY frequency DESC LIMIT 1","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65690,What is the lowest attendance recorded at a specific stadium?,"SELECT MIN(capacity) FROM stadium, game WHERE stadium.stadium_id = game.stadium_id","
CREATE TABLE game (
	stadium_id INTEGER, 
	id INTEGER, 
	season INTEGER, 
	date TEXT, 
	home_team TEXT, 
	away_team TEXT, 
	score TEXT, 
	competition TEXT
)


CREATE TABLE injury_accident (
	game_id INTEGER, 
	id INTEGER, 
	player TEXT, 
	injury TEXT, 
	number_of_matches TEXT, 
	source TEXT
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)"
65691,What is the total sales in billions for each company?,"SELECT company.name, SUM(company.sales_in_billion) AS total_sales FROM company GROUP BY company.name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65692,What is the name of the company with the highest sales?,SELECT company.name FROM company WHERE company.sales_in_billion = (SELECT MAX(sales_in_billion) FROM company),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65693,What is the total number of stations for each company?,"SELECT company.name, COUNT(station_company.station_id) AS total_stations FROM station_company JOIN company ON station_company.company_id = company.company_id GROUP BY company.name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65694,What is the year of the oldest gas station?,SELECT MAX(gas_station.open_year) AS oldest_year FROM gas_station,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65695,What is the name of the manager of the gas station located at 'New York'?,SELECT manager_name FROM gas_station WHERE location = 'New York',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65696,What are the companies with more than 5 stations?,SELECT company.name FROM station_company JOIN company ON station_company.company_id = company.company_id GROUP BY company.name HAVING COUNT(station_company.station_id) > 5,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65698,What is the name of the company with the highest profits?,SELECT company.name FROM company WHERE company.profits_in_billion = (SELECT MAX(profits_in_billion) FROM company),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65699,What is the total market value in billions for each company?,"SELECT company.name, SUM(company.market_value_in_billion) AS total_market_value FROM company GROUP BY company.name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65700,What is the name of the company with the highest market value?,SELECT company.name FROM company WHERE company.market_value_in_billion = (SELECT MAX(market_value_in_billion) FROM company),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65702,What is the average number of stations for all companies?,"SELECT AVG(total_stations) AS average_stations FROM (SELECT company.name, COUNT(station_company.station_id) AS total_stations FROM station_company JOIN company ON station_company.company_id = company.company_id GROUP BY company.name) AS subquery","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65703,What is the total profits in billions for each company?,"SELECT company.name, SUM(company.profits_in_billion) AS total_profits FROM company GROUP BY company.name","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65704,What is the year of the station that opened last year?,SELECT MAX(open_year) AS latest_year FROM gas_station WHERE open_year = (SELECT MAX(open_year) FROM gas_station),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65705,What are the companies with more than 3 stations in the industry of 'Finance'?,SELECT company.name FROM station_company JOIN company ON station_company.company_id = company.company_id WHERE company.industry = 'Finance' GROUP BY company.name HAVING COUNT(station_company.station_id) > 3,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65706,What is the name of the company with the highest sales in the industry of 'Technology'?,SELECT company.name FROM company WHERE company.sales_in_billion = (SELECT MAX(sales_in_billion) FROM company WHERE company.industry = 'Technology'),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65707,What is the total number of stations for each industry?,"SELECT industry, COUNT(station_company.station_id) AS total_stations FROM station_company JOIN company ON station_company.company_id = company.company_id GROUP BY company.industry","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65708,What is the number of companies in the industry of 'Energy'?,SELECT COUNT(company.name) AS number_of_companies FROM company WHERE company.industry = 'Energy',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65709,What is the average number of stations for the companies in the industry of 'Finance'?,"SELECT AVG(total_stations) AS average_stations FROM (SELECT company.name, COUNT(station_company.station_id) AS total_stations FROM station_company JOIN company ON station_company.company_id = company.company_id WHERE company.industry = 'Finance' GROUP BY company.name) AS subquery","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65710,What is the name of the company with the highest profits in the industry of 'Technology'?,SELECT company.name FROM company WHERE company.profits_in_billion = (SELECT MAX(profits_in_billion) FROM company WHERE company.industry = 'Technology'),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65711,What is the total market value in billions for each industry?,"SELECT industry, SUM(company.market_value_in_billion) AS total_market_value FROM company WHERE company.industry IS NOT NULL GROUP BY company.industry","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65712,What are the companies with more than 2 stations in the industry of 'Retail'?,SELECT company.name FROM station_company JOIN company ON station_company.company_id = company.company_id WHERE company.industry = 'Retail' GROUP BY company.name HAVING COUNT(station_company.station_id) > 2,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65714,What is the total sales in billions for each industry?,"SELECT industry, SUM(company.sales_in_billion) AS total_sales FROM company WHERE company.industry IS NOT NULL GROUP BY company.industry","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65715,What is the name of the company with the highest market value in the industry of 'Finance'?,SELECT company.name FROM company WHERE company.market_value_in_billion = (SELECT MAX(market_value_in_billion) FROM company WHERE company.industry = 'Finance'),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65716,What is the total number of stations for each location?,"SELECT location, COUNT(station_id) AS total_stations FROM gas_station GROUP BY location","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65717,What is the number of companies in the industry of 'Education'?,SELECT COUNT(company.name) AS number_of_companies FROM company WHERE company.industry = 'Education',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65718,What is the average number of stations for the companies in the industry of 'Retail'?,"SELECT AVG(total_stations) AS average_stations FROM (SELECT company.name, COUNT(station_company.station_id) AS total_stations FROM station_company JOIN company ON station_company.company_id = company.company_id WHERE company.industry = 'Retail' GROUP BY company.name) AS subquery","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65719,What is the name of the company with the highest profits in the industry of 'Energy'?,SELECT company.name FROM company WHERE company.profits_in_billion = (SELECT MAX(profits_in_billion) FROM company WHERE company.industry = 'Energy'),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65720,What is the total profits in billions for each industry?,"SELECT industry, SUM(company.profits_in_billion) AS total_profits FROM company WHERE company.industry IS NOT NULL GROUP BY company.industry","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65721,What are the companies with more than 4 stations in the industry of 'Technology'?,SELECT company.name FROM station_company JOIN company ON station_company.company_id = company.company_id WHERE company.industry = 'Technology' GROUP BY company.name HAVING COUNT(station_company.station_id) > 4,"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65723,What is the name of the company with the highest sales in the industry of 'Education'?,SELECT company.name FROM company WHERE company.sales_in_billion = (SELECT MAX(sales_in_billion) FROM company WHERE company.industry = 'Education'),"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65724,What is the number of companies in the industry of 'Healthcare'?,SELECT COUNT(company.name) AS number_of_companies FROM company WHERE company.industry = 'Healthcare',"
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65725,What is the average number of stations for all locations?,"SELECT AVG(total_stations) AS average_stations FROM (SELECT location, COUNT(station_id) AS total_stations FROM gas_station GROUP BY location) AS subquery","
CREATE TABLE company (
	company_id REAL, 
	name TEXT, 
	headquarters TEXT, 
	industry TEXT, 
	sales_in_billion REAL, 
	profits_in_billion REAL, 
	assets_in_billion REAL, 
	market_value_in_billion REAL
)


CREATE TABLE gas_station (
	station_id INTEGER, 
	open_year INTEGER, 
	location TEXT, 
	manager_name TEXT, 
	vice_manager_name TEXT, 
	representative_name TEXT
)


CREATE TABLE station_company (
	station_id INTEGER, 
	company_id INTEGER, 
	rank_of_the_year INTEGER
)"
65727,What are the top 3 highest mountains in a specific country?,"SELECT name, height FROM mountain WHERE country='USA' ORDER BY height DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65728,What are the longest rivers in Asia?,"SELECT river_name, length FROM river WHERE country_name='Asia' ORDER BY length DESC","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65732,What are the borders of a specific state?,SELECT border FROM border_info WHERE state_name='California',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65733,What are the lowest elevations in a specific state?,SELECT lowest_elevation FROM highlow WHERE state_name='California',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65734,What are the highest elevations in a specific state?,SELECT highest_elevation FROM highlow WHERE state_name='California',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65735,What are the top 5 longest rivers in the United States?,"SELECT river_name, length FROM river WHERE country_name='United States' ORDER BY length DESC LIMIT 5","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65736,What are the top 3 highest mountains in the Himalayas?,"SELECT name, height FROM mountain WHERE country='Himalayas' ORDER BY height DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65737,What are the top 3 highest lakes in a specific country?,"SELECT lake_name, area FROM lake WHERE country_name='China' ORDER BY area DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65738,What are the borders of a specific state?,SELECT border FROM border_info WHERE state_name='New York',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65739,What are the lowest elevations in a specific state?,SELECT lowest_point FROM highlow WHERE state_name='New York',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65740,What are the highest elevations in a specific state?,SELECT highest_point FROM highlow WHERE state_name='New York',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65741,What are the top 5 longest rivers in Asia?,"SELECT river_name, length FROM river WHERE country_name='Asia' ORDER BY length DESC LIMIT 5","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65742,What are the top 3 highest mountains in South America?,"SELECT name, height FROM mountain WHERE country='South America' ORDER BY height DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65746,What are the top 5 longest rivers in South America?,"SELECT river_name, length FROM river WHERE country_name='South America' ORDER BY length DESC LIMIT 5","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65747,What are the top 3 highest lakes in Europe?,"SELECT lake_name, area FROM lake WHERE country_name='Europe' ORDER BY area DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65748,What are the borders of a specific state?,SELECT border FROM border_info WHERE state_name='Texas',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65749,What are the highest elevations in a specific state?,SELECT highest_point FROM highlow WHERE state_name='Texas',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65750,What are the lowest elevations in a specific state?,SELECT lowest_point FROM highlow WHERE state_name='Texas',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65752,What are the top 5 longest rivers in Africa?,"SELECT river_name, length FROM river WHERE country_name='Africa' ORDER BY length DESC LIMIT 5","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65753,What are the borders of a specific state?,SELECT border FROM border_info WHERE state_name='Florida',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65754,What are the lowest elevations in a specific state?,SELECT lowest_elevation FROM highlow WHERE state_name='Florida',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65755,What are the highest elevations in a specific state?,SELECT highest_elevation FROM highlow WHERE state_name='Florida',"
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65756,What are the top 3 highest lakes in Oceania?,"SELECT lake_name, area FROM lake WHERE country_name='Oceania' ORDER BY area DESC LIMIT 3","
CREATE TABLE border_info (
	state_name TEXT, 
	border TEXT
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE highlow (
	state_name TEXT, 
	highest_elevation TEXT, 
	lowest_point TEXT, 
	highest_point TEXT, 
	lowest_elevation TEXT
)


CREATE TABLE lake (
	lake_name TEXT, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	state_name TEXT
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE river (
	river_name TEXT, 
	length INTEGER, 
	country_name TEXT, 
	traverse TEXT
)


CREATE TABLE state (
	state_name TEXT, 
	population INTEGER, 
	area DOUBLE PRECISION, 
	country_name TEXT, 
	capital TEXT, 
	density DOUBLE PRECISION
)"
65757,What is the sum of total points for the gymnast with the highest total points?,SELECT SUM(total_points) FROM gymnast WHERE total_points = (SELECT MAX(total_points) FROM gymnast);,"
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65759,What are the top 2 gymnasts with the highest rings points?,"SELECT gymnast_id, rings_points FROM gymnast ORDER BY rings_points DESC LIMIT 2;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65761,What are the top 2 gymnasts with the highest horizontal bars points?,"SELECT gymnast_id, horizontal_bar_points FROM gymnast ORDER BY horizontal_bar_points DESC LIMIT 2;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65767,What are the top 2 gymnasts with the highest pommel horse points?,"SELECT gymnast_id, pommel_horse_points FROM gymnast ORDER BY pommel_horse_points DESC LIMIT 2;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65769,What are the top 2 gymnasts with the highest parallel bars points?,"SELECT gymnast_id, parallel_bars_points FROM gymnast ORDER BY parallel_bars_points DESC LIMIT 2;","
CREATE TABLE gymnast (
	gymnast_id INTEGER, 
	floor_exercise_points REAL, 
	pommel_horse_points REAL, 
	rings_points REAL, 
	vault_points REAL, 
	parallel_bars_points REAL, 
	horizontal_bar_points REAL, 
	total_points REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
65770,What is the average salary for each job?,"SELECT jb.job_title, AVG(jb.max_salary) FROM job_history j JOIN jobs jb ON j.job_id = jb.job_id GROUP BY jb.job_title;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65771,What are the most common job titles?,"SELECT jb.job_title, COUNT(j.employee_id) FROM job_history j JOIN jobs jb ON j.job_id = jb.job_id GROUP BY jb.job_title ORDER BY COUNT(j.employee_id) DESC LIMIT 10;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65772,What is the total count of job postings by job title?,"SELECT jb.job_title, COUNT(j.job_id) FROM job_history j JOIN jobs jb ON j.job_id = jb.job_id GROUP BY jb.job_title;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65773,What are the top 5 regions with the most number of employees?,"SELECT r.region_name, COUNT(e.employee_id) FROM employees e JOIN job_history j ON e.employee_id = j.employee_id JOIN departments d ON j.department_id = d.department_id JOIN regions r ON d.department_id = r.region_id GROUP BY r.region_name ORDER BY COUNT(e.employee_id) DESC LIMIT 5;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65774,What is the total count of employees working in each job title?,"SELECT jb.job_title, COUNT(e.employee_id) FROM employees e JOIN job_history j ON e.employee_id = j.employee_id JOIN jobs jb ON j.job_id = jb.job_id GROUP BY jb.job_title;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65775,What is the top 5 job titles by salary?,"SELECT jb.job_title, AVG(jb.max_salary) FROM job_history j JOIN jobs jb ON j.job_id = jb.job_id GROUP BY jb.job_title ORDER BY AVG(jb.max_salary) DESC LIMIT 5;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65776,What is the total count of employees working in each department?,"SELECT d.department_name, COUNT(e.employee_id) FROM employees e JOIN job_history j ON e.employee_id = j.employee_id JOIN departments d ON j.department_id = d.department_id GROUP BY d.department_name;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65777,What is the top 5 departments with the most number of employees?,"SELECT d.department_name, COUNT(e.employee_id) FROM employees e JOIN job_history j ON e.employee_id = j.employee_id JOIN departments d ON j.department_id = d.department_id GROUP BY d.department_name ORDER BY COUNT(e.employee_id) DESC LIMIT 5;","
CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE departments (
	department_id INTEGER, 
	dept_store_id INTEGER, 
	department_name TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE job_history (
	employee_id NUMERIC, 
	start_date TIMESTAMP WITHOUT TIME ZONE, 
	end_date TIMESTAMP WITHOUT TIME ZONE, 
	job_id TEXT, 
	department_id NUMERIC
)


CREATE TABLE jobs (
	job_id TEXT, 
	job_title TEXT, 
	min_salary NUMERIC, 
	max_salary NUMERIC
)


CREATE TABLE locations (
	location_id INTEGER, 
	location_name TEXT, 
	address TEXT, 
	other_details TEXT
)


CREATE TABLE regions (
	region_id NUMERIC, 
	region_name TEXT
)"
65781,Who is the youngest editor?,SELECT name FROM editor ORDER BY age ASC LIMIT 1;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65782,What are the top 5 oldest editors in descending order?,SELECT name FROM editor ORDER BY age DESC LIMIT 5;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65784,List names of all editors who are less than 30 years old?,SELECT name FROM editor WHERE age < 30;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65788,What is the name of the editor with the average age?,SELECT name FROM editor ORDER BY age LIMIT 1;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65789,What are the top 5 youngest editors?,SELECT name FROM editor ORDER BY age ASC LIMIT 5;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65790,What are the top 5 oldest journals in descending order?,SELECT name FROM journal ORDER BY name DESC LIMIT 5;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65791,What is the oldest age of any editor?,SELECT MAX(age) FROM editor;,"
CREATE TABLE editor (
	editor_id INTEGER, 
	name TEXT, 
	age REAL
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE journal_committee (
	editor_id INTEGER, 
	journal_id INTEGER, 
	work_type TEXT
)"
65795,What is the average making year for each machine series in the 'Premium' class?,"SELECT machine_series, AVG(making_year) AS average_making_year FROM machine WHERE class = 'Premium' GROUP BY machine_series","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65796,What is the total value of machines with a quality rank above 80?,SELECT SUM(value_points) AS total_value FROM machine WHERE quality_rank > 80,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65797,What is the distribution of machines in each making year?,"SELECT making_year, COUNT(*) AS machine_count FROM machine GROUP BY making_year","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65798,What is the average making year for each machine series in the 'Standard' class?,"SELECT machine_series, AVG(making_year) AS average_making_year FROM machine WHERE class = 'Standard' GROUP BY machine_series","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65799,What is the total value of machines with a making year above 2015?,SELECT SUM(value_points) AS total_value FROM machine WHERE making_year > 2015,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65800,What is the average age of technicians with more than 10 years of experience?,SELECT AVG(age) AS average_age FROM technician WHERE age > 30,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65801,What is the total number of machines in each team?,"SELECT team, COUNT(*) AS machine_count FROM machine GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65802,What is the average quality rank for each machine series in the 'Premium' class?,"SELECT machine_series, AVG(quality_rank) AS average_quality_rank FROM machine WHERE class = 'Premium' GROUP BY machine_series","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65803,What is the distribution of technicians in each team?,"SELECT team, COUNT(*) AS technician_count FROM technician GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65804,What is the average value of machines with a quality rank above 90?,SELECT AVG(value_points) AS average_value FROM machine WHERE quality_rank > 90,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65805,What is the average making year for each team?,"SELECT team, AVG(making_year) AS average_making_year FROM machine GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65806,What is the total value of machines in each team in the 'Standard' class?,"SELECT team, SUM(value_points) AS total_value FROM machine WHERE class = 'Standard' GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65807,What is the average age of technicians with a team of 'Mechanical'?,SELECT AVG(age) AS average_age FROM technician WHERE team = 'Mechanical',"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65808,What is the average quality rank for each machine series in the 'Standard' class?,"SELECT machine_series, AVG(quality_rank) AS average_quality_rank FROM machine WHERE class = 'Standard' GROUP BY machine_series","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65809,What is the total value of machines with a making year in the 2010s?,SELECT SUM(value_points) AS total_value FROM machine WHERE making_year >= 2010 AND making_year <= 2019,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65810,What is the distribution of technicians in each team with a starting year above 2000?,"SELECT team, COUNT(*) AS technician_count FROM technician WHERE starting_year > 2000 GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65811,What is the average value of machines with a quality rank above 85?,SELECT AVG(value_points) AS average_value FROM machine WHERE quality_rank > 85,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65812,What is the total number of machines with a making year above 2015 in each team?,"SELECT team, COUNT(*) AS machine_count FROM machine WHERE making_year > 2015 GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65813,What is the average age of technicians with a team of 'Mechanical' and starting year above 2010?,SELECT AVG(age) AS average_age FROM technician WHERE team = 'Mechanical' AND starting_year > 2010,"
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65814,What is the total value of machines in each team in the 'Premium' class?,"SELECT team, SUM(value_points) AS total_value FROM machine WHERE class = 'Premium' GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65815,What is the distribution of technicians in each team with an age above 35?,"SELECT team, COUNT(*) AS technician_count FROM technician WHERE age > 35 GROUP BY team","
CREATE TABLE machine (
	machine_id INTEGER, 
	making_year INTEGER, 
	class TEXT, 
	team TEXT, 
	machine_series TEXT, 
	value_points REAL, 
	quality_rank INTEGER
)


CREATE TABLE repair (
	repair_id INTEGER, 
	name TEXT, 
	launch_date TEXT, 
	notes TEXT
)


CREATE TABLE repair_assignment (
	technician_id INTEGER, 
	repair_id INTEGER, 
	machine_id INTEGER
)


CREATE TABLE technician (
	technician_id REAL, 
	name TEXT, 
	team TEXT, 
	starting_year REAL, 
	age INTEGER
)"
65817,What is the total price of all furniture produced by each manufacturer?,"SELECT m.name, SUM(fm.price_in_dollar) FROM furniture_manufacte fm JOIN manufacturer m ON m.manufacturer_id = fm.manufacturer_id GROUP BY m.name;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65818,Which manufacturer produces the most expensive furniture?,"SELECT m.name, MAX(fm.price_in_dollar) FROM furniture_manufacte fm JOIN manufacturer m ON m.manufacturer_id = fm.manufacturer_id GROUP BY m.name;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65821,Which manufacturer produces the most furniture?,"SELECT m.name, COUNT(*) FROM manufacturer m JOIN furniture_manufacte fm ON m.manufacturer_id = fm.manufacturer_id GROUP BY m.name ORDER BY COUNT(*) DESC LIMIT 1;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65824,What is the total market rate of all furniture produced by each manufacturer?,"SELECT m.name, SUM(fm.price_in_dollar) FROM manufacturer m JOIN furniture_manufacte fm ON m.manufacturer_id = fm.manufacturer_id GROUP BY m.name;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65826,What is the total number of shops of each manufacturer?,"SELECT m.name, num_of_shops FROM manufacturer m;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65829,What are the top 5 manufacturers of furniture?,SELECT * FROM manufacturer ORDER BY num_of_factories DESC LIMIT 5;,"
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65833,What is the average number of factories and shops of each manufacturer?,"SELECT AVG(num_of_factories), AVG(num_of_shops) FROM manufacturer;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65834,What is the total market rate of all furniture produced by each manufacturer and factory?,"SELECT m.name, m.num_of_factories, SUM(fm.price_in_dollar) FROM manufacturer m JOIN furniture_manufacte fm ON m.manufacturer_id = fm.manufacturer_id GROUP BY m.name, m.num_of_factories;","
CREATE TABLE furniture (
	furniture_id INTEGER, 
	name TEXT, 
	num_of_component INTEGER, 
	market_rate REAL
)


CREATE TABLE furniture_manufacte (
	manufacturer_id INTEGER, 
	furniture_id INTEGER, 
	price_in_dollar REAL
)


CREATE TABLE manufacturer (
	manufacturer_id INTEGER, 
	open_year REAL, 
	name TEXT, 
	num_of_factories INTEGER, 
	num_of_shops INTEGER
)"
65835,What are the top 5 countries with the most total players?,"SELECT birth_country, COUNT(*) FROM player GROUP BY birth_country ORDER BY COUNT(*) DESC LIMIT 5;","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65836,What is the total number of professional players from the United States?,SELECT COUNT(*) FROM player WHERE birth_country = 'United States';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65838,What is the total number of professional games played by players from the Netherlands?,SELECT COUNT(*) FROM player WHERE birth_country = 'Netherlands';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65840,What is the total number of professional players from the United Kingdom?,SELECT COUNT(*) FROM player WHERE birth_country = 'United Kingdom';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65841,What is the total number of professional players from Australia?,SELECT COUNT(*) FROM player WHERE birth_country = 'Australia';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65842,What is the total number of professional games played by players from Japan?,SELECT COUNT(*) FROM player WHERE birth_country = 'Japan';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65843,What is the total number of professional players from Germany?,SELECT COUNT(*) FROM player WHERE birth_country = 'Germany';,"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE match_season (
	season REAL, 
	player TEXT, 
	position TEXT, 
	country INTEGER, 
	team INTEGER, 
	draft_pick_number INTEGER, 
	draft_class TEXT, 
	college TEXT
)


CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE team (
	year INTEGER, 
	league_id TEXT, 
	team_id TEXT, 
	franchise_id TEXT, 
	div_id TEXT, 
	rank INTEGER, 
	g INTEGER, 
	ghome INTEGER, 
	w INTEGER, 
	l INTEGER, 
	div_win TEXT, 
	wc_win TEXT, 
	lg_win TEXT, 
	ws_win TEXT, 
	r INTEGER, 
	ab INTEGER, 
	h INTEGER, 
	double INTEGER, 
	triple INTEGER, 
	hr INTEGER, 
	bb INTEGER, 
	so INTEGER, 
	sb INTEGER, 
	cs INTEGER, 
	hbp INTEGER, 
	sf INTEGER, 
	ra INTEGER, 
	er INTEGER, 
	era INTEGER, 
	cg INTEGER, 
	sho INTEGER, 
	sv INTEGER, 
	ipouts INTEGER, 
	ha INTEGER, 
	hra INTEGER, 
	bba INTEGER, 
	soa INTEGER, 
	e INTEGER, 
	dp INTEGER, 
	fp INTEGER, 
	name TEXT, 
	park TEXT, 
	attendance INTEGER, 
	bpf INTEGER, 
	ppf INTEGER, 
	team_id_br TEXT, 
	team_id_lahman45 TEXT, 
	team_id_retro TEXT
)"
65844,What is the average focal length of camera lenses from company ABC?,SELECT AVG(focal_length_mm) FROM camera_lens WHERE brand = 'ABC',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65846,How many photos does each tourist attraction have?,"SELECT tourist_attraction_id, COUNT(*) FROM photos GROUP BY tourist_attraction_id","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65847,What is the most frequently used filename prefix in photo files?,"SELECT LEFT(filename, 3) AS prefix, COUNT(*) FROM photos GROUP BY LEFT(filename, 3)","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65848,Which camera lenses have an aperture of 1.4 or less?,SELECT * FROM camera_lens WHERE max_aperture <= 1.4,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65853,Which tourist attractions have the most photos?,"SELECT tourist_attraction_id, COUNT(*) FROM photos GROUP BY tourist_attraction_id ORDER BY COUNT(*) DESC","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65854,Which camera lenses have the largest maximum aperture?,SELECT * FROM camera_lens ORDER BY max_aperture DESC,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65855,Which mountains are located in the country of France?,SELECT * FROM mountain WHERE country = 'France',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65857,Which camera lenses have a focal length between 20 and 40 mm?,SELECT * FROM camera_lens WHERE focal_length_mm BETWEEN 20 AND 40,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65858,Which tourist attractions have the fewest photos?,"SELECT tourist_attraction_id, COUNT(*) FROM photos GROUP BY tourist_attraction_id ORDER BY COUNT(*)","
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65859,What is the average prominence of mountains in the Alps?,SELECT AVG(prominence) FROM mountain WHERE range = 'Alps',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65862,What is the maximum prominence of a mountain?,SELECT MAX(prominence) FROM mountain,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65863,Which mountains have the highest prominence?,SELECT * FROM mountain ORDER BY prominence DESC,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65864,Which camera lenses have an aperture of 2.8 or more?,SELECT * FROM camera_lens WHERE max_aperture >= 2.8,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65865,Which mountains have a name starting with the letter 'M'?,SELECT * FROM mountain WHERE name LIKE 'M%',"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65866,Which camera lenses have a focal length between 50 and 100 mm?,SELECT * FROM camera_lens WHERE focal_length_mm BETWEEN 50 AND 100,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65867,What is the average height of mountains with an elevation above 5000 meters?,SELECT AVG(height) FROM mountain WHERE height > 5000,"
CREATE TABLE camera_lens (
	id INTEGER, 
	brand TEXT, 
	name TEXT, 
	focal_length_mm REAL, 
	max_aperture REAL
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)


CREATE TABLE photos (
	photo_id INTEGER, 
	tourist_attraction_id INTEGER, 
	name TEXT, 
	description TEXT, 
	filename TEXT, 
	other_details TEXT
)"
65868,What is the name of the musical with the longest duration?,SELECT name FROM musical ORDER BY name DESC LIMIT 1,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65869,What is the earliest musical?,SELECT * FROM musical WHERE year IN (SELECT MIN(year) FROM musical),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65870,What are the musical categories with the most nominations?,"SELECT category, COUNT(musical_id) AS count FROM musical WHERE category IS NOT NULL GROUP BY category ORDER BY count DESC LIMIT 5","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65871,Which actors have acted in the longest musical?,SELECT name FROM actor WHERE musical_id IN (SELECT musical_id FROM musical ORDER BY duration DESC LIMIT 1),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65872,What is the name of the most awarded musical?,SELECT name FROM musical WHERE award IS NOT NULL GROUP BY name HAVING COUNT(award) >= ALL (SELECT COUNT(*) FROM musical WHERE award IS NOT NULL GROUP BY award),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65873,What is the average age of actors in the musical with the longest duration?,SELECT AVG(age) AS average_age FROM actor WHERE musical_id IN (SELECT musical_id FROM musical ORDER BY duration DESC LIMIT 1),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65874,What is the earliest award winning musical?,SELECT * FROM musical WHERE award IS NOT NULL AND year IN (SELECT MIN(year) FROM musical WHERE award IS NOT NULL),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65876,What is the name of the musical with the most nominations?,SELECT name FROM musical WHERE category IS NOT NULL GROUP BY name HAVING COUNT(musical_id) >= ALL (SELECT COUNT(*) FROM musical WHERE category IS NOT NULL GROUP BY category),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65877,What is the earliest musical with a nominee?,SELECT * FROM musical WHERE nominee IS NOT NULL AND year IN (SELECT MIN(year) FROM musical WHERE nominee IS NOT NULL),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65879,What is the earliest award winning musical with a nominee?,SELECT * FROM musical WHERE nominee IS NOT NULL AND award IS NOT NULL AND year IN (SELECT MIN(year) FROM musical WHERE nominee IS NOT NULL AND award IS NOT NULL),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65881,What are the 5 earliest musicals?,SELECT name FROM musical ORDER BY year ASC LIMIT 5,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65882,What is the average age of actors in the earliest musicals?,SELECT AVG(age) AS average_age FROM actor WHERE musical_id IN (SELECT musical_id FROM musical ORDER BY year ASC LIMIT 5),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65883,What is the name of the musical with the 5 earliest nominations?,SELECT name FROM musical WHERE category IS NOT NULL ORDER BY year ASC LIMIT 5,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65884,What is the average age of actors in the musical with the 5 earliest awards?,SELECT AVG(age) AS average_age FROM actor WHERE musical_id IN (SELECT musical_id FROM musical WHERE award IS NOT NULL ORDER BY year ASC LIMIT 5),"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65885,What are the 5 earliest award winning musicals?,SELECT name FROM musical WHERE award IS NOT NULL ORDER BY year ASC LIMIT 5,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE musical (
	musical_id INTEGER, 
	name TEXT, 
	year INTEGER, 
	award TEXT, 
	category TEXT, 
	nominee TEXT, 
	result TEXT
)"
65886,What music festival category has the highest average volume?,"SELECT category, AVG(volume) FROM music_festival GROUP BY category","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
65891,What music festival volume has the highest result?,SELECT MAX(volume) FROM music_festival GROUP BY id,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
65895,What is the total number of unique weeks on top in the 'volume' table?,SELECT COUNT(DISTINCT weeks_on_top) FROM volume,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
65897,What is the total number of music festivals in the 'music_festival' table that have a volume?,SELECT COUNT(*) FROM music_festival WHERE volume IS NOT NULL,"
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE music_festival (
	id INTEGER, 
	music_festival TEXT, 
	date_of_ceremony TEXT, 
	category TEXT, 
	volume INTEGER, 
	result TEXT
)


CREATE TABLE volume (
	volume_id INTEGER, 
	volume_issue TEXT, 
	issue_date TEXT, 
	weeks_on_top REAL, 
	song TEXT, 
	artist_id INTEGER
)"
65899,What date had the highest event attendance?,"SELECT date, COUNT(event_attendance) AS highest_attendance FROM event GROUP BY date ORDER BY highest_attendance DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65900,How many journalists from a specific nationality covered an event?,"SELECT nationality, COUNT(journalist_id) AS count_journalists FROM journalist GROUP BY nationality;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65901,Which journalist worked on the most events?,"SELECT journalist_id, COUNT(work_type) AS count_events FROM news_report GROUP BY journalist_id ORDER BY count_events DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65902,What type of event had the most journalists attending?,"SELECT work_type, COUNT(journalist_id) AS count_journalists FROM news_report GROUP BY work_type ORDER BY count_journalists DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65903,What date had the lowest event attendance?,"SELECT date, COUNT(event_attendance) AS lowest_attendance FROM event GROUP BY date ORDER BY lowest_attendance LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65904,Who is the oldest journalist?,"SELECT name, age FROM journalist ORDER BY age DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65905,Which event had the highest attendance?,"SELECT event_id, MAX(event_attendance) AS max_attendance FROM event GROUP BY event_id;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65906,What date had the most events?,"SELECT date, COUNT(event_id) AS count_events FROM event GROUP BY date ORDER BY count_events DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65907,How many events did a specific journalist cover?,"SELECT journalist_id, COUNT(work_type) AS count_events FROM news_report GROUP BY journalist_id;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65909,How many events had at least one journalist?,SELECT COUNT(DISTINCT event_id) AS count_events FROM news_report;,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65910,Who is the youngest journalist?,"SELECT name, age FROM journalist ORDER BY age LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65912,How many journalists worked on the same event?,SELECT COUNT(DISTINCT journalist_id) AS count_journalists FROM news_report;,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65913,What was the average number of years a journalist has worked?,SELECT AVG(years_working) AS avg_years_working FROM journalist;,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65917,Who is the most experienced journalist?,"SELECT name, years_working FROM journalist ORDER BY years_working DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65918,Which nationality has the least number of journalists?,"SELECT nationality, COUNT(journalist_id) AS count_journalists FROM journalist GROUP BY nationality ORDER BY count_journalists LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65919,What was the average number of events a journalist worked on?,"SELECT AVG(count_events) AS avg_events FROM (SELECT journalist_id, COUNT(work_type) AS count_events FROM news_report GROUP BY journalist_id) AS journalist_events;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65920,What was the average event attendance in a specific venue?,"SELECT venue, AVG(event_attendance) AS avg_attendance FROM event GROUP BY venue;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65921,Who is the youngest journalist in a specific nationality?,"SELECT name, age FROM journalist WHERE nationality='specific-nationality' ORDER BY age LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65922,How many events had at least one journalist from a specific nationality?,SELECT COUNT(DISTINCT event_id) AS count_events FROM news_report WHERE journalist_id IN (SELECT journalist_id FROM journalist WHERE nationality='specific-nationality');,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65923,What was the total number of journalists?,SELECT COUNT(*) AS count_journalists FROM journalist;,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65924,Who is the most experienced journalist in a specific nationality?,"SELECT name, years_working FROM journalist WHERE nationality='specific-nationality' ORDER BY years_working DESC LIMIT 1;","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65925,What was the average number of years a journalist from a specific nationality has worked?,SELECT AVG(years_working) AS avg_years_working FROM journalist WHERE nationality='specific-nationality';,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE journalist (
	journalist_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT, 
	years_working INTEGER
)


CREATE TABLE news_report (
	journalist_id INTEGER, 
	event_id INTEGER, 
	work_type TEXT
)"
65926,What is the average age of conductors in the '1950s'?,SELECT AVG(age) FROM conductor WHERE year_of_work BETWEEN 1950 AND 1959,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65927,What is the nationality of the oldest conductor?,SELECT nationality FROM conductor ORDER BY age DESC LIMIT 1,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65928,What is the name of the conductor with the most performances?,SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id ORDER BY COUNT(*) DESC LIMIT 1),"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65929,What is the average attendance at first shows?,SELECT AVG(attendance) FROM show WHERE if_first_show = 't',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65930,What is the record company of the orchestra founded in the '1920s'?,SELECT record_company FROM orchestra WHERE year_of_founded > 1920 AND year_of_founded < 1930,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65931,What is the nationality of the youngest conductor?,SELECT nationality FROM conductor ORDER BY age ASC LIMIT 1,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65932,What is the least attended concert?,SELECT * FROM show ORDER BY attendance ASC LIMIT 1,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65933,What is the conductor's name with the most concerts in the UK?,"SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id, stageposition LIKE '%UK%' ORDER BY COUNT(*) DESC LIMIT 1)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65934,What is the average age of conductors from Europe?,SELECT AVG(age) FROM conductor WHERE nationality LIKE '%Europe%',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65935,What is the record company of the orchestra founded in the '1900s'?,SELECT record_company FROM orchestra WHERE year_of_founded > 1900 AND year_of_founded < 1910,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65936,What is the record company of the orchestra founded in the '1940s'?,SELECT record_company FROM orchestra WHERE year_of_founded > 1940 AND year_of_founded < 1950,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65937,What is the conductor's name with the most concerts in the US?,"SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id, stageposition LIKE '%US%' ORDER BY COUNT(*) DESC LIMIT 1)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65938,What is the average age of conductors who founded their orchestra after 1950?,SELECT AVG(age) FROM conductor WHERE year_of_work > 1950,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65939,What is the total attendance at first shows?,SELECT SUM(attendance) FROM show WHERE if_first_show = 't',"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65940,What is the record company of the orchestra founded in the '1990s'?,SELECT record_company FROM orchestra WHERE year_of_founded > 1990 AND year_of_founded < 2000,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65941,What is the conductor's name with the most concerts in North America?,"SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id, stageposition LIKE '%North America%' ORDER BY COUNT(*) DESC LIMIT 1)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65942,What is the record company of the orchestra founded in the '1930s'?,SELECT record_company FROM orchestra WHERE year_of_founded > 1930 AND year_of_founded < 1940,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65944,What is the average age of conductors with more than 10 performances?,SELECT AVG(age) FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id HAVING COUNT(*) > 10),"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65945,What is the conductor's name with the most concerts in Asia?,"SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id, stageposition LIKE '%Asia%' ORDER BY COUNT(*) DESC LIMIT 1)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65948,What is the conductor's name with the most concerts in South America?,"SELECT name FROM conductor WHERE conductor_id IN (SELECT conductor_id FROM performance GROUP BY conductor_id, stageposition LIKE '%South America%' ORDER BY COUNT(*) DESC LIMIT 1)","
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65949,What is the record company of the orchestra founded in the '1910s'?,SELECT record_company FROM orchestra WHERE year_of_founded > 1910 AND year_of_founded < 1920,"
CREATE TABLE conductor (
	conductor_id INTEGER, 
	name TEXT, 
	age INTEGER, 
	nationality TEXT, 
	year_of_work INTEGER
)


CREATE TABLE orchestra (
	orchestra_id INTEGER, 
	orchestra TEXT, 
	conductor_id INTEGER, 
	record_company TEXT, 
	year_of_founded REAL, 
	major_record_format TEXT
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)


CREATE TABLE show (
	show_id INTEGER, 
	performance_id INTEGER, 
	if_first_show BOOLEAN, 
	result TEXT, 
	attendance REAL
)"
65953,Get the host with the highest age.,SELECT * FROM host ORDER BY age DESC LIMIT 1,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65954,What are the unique years a party occurred?,SELECT DISTINCT year FROM party,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65955,Get the names of all parties,SELECT party FROM party,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65956,Get the total count of parties.,SELECT COUNT(*) FROM party,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65957,Get the party with the highest year.,SELECT * FROM party ORDER BY year DESC LIMIT 1,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65958,What are the unique states represented in the party table?,SELECT DISTINCT us_senate FROM party,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65960,What are the dates of the parties?,SELECT * FROM party,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65964,What are the unique party associations with hosts and main party?,SELECT DISTINCT ph.party_id FROM party_host ph,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65965,Get the hosts with oldest age.,SELECT * FROM host ORDER BY age LIMIT 1,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65966,What are the unique governors names?,SELECT DISTINCT governor FROM party,"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65969,Get the hosts associated with the governor specified.,SELECT h.name FROM host h JOIN party_host ph ON h.host_id = ph.host_id WHERE ph.party_id IN (SELECT party_id FROM party_host WHERE is_main_in_charge),"
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65973,Get the counts of hosts per host_id.,"SELECT host_id, COUNT(*) FROM party_host GROUP BY host_id","
CREATE TABLE host (
	host_id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	age TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_host (
	party_id INTEGER, 
	host_id INTEGER, 
	is_main_in_charge BOOLEAN
)"
65984,What is the total number of members by party?,SELECT COUNT(*) FROM member WHERE level_of_membership IN (SELECT party_id FROM party) GROUP BY level_of_membership,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
65987,What is the total number of members in each region?,"SELECT region_name, COUNT(*) FROM member JOIN region ON member.address = region.region_name GROUP BY region_name","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
65989,What are the top 5 regions with the most members?,"SELECT region_name, COUNT(*) FROM member JOIN region ON member.address = region.region_name GROUP BY region_name ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
65990,What are the top 3 events with the most attendees?,"SELECT event_name, COUNT(*) FROM party_events GROUP BY event_name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
65991,What are the most common party members?,"SELECT member_id, COUNT(*) FROM member GROUP BY member_id ORDER BY COUNT(*) DESC LIMIT 5","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
65993,What are the top 3 regions with the most members?,"SELECT region_name, COUNT(*) FROM member JOIN region ON member.address = region.region_name GROUP BY region_name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE party (
	party_id INTEGER, 
	year REAL, 
	party TEXT, 
	governor TEXT, 
	lieutenant_governor TEXT, 
	comptroller TEXT, 
	attorney_general TEXT, 
	us_senate TEXT
)


CREATE TABLE party_events (
	event_id INTEGER, 
	event_name TEXT, 
	party_id INTEGER, 
	member_in_charge_id INTEGER
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)"
65994,What are the members who have been attending at least two performances?,"SELECT name FROM member, member_attendance WHERE member.member_id = member_attendance.member_id GROUP BY name HAVING COUNT(member_attendance.num_of_pieces) >= 2","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
65998,How many members have an 'ACTIVE' membership card?,SELECT COUNT(*) FROM member WHERE membership_card = 'ACTIVE',"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66001,What is the maximum age of members?,SELECT MAX(age) FROM member,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66003,What is the average time of purchase for each membership level?,"SELECT level_of_membership, AVG(time_of_purchase) AS avg_time FROM member GROUP BY level_of_membership","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66004,Which members have the 'PRIVATE' membership card?,SELECT name FROM member WHERE membership_card = 'PRIVATE',"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66007,What are the unique members who attended at least one performance?,SELECT DISTINCT member_id FROM member_attendance,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66008,What is the total number of performances on each stage?,"SELECT stageposition, COUNT(*) AS num_performances FROM performance GROUP BY stageposition","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66009,What is the age distribution of members by age group?,"SELECT age_range, COUNT(*) AS count FROM (SELECT age % 10 AS age_range FROM member) AS subquery GROUP BY age_range ORDER BY age_range","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66010,How many members have a 'GOLD' level of membership?,SELECT COUNT(*) FROM member WHERE level_of_membership = 1,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66011,Which members attended more than two performances?,"SELECT name FROM member, member_attendance WHERE member.member_id = member_attendance.member_id GROUP BY name HAVING COUNT(member_attendance.num_of_pieces) > 2","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66012,What are the stages where at least one performance occurred?,SELECT stageposition FROM performance GROUP BY stageposition HAVING COUNT(*) > 0,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66013,What is the earliest and latest time of purchase for members?,"SELECT MIN(time_of_purchase) AS min_purchase, MAX(time_of_purchase) AS max_purchase FROM member","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66015,What is the average time of purchase for ACTIVE membership?,SELECT AVG(time_of_purchase) FROM member WHERE membership_card = 'ACTIVE',"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66016,What is the total number of unique performances?,SELECT COUNT(DISTINCT songid) FROM performance,"
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66017,What is the top 5 stages by the number of performances?,"SELECT stageposition, COUNT(*) AS num_performances FROM performance GROUP BY stageposition ORDER BY num_performances DESC LIMIT 5","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66018,What are the top 5 band members by the number of performances?,"SELECT bandmate, COUNT(*) AS num_performances FROM performance GROUP BY bandmate ORDER BY num_performances DESC LIMIT 5","
CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE member_attendance (
	member_id INTEGER, 
	performance_id INTEGER, 
	num_of_pieces INTEGER
)


CREATE TABLE performance (
	songid INTEGER, 
	bandmate INTEGER, 
	stageposition TEXT
)"
66020,What is the average weight of people who are 170 cm tall?,SELECT AVG(weight) FROM people WHERE height = 170;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66021,What is the average height of people who weigh over 70 kg?,SELECT AVG(height) FROM people WHERE weight > 70;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66022,What is the maximum height reached by people born in the United States?,SELECT MAX(height) FROM people WHERE birth_place = 'United States';,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66023,What is the average weight of people who are 175 cm tall?,SELECT AVG(weight) FROM people WHERE height = 175;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66024,What is the average height of people who weigh over 80 kg?,SELECT AVG(height) FROM people WHERE weight > 80;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66025,What is the average weight of people who are 163 cm tall?,SELECT AVG(weight) FROM people WHERE height = 163;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66026,What is the average height of people who weigh over 90 kg?,SELECT AVG(height) FROM people WHERE weight > 90;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66027,What is the maximum height reached by people born in Canada?,SELECT MAX(height) FROM people WHERE birth_place = 'Canada';,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66028,What is the average weight of people who are 168 cm tall?,SELECT AVG(weight) FROM people WHERE height = 168;,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE perpetrator (
	perpetrator_id INTEGER, 
	people_id INTEGER, 
	date TEXT, 
	year REAL, 
	location TEXT, 
	country TEXT, 
	killed INTEGER, 
	injured INTEGER
)"
66029,What is the average RAM size of chips used in phones from 2010?,SELECT AVG(ram_mib) FROM chip_model WHERE launch_year <= 2010;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66031,What chip models have a launch year before 2015?,SELECT DISTINCT model_name FROM chip_model WHERE launch_year < 2015;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66032,What are the top 3 most popular screen types?,"SELECT type, COUNT(*) FROM screen_mode GROUP BY type ORDER BY COUNT(*) DESC LIMIT 3;","
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66033,What is the highest screen resolution?,SELECT MAX(used_kb) FROM screen_mode;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66034,What is the total number of chip models?,SELECT COUNT(DISTINCT model_name) FROM chip_model;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66035,What is the count of chips with a launch year after 2010?,SELECT COUNT(*) FROM chip_model WHERE launch_year > 2010;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66037,What is the top screen pixel count?,SELECT MAX(pixels) FROM screen_mode;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66038,What is the average chip launch year?,SELECT AVG(launch_year) FROM chip_model;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66040,What are the top 2 most popular graphics modes?,"SELECT type, COUNT(*) FROM screen_mode GROUP BY type ORDER BY COUNT(*) DESC LIMIT 2;","
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66042,What is the average number of slots in a phone chip?,SELECT AVG(CAST(slots AS INTEGER)) FROM chip_model;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66044,What is the top phone company accreditation?,"SELECT company_name, MAX(accreditation_level) FROM phone GROUP BY company_name;","
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66045,What is the total number of screen modes?,SELECT COUNT(*) FROM screen_mode;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66048,What is the oldest screen mode?,SELECT MIN(used_kb) FROM screen_mode;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66049,What is the top 3 chip models for each phone company?,"SELECT company_name, model_name FROM phone, chip_model WHERE chip_model.model_name = phone.chip_model GROUP BY company_name, model_name;","
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66053,What is the top 2 most expensive screen modes?,"SELECT type, MAX(hardware_colours) FROM screen_mode GROUP BY type ORDER BY MAX(hardware_colours) DESC LIMIT 2;","
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66054,What is the total number of phone chip models?,SELECT COUNT(DISTINCT chip_model) FROM phone;,"
CREATE TABLE chip_model (
	model_name TEXT, 
	launch_year REAL, 
	ram_mib REAL, 
	rom_mib REAL, 
	slots TEXT, 
	wifi TEXT, 
	bluetooth TEXT
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE screen_mode (
	graphics_mode REAL, 
	char_cells TEXT, 
	pixels TEXT, 
	hardware_colours REAL, 
	used_kb REAL, 
	map TEXT, 
	type TEXT
)"
66057,What are the top 5 countries by number of cities?,"SELECT country, SUM(number_cities) as total_cities FROM market GROUP BY country ORDER BY total_cities DESC LIMIT 5","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66059,Which phones have accreditation level 'Silver'?,SELECT * FROM phone WHERE accreditation_level = 'Silver',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66060,What is the date of the first phone accreditation?,SELECT date FROM phone ORDER BY date ASC LIMIT 1,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66061,Which phones have chip model 'Snapdragon'?,SELECT * FROM phone WHERE chip_model = 'Snapdragon',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66062,What is the count of unique accreditation types?,SELECT COUNT(DISTINCT accreditation_type) FROM phone,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66063,How many accreditation levels is a phone having?,SELECT COUNT(DISTINCT accreditation_level) FROM phone,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66064,What is the total stock of a 'Samsung' phone in a specific market?,SELECT SUM(num_of_stock) FROM phone_market WHERE phone_id LIKE 'Samsung%',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66065,What are the top 5 phones by total stock?,"SELECT phone_id, SUM(num_of_stock) as total_stock FROM phone_market GROUP BY phone_id ORDER BY total_stock DESC LIMIT 5","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66067,Which phone has the highest screen resolution?,SELECT * FROM phone WHERE screen_mode = 'HD',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66070,What is the range of accreditation levels?,"SELECT MIN(accreditation_level), MAX(accreditation_level) FROM phone","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66071,What is the count of unique phone models?,SELECT COUNT(DISTINCT hardware_model_name) FROM phone,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66072,How many chip models are there?,SELECT COUNT(DISTINCT chip_model) FROM phone,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66073,What is the top accreditation level of a 'Samsung' phone?,SELECT MAX(accreditation_level) FROM phone WHERE hardware_model_name = 'Samsung',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66075,In which country does 'Samsung' have the most cities?,"SELECT country, SUM(number_cities) as total_cities FROM market WHERE country LIKE 'Samsung%' GROUP BY country ORDER BY total_cities DESC LIMIT 1","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66076,What is the accreditation level of a 'Samsung' phone?,SELECT accreditation_level FROM phone WHERE hardware_model_name = 'Samsung',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66077,What is the total stock of a specific market?,SELECT SUM(num_of_stock) FROM phone_market WHERE market_id = 1,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66078,What are the top 5 phones by total stock in a specific market?,"SELECT phone_id, SUM(num_of_stock) as total_stock FROM phone_market WHERE market_id = 1 GROUP BY phone_id ORDER BY total_stock DESC LIMIT 5","
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66079,What is the last accreditation date of a 'Samsung' phone?,SELECT MAX(date) FROM phone WHERE hardware_model_name = 'Samsung',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66080,Which 'Samsung' phones have screen resolution 'HD'?,SELECT * FROM phone WHERE screen_mode = 'HD' AND hardware_model_name = 'Samsung',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66081,What is the number of cities in a specific country?,SELECT SUM(number_cities) FROM market WHERE country = 'USA',"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66082,What is the total stock of a specific phone in specific market?,SELECT SUM(num_of_stock) FROM phone_market WHERE phone_id = 'iPhone' AND market_id = 1,"
CREATE TABLE market (
	market_id INTEGER, 
	country TEXT, 
	number_cities INTEGER
)


CREATE TABLE phone (
	company_name TEXT, 
	hardware_model_name TEXT, 
	accreditation_type TEXT, 
	accreditation_level TEXT, 
	date TEXT, 
	chip_model TEXT, 
	screen_mode TEXT
)


CREATE TABLE phone_market (
	market_id INTEGER, 
	phone_id TEXT, 
	num_of_stock INTEGER
)"
66087,What is the average age of pilots flying aircraft 'A'?,SELECT AVG(p.pilot_id) FROM pilot p JOIN pilot_record pr ON p.pilot_id = pr.pilot_id JOIN aircraft a ON pr.aircraft_id = a.aircraft_id WHERE a.aircraft = 'A',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66088,How many flights had pilot 'John'?,SELECT COUNT(*) FROM pilot_record WHERE pilot_id = (SELECT pilot_id FROM pilot WHERE name = 'John'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66089,What is the earliest recorded flight date of pilot 'Jane'?,SELECT MIN(date) FROM pilot_record WHERE pilot_id = (SELECT pilot_id FROM pilot WHERE name = 'Jane'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66090,What is the maximum disk loading of aircraft 'C'?,SELECT MAX(max_disk_loading) FROM aircraft WHERE aircraft = 'C',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66091,How many flights had pilot 'Jane' in total?,SELECT COUNT(*) FROM pilot_record WHERE pilot_id = (SELECT pilot_id FROM pilot WHERE name = 'Jane'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66092,What is the earliest recorded flight date of aircraft 'A'?,SELECT MIN(date) FROM pilot_record WHERE aircraft_id = (SELECT aircraft_id FROM aircraft WHERE aircraft = 'A'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66093,What is the maximum disk loading of aircraft 'B'?,SELECT MAX(max_disk_loading) FROM aircraft WHERE aircraft = 'B',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66095,What is the earliest recorded flight date of aircraft 'C'?,SELECT MIN(date) FROM pilot_record WHERE aircraft_id = (SELECT aircraft_id FROM aircraft WHERE aircraft = 'C'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66096,What is the maximum disk loading of aircraft 'A'?,SELECT MAX(max_disk_loading) FROM aircraft WHERE aircraft = 'A',"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66097,What is the earliest recorded flight date of aircraft 'B'?,SELECT MIN(date) FROM pilot_record WHERE aircraft_id = (SELECT aircraft_id FROM aircraft WHERE aircraft = 'B'),"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)


CREATE TABLE pilot_record (
	record_id INTEGER, 
	pilot_id INTEGER, 
	aircraft_id INTEGER, 
	date TEXT
)"
66102,What is the birthdate of the person named 'John'?,SELECT birth_date FROM people WHERE name = 'John',"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66108,What is the best finish of the poker player with the highest earnings?,SELECT * FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player) ORDER BY best_finish DESC LIMIT 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66109,What is the rank of the poker player with the highest earnings?,SELECT * FROM poker_player WHERE earnings = (SELECT MAX(earnings) FROM poker_player) ORDER BY money_rank DESC LIMIT 1,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66111,What is the birthplace of the person named 'John'?,SELECT birth_place FROM people WHERE name = 'John',"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66113,What is the average height of poker players?,SELECT AVG(height) FROM people p JOIN poker_player ps ON p.people_id = ps.people_id,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66115,What is the total earnings of the top 5 poker players?,SELECT SUM(earnings) FROM (SELECT * FROM poker_player ORDER BY earnings DESC LIMIT 5) as poker_players,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66116,What is the average final table made by the top 5 poker players?,SELECT AVG(final_table_made) FROM (SELECT * FROM poker_player ORDER BY earnings DESC LIMIT 5) as poker_players,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66117,What are the top 5 birthplaces of people in the database?,"SELECT birth_place, COUNT(*) as count FROM people GROUP BY birth_place ORDER BY count DESC LIMIT 5","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66119,Who are the heaviest and lightest people in the database?,SELECT * FROM people WHERE height = (SELECT MIN(height) FROM people) OR height = (SELECT MAX(height) FROM people),"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66120,What is the average earnings of the top 5 poker players by best finish?,SELECT AVG(earnings) FROM (SELECT * FROM poker_player ORDER BY best_finish DESC LIMIT 5) as poker_players,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66121,What is the most common birthplace of people in the database?,"SELECT birth_place, COUNT(*) as count FROM people GROUP BY birth_place ORDER BY count DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66123,What is the average height of people in a specific birthplace?,"SELECT AVG(height) FROM people p JOIN (SELECT birth_place, COUNT(*) as count FROM people GROUP BY birth_place ORDER BY count DESC LIMIT 1) as birthplaces ON p.birth_place = birthplaces.birth_place","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66124,Who are the 5 shortest people in the database?,SELECT * FROM people ORDER BY height LIMIT 5,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66125,What is the average earnings of the top 5 poker players by rank?,SELECT AVG(earnings) FROM (SELECT * FROM poker_player ORDER BY money_rank DESC LIMIT 5) as poker_players,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66126,What is the most common height of poker players?,"SELECT height, COUNT(*) as count FROM people p JOIN poker_player ps ON p.people_id = ps.people_id GROUP BY height ORDER BY count DESC LIMIT 1","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66127,Who are the 5 heaviest people in the database?,SELECT * FROM people ORDER BY weight DESC LIMIT 5,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66128,What is the average weight of people in a specific birthplace?,"SELECT AVG(weight) FROM people p JOIN (SELECT birth_place, COUNT(*) as count FROM people GROUP BY birth_place ORDER BY count DESC LIMIT 1) as birthplaces ON p.birth_place = birthplaces.birth_place","
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66129,What is the average final table made by the top 5 poker players by rank?,SELECT AVG(final_table_made) FROM (SELECT * FROM poker_player ORDER BY money_rank DESC LIMIT 5) as poker_players,"
CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE poker_player (
	poker_player_id INTEGER, 
	people_id INTEGER, 
	final_table_made REAL, 
	best_finish REAL, 
	money_rank REAL, 
	earnings REAL
)"
66130,What is the total number of races held in a specific track?,SELECT COUNT(*) FROM race WHERE track_id = 'specific_track_id',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66131,What are the top 3 most popular tracks?,SELECT * FROM track ORDER BY bytes DESC LIMIT 3,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66132,What is the total number of races held in a specific month?,SELECT COUNT(*) FROM race WHERE date LIKE '%-specific_month-%',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66134,What is the total number of races held in a specific year and month?,SELECT COUNT(*) FROM race WHERE date LIKE '%-specific_month-%-%',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66137,What is the top track with the most bytes?,SELECT * FROM track ORDER BY bytes DESC LIMIT 1,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66138,What is the total number of unique tracks?,SELECT COUNT(DISTINCT albumid) FROM track,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66140,What is the average track duration in minutes?,SELECT AVG(milliseconds/60000.0) FROM track,"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66142,What is the total number of races held in a specific class?,SELECT COUNT(*) FROM race WHERE class LIKE 'specific_class',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66143,What is the total number of unique races per class?,SELECT COUNT(DISTINCT race_id) FROM race WHERE class LIKE 'specific_class',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66144,What is the total number of races held on a specific track?,SELECT COUNT(*) FROM race WHERE track_id LIKE 'specific_track_id',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66146,What is the total number of unique races in a specific month?,SELECT COUNT(DISTINCT race_id) FROM race WHERE date LIKE '%-specific_month-%',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66147,What is the total number of races held in a specific class and month?,SELECT COUNT(*) FROM race WHERE class LIKE 'specific_class' AND date LIKE '%-specific_month-%',"
CREATE TABLE race (
	race_id INTEGER, 
	name TEXT, 
	class TEXT, 
	date TEXT, 
	track_id TEXT
)


CREATE TABLE track (
	trackid INTEGER, 
	name TEXT, 
	albumid INTEGER, 
	mediatypeid INTEGER, 
	genreid INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unitprice NUMERIC
)"
66149,Which countries have roller coasters with heights greater than 100 meters?,SELECT country_name FROM country WHERE EXISTS (SELECT 1 FROM roller_coaster WHERE country_id = country.country_id AND height > 100 ORDER BY height DESC),"
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66150,What is the average length of roller coasters opened in the last 5 years?,"SELECT AVG(length) AS avg_length FROM roller_coaster WHERE TO_DATE(opened, 'YYYY-MM-DD') >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '5 year')","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66151,What is the maximum speed of roller coasters by type?,"SELECT speed, MAX(speed) AS max_speed FROM roller_coaster GROUP BY speed","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66152,What is the average length of roller coasters opened in each month?,"SELECT EXTRACT(MONTH FROM TO_DATE(opened, 'YYYY-MM-DD')) AS month, AVG(length) AS avg_length FROM roller_coaster GROUP BY month","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66153,What is the total number of roller coasters opened in each year?,"SELECT EXTRACT(YEAR FROM TO_DATE(opened, 'YYYY-MM-DD')) AS year, COUNT(*) AS total_coasters FROM roller_coaster GROUP BY year","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66154,What are the top 2 roller coaster parks by the number of coasters?,"SELECT park, COUNT(*) AS total_coasters FROM roller_coaster GROUP BY park ORDER BY total_coasters DESC LIMIT 2","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66155,What is the average length of roller coasters opened in the first 5 years of each decade?,"SELECT EXTRACT(DECADE FROM TO_DATE(opened, 'YYYY-MM-DD')) AS decade, AVG(length) AS avg_length FROM roller_coaster WHERE TO_DATE(opened, 'YYYY-MM-DD') >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '10 year') GROUP BY decade","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66156,What is the average length of roller coasters opened in each month of the last year?,"SELECT EXTRACT(MONTH FROM TO_DATE(opened, 'YYYY-MM-DD')) AS month, AVG(length) AS avg_length FROM roller_coaster WHERE TO_DATE(opened, 'YYYY-MM-DD') >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 year') GROUP BY month","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66157,What is the average length of roller coasters opened in each month of the last 5 years?,"SELECT EXTRACT(MONTH FROM TO_DATE(opened, 'YYYY-MM-DD')) AS month, AVG(length) AS avg_length FROM roller_coaster WHERE TO_DATE(opened, 'YYYY-MM-DD') >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '5 year') GROUP BY month","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66158,What is the average length of roller coasters opened in each month of the last 10 years?,"SELECT EXTRACT(MONTH FROM TO_DATE(opened, 'YYYY-MM-DD')) AS month, AVG(length) AS avg_length FROM roller_coaster WHERE TO_DATE(opened, 'YYYY-MM-DD') >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '10 year') GROUP BY month","
CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE roller_coaster (
	roller_coaster_id INTEGER, 
	name TEXT, 
	park TEXT, 
	country_id INTEGER, 
	length REAL, 
	height REAL, 
	speed TEXT, 
	opened TEXT, 
	status TEXT
)"
66162,What is the most popular film category?,"SELECT category.name, COUNT(*) FROM film_category INNER JOIN category ON film_category.category_id = category.category_id GROUP BY category.name ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
66165,What is the average total rental time for all customers?,SELECT AVG(return_date - rental_date) FROM rental,"
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
66166,What is the most frequent staff member?,"SELECT staff_name, COUNT(*) FROM staff GROUP BY staff_name ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
66167,What is the most frequent store?,"SELECT store_id, COUNT(*) FROM store GROUP BY store_id ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
66168,What is the most frequent film title?,"SELECT title, COUNT(*) FROM film GROUP BY title ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE actor (
	actor_id INTEGER, 
	name TEXT, 
	musical_id INTEGER, 
	character TEXT, 
	duration TEXT, 
	age INTEGER
)


CREATE TABLE address (
	address_id INTEGER, 
	address TEXT, 
	address2 TEXT, 
	district TEXT, 
	city_id INTEGER, 
	postal_code TEXT, 
	phone TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE category (
	category_id INTEGER, 
	name TEXT, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE customer (
	customerid INTEGER, 
	firstname TEXT, 
	lastname TEXT, 
	company TEXT, 
	address TEXT, 
	city TEXT, 
	state TEXT, 
	country TEXT, 
	postalcode TEXT, 
	phone TEXT, 
	fax TEXT, 
	email TEXT, 
	supportrepid INTEGER
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE film_actor (
	actor_id INTEGER, 
	film_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_category (
	film_id INTEGER, 
	category_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE film_text (
	film_id INTEGER, 
	title TEXT, 
	description TEXT
)


CREATE TABLE inventory (
	inventory_id INTEGER, 
	film_id INTEGER, 
	store_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE language (
	language_id INTEGER, 
	name VARCHAR, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE payment (
	payment_id INTEGER, 
	customer_id INTEGER, 
	staff_id INTEGER, 
	rental_id INTEGER, 
	amount NUMERIC, 
	payment_date TIMESTAMP WITHOUT TIME ZONE, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE rental (
	rental_id INTEGER, 
	rental_date TIMESTAMP WITHOUT TIME ZONE, 
	inventory_id INTEGER, 
	customer_id INTEGER, 
	return_date TIMESTAMP WITHOUT TIME ZONE, 
	staff_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE staff (
	staff_id INTEGER, 
	staff_name TEXT, 
	gender TEXT, 
	other_staff_details TEXT
)


CREATE TABLE store (
	store_id INTEGER, 
	manager_staff_id INTEGER, 
	address_id INTEGER, 
	last_update TIMESTAMP WITHOUT TIME ZONE
)"
66170,What is the oldest driver?,SELECT * FROM driver WHERE age = (SELECT MAX(age) FROM driver);,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66171,What is the youngest driver?,SELECT * FROM driver WHERE age = (SELECT MIN(age) FROM driver);,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66172,How many drivers are above 30?,SELECT COUNT(*) FROM driver WHERE age > 30;,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66173,What is the average age of party supporters?,SELECT AVG(age) AS avg_age FROM driver WHERE party = 'Democrat';,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66174,What is the average age of Independents?,SELECT AVG(age) AS avg_age FROM driver WHERE party = 'Independent';,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66175,Who are all the drivers in Boston?,SELECT * FROM driver WHERE home_city = 'Boston';,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66176,How many drivers are from Boston?,SELECT COUNT(*) FROM driver WHERE home_city = 'Boston';,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66177,Which drivers are from cities in Massachusetts?,"SELECT * FROM driver WHERE home_city IN ('Boston', 'Worcester', 'Springfield', 'Pittsfield');","
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66178,What is the city with the most drivers?,"SELECT home_city, COUNT(*) AS count FROM driver GROUP BY home_city ORDER BY count DESC LIMIT 1;","
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66179,What is the city with the fewest drivers?,"SELECT home_city, COUNT(*) AS count FROM driver GROUP BY home_city ORDER BY count LIMIT 1;","
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66180,What is the average age of drivers by city?,"SELECT home_city, AVG(age) AS avg_age FROM driver GROUP BY home_city;","
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66181,What is the list of schools with more than 1 school bus driver?,"SELECT s.school, COUNT(*) AS count FROM school_bus sb JOIN school s ON sb.school_id = s.school_id GROUP BY s.school HAVING COUNT(*) > 1;","
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66183,What is the total number of years school bus drivers have been working?,SELECT SUM(years_working) FROM school_bus;,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66186,Who are all the school bus drivers from school ABC?,SELECT * FROM school_bus WHERE school_id IN (SELECT school_id FROM school WHERE school = 'ABC');,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66187,How many drivers are teaching school buses part time?,SELECT COUNT(*) FROM school_bus WHERE if_full_time = 'f';,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66188,What is the average age of school bus drivers?,SELECT AVG(d.age) FROM school_bus sb JOIN driver d ON sb.driver_id = d.driver_id;,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66189,What is the oldest school bus driver?,SELECT * FROM driver WHERE age = (SELECT MAX(age) FROM driver WHERE driver_id IN (SELECT driver_id FROM school_bus));,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66190,What is the youngest school bus driver?,SELECT * FROM driver WHERE age = (SELECT MIN(age) FROM driver WHERE driver_id IN (SELECT driver_id FROM school_bus));,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66191,How many school bus drivers are under 25?,SELECT COUNT(*) AS under_25 FROM driver WHERE driver_id IN (SELECT driver_id FROM school_bus) AND age < 25;,"
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66192,What is the count of school bus drivers per school and their average experience?,"SELECT s.school, AVG(sb.years_working) AS avg_exp, COUNT(*) AS count FROM school_bus sb JOIN school s ON sb.school_id = s.school_id GROUP BY s.school;","
CREATE TABLE driver (
	driver_id INTEGER, 
	name TEXT, 
	party TEXT, 
	home_city TEXT, 
	age INTEGER
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_bus (
	school_id INTEGER, 
	driver_id INTEGER, 
	years_working INTEGER, 
	if_full_time BOOLEAN
)"
66193,What are the top 5 players with the highest weight?,"SELECT name_last, SUM(weight) AS total_weight FROM player GROUP BY name_last ORDER BY total_weight DESC LIMIT 5;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66194,What players were born in the 19th century?,SELECT * FROM player WHERE birth_year < 1900;,"
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66195,What are the average heights of hitters and pitchers?,"SELECT AVG(CASE WHEN bats = 'L' THEN height ELSE NULL END) AS avg_height_left, AVG(CASE WHEN bats = 'R' THEN height ELSE NULL END) AS avg_height_right FROM player WHERE bats != 'T';","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66196,What are the most common birth months for players?,"SELECT birth_month, COUNT(*) AS count FROM player GROUP BY birth_month ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66197,What players have the highest average height?,"SELECT name_last, AVG(height) AS avg_height FROM player GROUP BY name_last ORDER BY avg_height DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66198,What are the top 5 schools by colors?,"SELECT s.school, sd.colors, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.colors ORDER BY count DESC LIMIT 5;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66199,What are the most common birth countries for players?,"SELECT birth_country, COUNT(*) AS count FROM player GROUP BY birth_country ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66200,What are the top 5 schools by division?,"SELECT s.school, sd.division, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.division ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66201,What are the most common death months for players?,"SELECT death_month, COUNT(*) AS count FROM player GROUP BY death_month ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66202,What are the top 5 schools by class?,"SELECT s.school, sd.class, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.class ORDER BY count DESC LIMIT 5;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66203,What are the top 5 schools by league and division?,"SELECT s.school, sd.league, sd.division, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.league, sd.division ORDER BY count DESC LIMIT 5;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66204,What are the most common birth cities for players?,"SELECT birth_city, COUNT(*) AS count FROM player GROUP BY birth_city ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66205,What are the top 5 schools by nickname?,"SELECT s.school, sd.nickname, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.nickname ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66206,What are the top 5 players with the highest debut year?,"SELECT name_last, MAX(to_date(debut, 'YYYY-MM-DD')) AS debut_year FROM player GROUP BY name_last ORDER BY debut_year DESC LIMIT 5;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66207,What are the top 5 schools by location?,"SELECT s.school, s.location, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, s.location ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66208,What are the most common death countries for players?,"SELECT death_country, COUNT(*) AS count FROM player GROUP BY death_country ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66209,What are the most common birth states for players?,"SELECT birth_state, COUNT(*) AS count FROM player GROUP BY birth_state ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66210,What are the top 5 schools by nickname and division?,"SELECT s.school, sd.nickname, sd.division, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.nickname, sd.division ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66211,What are the top 5 players with the highest retirement year?,"SELECT name_last, MAX(to_date(final_game, 'YYYY-MM-DD')) AS retirement_year FROM player GROUP BY name_last ORDER BY retirement_year DESC LIMIT 5;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66212,What are the top 5 schools by colors and division?,"SELECT s.school, sd.colors, sd.division, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.colors, sd.division ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66213,What are the most common death days for players?,"SELECT death_day, COUNT(*) AS count FROM player GROUP BY death_day ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66214,What are the top 5 schools by division and league?,"SELECT s.school, sd.division, sd.league, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.division, sd.league ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66215,What are the most common birth days for players?,"SELECT birth_day, COUNT(*) AS count FROM player GROUP BY birth_day ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66217,"What are the top 5 schools by league, division, and colors?","SELECT s.school, sd.league, sd.division, sd.colors, COUNT(*) AS count FROM school s JOIN school_details sd ON s.school_id = sd.school_id GROUP BY s.school, sd.league, sd.division, sd.colors ORDER BY count DESC;","
CREATE TABLE player (
	player_id TEXT, 
	birth_year INTEGER, 
	birth_month INTEGER, 
	birth_day INTEGER, 
	birth_country TEXT, 
	birth_state TEXT, 
	birth_city TEXT, 
	death_year INTEGER, 
	death_month INTEGER, 
	death_day INTEGER, 
	death_country TEXT, 
	death_state TEXT, 
	death_city TEXT, 
	name_first TEXT, 
	name_last TEXT, 
	name_given TEXT, 
	weight INTEGER, 
	height INTEGER, 
	bats TEXT, 
	throws TEXT, 
	debut TEXT, 
	final_game TEXT, 
	retro_id TEXT, 
	bbref_id TEXT
)


CREATE TABLE school (
	school_id INTEGER, 
	grade TEXT, 
	school TEXT, 
	location TEXT, 
	type TEXT
)


CREATE TABLE school_details (
	school_id INTEGER, 
	nickname TEXT, 
	colors TEXT, 
	league TEXT, 
	class TEXT, 
	division TEXT
)


CREATE TABLE school_performance (
	school_id INTEGER, 
	school_year TEXT, 
	class_a TEXT, 
	class_aa TEXT
)"
66220,What is the count of missions by ship?,"SELECT ship_id, COUNT(*) FROM mission GROUP BY ship_id","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66221,How many missions were lost in battle?,SELECT COUNT(*) FROM mission WHERE fate = 'lost',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66222,What was the speed distribution of the missions?,"SELECT speed_knots, COUNT(*) FROM mission GROUP BY speed_knots","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66224,Which ships had the highest number of missions?,"SELECT COUNT(*) AS count, ship_id FROM mission GROUP BY ship_id ORDER BY count DESC LIMIT 1","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66225,Which ship type had the highest number of ships?,"SELECT COUNT(*) AS count, ship_type FROM ship GROUP BY ship_type ORDER BY count DESC LIMIT 1","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66227,What was the speed distribution of ships?,"SELECT tonnage, COUNT(*) FROM ship GROUP BY tonnage","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66228,What was the average speed of ships?,SELECT AVG(lost_in_battle) FROM ship,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66229,Which ships had a speed above average?,SELECT * FROM ship WHERE lost_in_battle > (SELECT AVG(lost_in_battle) FROM ship),"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66230,Which ship had the highest number of lost ships?,"SELECT COUNT(*) AS count, name FROM ship GROUP BY name ORDER BY count DESC LIMIT 1","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66231,How many missions were launched in the XXth century?,SELECT COUNT(*) FROM mission WHERE launched_year >= 1900 AND launched_year <= 1999,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66232,Which ships had a disposition of 'sunk'?,"SELECT name, disposition_of_ship FROM ship WHERE disposition_of_ship = 'sunk'","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66233,What was the average speed of sinks?,SELECT AVG(speed_knots) FROM mission WHERE fate = 'lost',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66234,Which ships had a disposition of 'bombed'?,"SELECT name, disposition_of_ship FROM ship WHERE disposition_of_ship = 'bombed'","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66235,Which ship had the lowest tonnage?,SELECT MIN(tonnage) FROM ship,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66236,What was the speed distribution of lost ships?,"SELECT speed_knots, COUNT(*) FROM mission WHERE fate = 'lost' GROUP BY speed_knots","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66239,What was the average speed of missions by ship?,"SELECT ship_id, AVG(speed_knots) FROM mission GROUP BY ship_id","
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66240,How many ships were sunk?,SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'sunk',"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66241,Which ship had the highest disposition?,SELECT MAX(disposition_of_ship) FROM ship,"
CREATE TABLE mission (
	mission_id INTEGER, 
	ship_id INTEGER, 
	code TEXT, 
	launched_year INTEGER, 
	location TEXT, 
	speed_knots INTEGER, 
	fate TEXT
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66242,What countries have the most songs released per year?,"SELECT country, COUNT(*) AS song_count FROM song GROUP BY country ORDER BY song_count DESC LIMIT 5;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66243,What singers are male and have released songs?,SELECT name FROM singer WHERE is_male AND EXISTS (SELECT 1 FROM song WHERE singer.singer_id = song.f_id);,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66244,What song genres are the most popular?,"SELECT genre_is, COUNT(*) AS genre_count FROM song GROUP BY genre_is ORDER BY genre_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66246,What countries have released the most songs?,"SELECT country, COUNT(*) AS song_count FROM song GROUP BY country ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66247,What singers have released the most songs?,"SELECT name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id GROUP BY name ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66248,What songs have been released within the last 5 years?,"SELECT song_name, releasedate FROM song WHERE releasedate >= date '2020-01-01';","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66249,What singers are from the United States?,SELECT name FROM singer WHERE country LIKE 'United States';,"
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66250,What are the 5 countries with the most resolutions?,"SELECT country, SUM(resolution) AS total_resolutions FROM song GROUP BY country ORDER BY total_resolutions DESC LIMIT 5;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66251,What singers have released songs in multiple languages?,"SELECT name FROM singer WHERE EXISTS (SELECT 1 FROM song WHERE singer.singer_id = song.f_id AND languages LIKE '%,language,%');","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66253,What singers have released more than 5 songs?,"SELECT name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id GROUP BY name HAVING COUNT(*) > 5;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66254,What countries have released the most songs in the Europe region?,"SELECT country, COUNT(*) AS song_count FROM song WHERE country LIKE 'Europe' GROUP BY country ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66255,What singers have released the most songs in the last 2 years?,"SELECT name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id WHERE releasedate >= date '2020-01-01' GROUP BY name ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66257,What genres have more than 10 songs?,"SELECT genre_is, COUNT(*) AS genre_count FROM song GROUP BY genre_is HAVING COUNT(*) > 10;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66258,What singers have released songs in multiple genres?,"SELECT name FROM singer WHERE EXISTS (SELECT 1 FROM song WHERE singer.singer_id = song.f_id AND genre_is LIKE '%,genre_is,%');","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66259,What is the average resolution per genre?,"SELECT genre_is, AVG(resolution) AS avg_resolution FROM song GROUP BY genre_is;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66260,What countries have released the most songs in the last 2 years?,"SELECT country, COUNT(*) AS song_count FROM song WHERE releasedate >= date '2020-01-01' GROUP BY country ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66261,Top 5 singers by songs released in the last 5 years?,"SELECT singer.name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id WHERE releasedate >= date '2017-01-01' GROUP BY singer.name ORDER BY song_count DESC LIMIT 5;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66262,What genres have the most popular songs?,"SELECT genre_is, AVG(rating) AS avg_rating FROM song GROUP BY genre_is ORDER BY avg_rating DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66263,What singers have released the most songs per genre?,"SELECT genre_is, name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id GROUP BY genre_is, name ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66264,What is the average resolution per country?,"SELECT country, AVG(resolution) AS avg_resolution FROM song GROUP BY country;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66265,What countries have released the most songs in the last 5 years?,"SELECT country, COUNT(*) AS song_count FROM song WHERE releasedate >= date '2017-01-01' GROUP BY country ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66266,What singers have released more than 10 songs in the last 5 years?,"SELECT name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id WHERE releasedate >= date '2017-01-01' GROUP BY name HAVING COUNT(*) > 10;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66267,What countries have released the most songs in the Asia region?,"SELECT country, COUNT(*) AS song_count FROM song WHERE country LIKE 'Asia' GROUP BY country ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66268,What are the 5 countries with the most resolution in the Asia region?,"SELECT country, SUM(resolution) AS total_resolutions FROM song WHERE country LIKE 'Asia' GROUP BY country ORDER BY total_resolutions DESC LIMIT 5;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66269,What singers have released more than 5 songs in the last 2 years?,"SELECT name, COUNT(*) AS song_count FROM singer INNER JOIN song ON singer.singer_id = song.f_id WHERE releasedate >= date '2020-01-01' GROUP BY name HAVING COUNT(*) > 5;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66270,What countries have released the most songs in the Africa region?,"SELECT country, COUNT(*) AS song_count FROM song WHERE country LIKE 'Africa' GROUP BY country ORDER BY song_count DESC;","
CREATE TABLE singer (
	singer_id INTEGER, 
	name TEXT, 
	country TEXT, 
	song_name TEXT, 
	song_release_year TEXT, 
	age INTEGER, 
	is_male BOOLEAN
)


CREATE TABLE song (
	song_name TEXT, 
	artist_name TEXT, 
	country TEXT, 
	f_id INTEGER, 
	genre_is TEXT, 
	rating INTEGER, 
	languages TEXT, 
	releasedate TIMESTAMP WITHOUT TIME ZONE, 
	resolution INTEGER
)"
66271,What are the top 5 most popular artists by album sales?,"SELECT artists.name, COUNT(albums.aid) AS album_count FROM albums JOIN tracks ON albums.aid = tracks.album_id JOIN artists ON tracks.album_id = artists.id GROUP BY artists.name ORDER BY album_count DESC LIMIT 5;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66272,How many customers are there in each region?,"SELECT DISTINCT customers.customer_email_address, COUNT(*) AS customer_count FROM customers GROUP BY customers.customer_email_address;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66273,Which categories have the most playlist tracks?,"SELECT genres.name, COUNT(playlist_tracks.playlist_id) AS track_count FROM playlist_tracks JOIN tracks ON playlist_tracks.track_id = tracks.id JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.name ORDER BY track_count DESC;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66274,What are the top 3 tracks by album name?,"SELECT albums.title, tracks.name FROM albums JOIN tracks ON albums.aid = tracks.album_id ORDER BY albums.title ASC LIMIT 3;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66275,What was the highest price paid for each media type?,"SELECT media_types.name, MAX(invoice_lines.unit_price) AS highest_price FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN media_types ON tracks.media_type_id = media_types.id GROUP BY media_types.name;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66276,What is the total quantity sold for each genre?,"SELECT genres.name, SUM(invoice_lines.quantity) AS total_quantity FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.name;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66277,How many employees are there in each department?,"SELECT employees.role_code, COUNT(*) AS employee_count FROM employees GROUP BY employees.role_code;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66278,What are the top-selling tracks by name?,"SELECT tracks.name, COUNT(invoice_lines.track_id) AS track_count FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id GROUP BY tracks.name ORDER BY track_count DESC;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66279,What is the average order size?,SELECT AVG(invoice_lines.unit_price * invoice_lines.quantity) AS avg_order_size FROM invoice_lines;,"
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66280,What is the total revenue for each genre?,"SELECT genres.name, SUM(invoice_lines.unit_price * invoice_lines.quantity) AS total_revenue FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.name;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66281,How many tracks are there in each album?,"SELECT albums.title, COUNT(tracks.id) AS track_count FROM tracks JOIN albums ON tracks.album_id = albums.aid GROUP BY albums.title;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66282,What is the total quantity sold for each album?,"SELECT albums.title, SUM(invoice_lines.quantity) AS total_quantity FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN albums ON tracks.album_id = albums.aid GROUP BY albums.title;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66283,What is the highest unit price for each track?,"SELECT tracks.name, MAX(invoice_lines.unit_price) AS highest_price FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id GROUP BY tracks.name;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66284,What is the total cost for each album?,"SELECT albums.title, SUM(invoice_lines.unit_price * invoice_lines.quantity) AS total_cost FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN albums ON tracks.album_id = albums.aid GROUP BY albums.title;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66285,What are the top-selling albums?,"SELECT albums.title, SUM(invoice_lines.quantity) AS total_quantity FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN albums ON tracks.album_id = albums.aid GROUP BY albums.title ORDER BY total_quantity DESC;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66286,How many tracks are there in each genre?,"SELECT genres.name, COUNT(tracks.id) AS track_count FROM tracks JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.name;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66287,What are the top 5 most popular albums by total sales?,"SELECT albums.title, SUM(invoice_lines.quantity) AS total_quantity FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id JOIN albums ON tracks.album_id = albums.aid GROUP BY albums.title ORDER BY total_quantity DESC LIMIT 5;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66288,What is the total cost for each track?,"SELECT tracks.name, SUM(invoice_lines.unit_price * invoice_lines.quantity) AS total_cost FROM invoice_lines JOIN tracks ON invoice_lines.track_id = tracks.id GROUP BY tracks.name;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66289,What are the top 3 genres by album count?,"SELECT genres.name, COUNT(tracks.id) AS track_count FROM tracks JOIN genres ON tracks.genre_id = genres.id GROUP BY genres.name ORDER BY track_count DESC LIMIT 3;","
CREATE TABLE albums (
	aid INTEGER, 
	title TEXT, 
	year INTEGER, 
	label TEXT, 
	type TEXT
)


CREATE TABLE artists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE customers (
	customer_id TEXT, 
	address_id INTEGER, 
	customer_name TEXT, 
	customer_phone TEXT, 
	customer_email_address TEXT, 
	other_details TEXT
)


CREATE TABLE employees (
	employee_id INTEGER, 
	role_code VARCHAR, 
	employee_name TEXT, 
	other_details TEXT
)


CREATE TABLE genres (
	id INTEGER, 
	name TEXT
)


CREATE TABLE invoice_lines (
	id INTEGER, 
	invoice_id INTEGER, 
	track_id INTEGER, 
	unit_price INTEGER, 
	quantity INTEGER
)


CREATE TABLE invoices (
	invoice_id INTEGER, 
	order_id INTEGER, 
	payment_method_code VARCHAR, 
	product_id INTEGER, 
	order_quantity TEXT, 
	other_item_details TEXT, 
	order_item_id INTEGER
)


CREATE TABLE media_types (
	id INTEGER, 
	name TEXT
)


CREATE TABLE playlist_tracks (
	playlist_id INTEGER, 
	track_id INTEGER
)


CREATE TABLE playlists (
	id INTEGER, 
	name TEXT
)


CREATE TABLE tracks (
	id INTEGER, 
	name TEXT, 
	album_id INTEGER, 
	media_type_id INTEGER, 
	genre_id INTEGER, 
	composer TEXT, 
	milliseconds INTEGER, 
	bytes INTEGER, 
	unit_price INTEGER
)"
66290,What is the total number of deaths caused by storms from 2010 onwards?,"SELECT SUM(s.number_deaths) AS total_deaths FROM storm s WHERE STRPOS(s.dates_active, '2010') != 0;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66291,Which storm caused the maximum damage in terms of USD?,"SELECT s.name, s.damage_millions_usd FROM storm s ORDER BY s.damage_millions_usd DESC LIMIT 1;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66292,List all storms which had the highest wind speed of more than 120 mph?,"SELECT s.name, s.max_speed FROM storm s WHERE s.max_speed > 120;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66293,What are the top 5 storms with the highest damages?,"SELECT s.name, SUM(s.damage_millions_usd) AS total_damage FROM storm s GROUP BY s.name ORDER BY total_damage DESC LIMIT 5;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66294,What is the total number of affected regions?,SELECT COUNT(DISTINCT ar.region_id) AS total_regions FROM affected_region ar;,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66298,What is the total number of storms from 2010 onwards?,"SELECT COUNT(s.storm_id) AS total_storms FROM storm s WHERE STRPOS(s.dates_active, '2010') != 0;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66299,What are the top 5 storms with the highest number of deaths?,"SELECT s.name, s.number_deaths FROM storm s ORDER BY s.number_deaths DESC LIMIT 5;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66300,List all the storms where the maximum speed was more than 100 mph?,"SELECT s.name, s.max_speed FROM storm s WHERE s.max_speed > 100;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66302,What is the average number of affected cities per storm?,SELECT AVG(ar.number_city_affected) AS avg_affected FROM affected_region ar;,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66305,What are the top 5 storms with the highest number of affected cities?,"SELECT s.name, SUM(ar.number_city_affected) AS total_affected FROM affected_region ar JOIN storm s ON ar.storm_id = s.storm_id GROUP BY s.name ORDER BY total_affected DESC LIMIT 5;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66306,What is the total number of affected cities?,SELECT SUM(ar.number_city_affected) AS total_affected FROM affected_region ar;,"
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66307,What is the total number of storms from 2000 onwards?,"SELECT COUNT(s.storm_id) AS total_storms FROM storm s WHERE STRPOS(s.dates_active, '2000') != 0;","
CREATE TABLE affected_region (
	region_id INTEGER, 
	storm_id INTEGER, 
	number_city_affected REAL
)


CREATE TABLE region (
	region_id INTEGER, 
	region_name TEXT, 
	date TEXT, 
	label TEXT, 
	format TEXT, 
	catalogue TEXT
)


CREATE TABLE storm (
	storm_id INTEGER, 
	name TEXT, 
	dates_active TEXT, 
	max_speed INTEGER, 
	damage_millions_usd REAL, 
	number_deaths INTEGER
)"
66310,What events were held in the year 2020?,SELECT * FROM event WHERE date LIKE '%2020%',"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66312,What is the highest attendance recorded at a stadium?,SELECT * FROM stadium WHERE highest = (SELECT MAX(highest) FROM stadium),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66313,What are the top 3 swimmers in terms of meter_100 records?,SELECT * FROM swimmer ORDER BY meter_100 DESC LIMIT 3,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66314,Who are the swimmers from the country 'Australia'?,SELECT * FROM swimmer WHERE nationality = 'Australia',"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66315,What events were held at the 'Olympic Stadium'?,SELECT * FROM event WHERE venue = 'Olympic Stadium',"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66316,What are the average attendance records by stadium?,"SELECT stadium.name, AVG(event_attendance) AS avg_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY avg_attendance DESC","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66317,What are the top 2 fastest swimmers in the 200 meter event?,SELECT * FROM swimmer WHERE meter_200 IS NOT NULL ORDER BY meter_200 ASC LIMIT 2,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66318,What are the top 3 highest capacity stadiums?,SELECT * FROM stadium ORDER BY capacity DESC LIMIT 3,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66319,What are the most common times recorded by swimmers?,"SELECT time, COUNT(*) AS count FROM swimmer GROUP BY time ORDER BY count DESC","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66320,What swimsuits were used by the top 3 fastest swimmers?,SELECT DISTINCT time FROM swimmer WHERE time IN (SELECT time FROM swimmer ORDER BY meter_100 DESC LIMIT 3),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66321,How many events were held in the 'summer'?,"SELECT COUNT(*) FROM event WHERE TO_TIMESTAMP(date, 'YYYY-MM-DD') BETWEEN '2020-06-01' AND '2020-09-30'","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66322,What events were held in the stadium with the highest capacity?,SELECT * FROM event WHERE venue = (SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66323,"How many events were held with an attendance of over 100,000?",SELECT COUNT(*) FROM event WHERE event_attendance > 100000,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66324,Who are the top 3 swimmers in the 100 meter event?,SELECT * FROM swimmer WHERE meter_100 IS NOT NULL ORDER BY meter_100 ASC LIMIT 3,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66325,What are the top 2 highest record times in the 200 meter event?,SELECT * FROM swimmer WHERE meter_200 IS NOT NULL ORDER BY meter_200 DESC LIMIT 2,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66326,What are the top 3 fastest swimmers in the 400 meter event?,SELECT * FROM swimmer WHERE meter_400 IS NOT NULL ORDER BY meter_400 ASC LIMIT 3,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66328,What events were held in the stadium with the lowest capacity?,SELECT * FROM event WHERE venue = (SELECT name FROM stadium ORDER BY capacity ASC LIMIT 1),"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66329,How many events were held with an attendance of under 500?,SELECT COUNT(*) FROM event WHERE event_attendance < 500,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66331,What are the top 2 highest record times in the 600 meter event?,SELECT * FROM swimmer WHERE meter_600 IS NOT NULL ORDER BY meter_600 DESC LIMIT 2,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66332,What are the top 3 fastest swimmers in the 200 meter event?,SELECT * FROM swimmer WHERE meter_200 IS NOT NULL ORDER BY meter_200 ASC LIMIT 3,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66333,What are the top 2 highest average attendance records by stadium?,"SELECT stadium.name, AVG(event_attendance) AS avg_attendance FROM event JOIN stadium ON event.venue = stadium.name GROUP BY stadium.name ORDER BY avg_attendance DESC LIMIT 2","
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66335,What are the top 2 fastest swimmers in the 700 meter event?,SELECT * FROM swimmer WHERE meter_700 IS NOT NULL ORDER BY meter_700 ASC LIMIT 2,"
CREATE TABLE event (
	event_id INTEGER, 
	date TEXT, 
	venue TEXT, 
	name TEXT, 
	event_attendance INTEGER
)


CREATE TABLE record (
	id INTEGER, 
	result TEXT, 
	swimmer_id INTEGER, 
	event_id INTEGER
)


CREATE TABLE stadium (
	stadium_id INTEGER, 
	location TEXT, 
	name TEXT, 
	capacity INTEGER, 
	highest INTEGER, 
	lowest INTEGER, 
	average INTEGER
)


CREATE TABLE swimmer (
	id INTEGER, 
	name TEXT, 
	nationality TEXT, 
	meter_100 REAL, 
	meter_200 TEXT, 
	meter_300 TEXT, 
	meter_400 TEXT, 
	meter_500 TEXT, 
	meter_600 TEXT, 
	meter_700 TEXT, 
	time TEXT
)"
66340,What is the total ticket price for each artist?,"SELECT a.name, SUM(e.ticket_price) FROM artist a JOIN exhibition e ON a.artistid = e.artist_id GROUP BY a.name","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66341,What is the total attendance for each exhibit?,"SELECT exhibition_id, SUM(attendance) FROM exhibition_record GROUP BY exhibition_id","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66342,List all exhibits where the theme is 'painting' and their corresponding attendance,"SELECT e.theme, er.date, er.attendance FROM exhibition e JOIN exhibition_record er ON e.exhibition_id = er.exhibition_id WHERE e.theme = 'painting'","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66343,What is the total ticket price for each painting exhibit?,"SELECT theme, SUM(ticket_price) FROM exhibition WHERE theme = 'painting' GROUP BY theme","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66344,What is the total ticket price for each exhibit of each year,"SELECT year, SUM(ticket_price) FROM exhibition GROUP BY year","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66346,"List all exhibits, their corresponding attendance and ticket prices for 2005","SELECT e.theme, er.date, er.attendance, e.ticket_price FROM exhibition e JOIN exhibition_record er ON e.exhibition_id = er.exhibition_id WHERE e.year = 2005","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66353,"List all exhibits, their corresponding attendance and ticket prices","SELECT e.theme, er.date, er.attendance, e.ticket_price FROM exhibition e JOIN exhibition_record er ON e.exhibition_id = er.exhibition_id","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66354,What is the total ticket price for each exhibit of each theme,"SELECT theme, SUM(ticket_price) FROM exhibition WHERE year = 2005 GROUP BY theme","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66355,What is the average ticket price for each exhibit of each theme,"SELECT theme, AVG(ticket_price) FROM exhibition WHERE year = 2005 GROUP BY theme","
CREATE TABLE artist (
	artistid INTEGER, 
	name TEXT
)


CREATE TABLE exhibition (
	exhibition_id INTEGER, 
	year INTEGER, 
	theme TEXT, 
	artist_id INTEGER, 
	ticket_price REAL
)


CREATE TABLE exhibition_record (
	exhibition_id INTEGER, 
	date TEXT, 
	attendance INTEGER
)"
66361,What are the top 3 cities with the most stations?,"SELECT city, COUNT(*) FROM station GROUP BY city ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
66362,What are the stations with the most docks?,"SELECT name, dock_count FROM station ORDER BY dock_count DESC","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
66365,What is the destination with the most trains?,"SELECT destination, COUNT(*) FROM train GROUP BY destination ORDER BY COUNT(*) DESC LIMIT 1","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
66370,What are the top 3 trains with the most arrivals?,"SELECT name, COUNT(*) FROM train_station, train WHERE train.id = train_station.train_id GROUP BY name ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
66371,What are the top 3 cities with the most arrivals?,"SELECT city, COUNT(*) FROM train_station, station WHERE station.id = train_station.station_id GROUP BY city ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
66376,What is the total number of trains that arrived at each station?,"SELECT station_id, COUNT(*) FROM train_station GROUP BY station_id","
CREATE TABLE station (
	id INTEGER, 
	name TEXT, 
	lat INTEGER, 
	long INTEGER, 
	dock_count INTEGER, 
	city TEXT, 
	installation_date TEXT
)


CREATE TABLE train (
	id INTEGER, 
	train_number INTEGER, 
	name TEXT, 
	origin TEXT, 
	destination TEXT, 
	time TEXT, 
	interval TEXT
)


CREATE TABLE train_station (
	train_id INTEGER, 
	station_id INTEGER
)"
66378,What is the total number of tweets created in a day?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(DAY FROM createdate) = EXTRACT(DAY FROM CURRENT_TIMESTAMP),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66379,How many users follow at least 3 users?,SELECT COUNT(*) FROM user_profiles WHERE followers >= 3,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66381,How many users have the word 'admin' in their name?,SELECT COUNT(*) FROM user_profiles WHERE name LIKE '%admin%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66382,How many tweets were created in the last hour?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(HOUR FROM createdate) = EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AND EXTRACT(MINUTE FROM createdate) > 0,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66383,Which users do at least 2 users follow?,SELECT f1 FROM follows GROUP BY f1 HAVING COUNT(*) > 1,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66385,How many users have the word 'dev' in their email?,SELECT COUNT(*) FROM user_profiles WHERE email LIKE '%dev%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66387,How many users have more than 5000 followers?,SELECT COUNT(*) FROM user_profiles WHERE followers > 5000,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66388,How many tweets were created by user 'user123'?,SELECT COUNT(*) FROM tweets WHERE uid = (SELECT uid FROM user_profiles WHERE email = 'user123@domain.com'),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66390,Which two users have the most followers?,"SELECT f1, f2 FROM follows GROUP BY f1, f2 HAVING COUNT(*) > (SELECT COUNT(*) FROM follows) / 2","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66391,How many tweets were created in the last hour and are not by user 'user123'?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(HOUR FROM createdate) = EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AND EXTRACT(MINUTE FROM createdate) > 0 AND uid != (SELECT uid FROM user_profiles WHERE email = 'user123@domain.com'),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66392,How many users have the word 'xyz' in their name?,SELECT COUNT(*) FROM user_profiles WHERE name LIKE '%xyz%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66393,What is the average number of follows for users who have more than 10 follows?,SELECT AVG(followers) FROM user_profiles WHERE followers > 10,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66394,How many tweets were created in the last 24 hours?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(DAY FROM createdate) = EXTRACT(DAY FROM CURRENT_TIMESTAMP) AND EXTRACT(HOUR FROM createdate) < EXTRACT(HOUR FROM CURRENT_TIMESTAMP),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66395,Which two users follow each other?,"SELECT f1, f2 FROM follows GROUP BY f1, f2 HAVING COUNT(*) > 1","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66396,How many users have the word 'admin' in their email?,SELECT COUNT(*) FROM user_profiles WHERE email LIKE '%admin%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66398,How many users have the word 'dev' in their name?,SELECT COUNT(*) FROM user_profiles WHERE name LIKE '%dev%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66399,How many tweets were created by user 'user123' in the last hour?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(HOUR FROM createdate) = EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AND EXTRACT(MINUTE FROM createdate) > 0 AND uid = (SELECT uid FROM user_profiles WHERE email = 'user123@domain.com'),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66400,What is the average number of followers for users who have 10 or less followers?,SELECT AVG(followers) FROM user_profiles WHERE followers <= 10,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66401,How many users have the word 'abc' in their name?,SELECT COUNT(*) FROM user_profiles WHERE name LIKE '%abc%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66402,How many tweets were created in the last 24 hours and are not by user 'user123'?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(DAY FROM createdate) = EXTRACT(DAY FROM CURRENT_TIMESTAMP) - 1 AND EXTRACT(HOUR FROM createdate) < EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AND uid != (SELECT uid FROM user_profiles WHERE email = 'user123@domain.com'),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66403,Which user has the most followers?,"SELECT uid, SUM(followers) FROM user_profiles GROUP BY uid ORDER BY 2 DESC LIMIT 1","
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66405,How many tweets were created by user 'user123' in the last 24 hours?,SELECT COUNT(*) FROM tweets WHERE EXTRACT(DAY FROM createdate) = EXTRACT(DAY FROM CURRENT_TIMESTAMP) - 1 AND EXTRACT(HOUR FROM createdate) < EXTRACT(HOUR FROM CURRENT_TIMESTAMP) AND uid = (SELECT uid FROM user_profiles WHERE email = 'user123@domain.com'),"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66406,What is the average number of followers for all users with more than 5000 followers?,SELECT AVG(followers) FROM user_profiles WHERE followers > 5000,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66409,How many users have the word 'abc' in their email?,SELECT COUNT(*) FROM user_profiles WHERE email LIKE '%abc%',"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66410,What is the total number of followers for users who have 10 or less followers?,SELECT SUM(followers) FROM user_profiles WHERE followers <= 10,"
CREATE TABLE follows (
	f1 INTEGER, 
	f2 INTEGER
)


CREATE TABLE tweets (
	id INTEGER, 
	uid INTEGER, 
	text VARCHAR, 
	createdate TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE user_profiles (
	uid INTEGER, 
	name TEXT, 
	email TEXT, 
	partitionid INTEGER, 
	followers INTEGER
)"
66411,What are the top 3 schools with the highest enrollment?,"SELECT school, ROUND(AVG(enrollment)) AS avg_enrollment FROM university GROUP BY school ORDER BY avg_enrollment DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66412,What is the average percentage of regular season games won by each team?,"SELECT team_name, AVG(CAST(acc_regular_season AS REAL)) AS avg_win_percent FROM basketball_match GROUP BY team_name","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66413,Find the schools with highest and lowest average home win percentage?,"SELECT school, AVG(CAST(all_home AS REAL)) AS avg_home_win FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY avg_home_win DESC, avg_home_win ASC LIMIT 2","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66414,Get the top 3 schools with the most games played at home?,"SELECT school, COUNT(all_home) AS total_home_games FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY total_home_games DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66415,Find the schools with the highest and lowest total enrollment?,"SELECT school, MAX(enrollment) AS max_enrollment, MIN(enrollment) AS min_enrollment FROM university GROUP BY school","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66416,Get the average of all home win percentages by team?,"SELECT team_name, AVG(CAST(all_home AS REAL)) AS avg_home_win FROM basketball_match GROUP BY team_name","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66417,Find the team with the highest winning percentage in regular season?,"SELECT team_name, AVG(CAST(acc_regular_season AS REAL)) AS avg_win_percent FROM basketball_match GROUP BY team_name ORDER BY avg_win_percent DESC LIMIT 1","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66418,What is the average percentage of games won at home by each team?,"SELECT team_name, AVG(CAST(all_home AS REAL)) AS avg_home_win, AVG(CAST(all_road AS REAL)) AS avg_road_win FROM basketball_match GROUP BY team_name","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66419,Get the total enrollment by school type?,"SELECT school, COUNT(*) AS total_enrollment FROM university WHERE affiliation LIKE '%%private%' GROUP BY school","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66420,"Find the average, total games played at home, by each school?","SELECT school, AVG(CAST(all_home AS REAL)) AS avg_home_game, COUNT(all_home) AS total_home_games FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66421,Get the top 3 schools with the most neutral games played?,"SELECT school, COUNT(all_neutral) AS total_neutral_games FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY total_neutral_games DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66422,Find the team with the lowest winning percentage in regular season?,"SELECT team_name, AVG(CAST(acc_regular_season AS REAL)) AS avg_win_percent FROM basketball_match GROUP BY team_name ORDER BY avg_win_percent ASC LIMIT 1","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66423,Get the average total games played by each team?,"SELECT team_name, AVG(CAST(all_games AS REAL)) AS avg_total_game FROM basketball_match GROUP BY team_name","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66424,Find the school with the highest average home winning percentage?,"SELECT school, AVG(CAST(all_home AS REAL)) AS avg_home_win FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY avg_home_win DESC LIMIT 1","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66425,What is the average total win percentage by each team?,"SELECT team_name, AVG(CAST(acc_percent AS REAL)) AS avg_total_win FROM basketball_match GROUP BY team_name","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66426,Get the top 3 schools with the highest average total winning percentage?,"SELECT school, AVG(CAST(acc_percent AS REAL)) AS avg_total_win FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY avg_total_win DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66428,Get the top 3 schools with the most road games played?,"SELECT school, COUNT(all_road) AS total_road_games FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY total_road_games DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66430,Find the school with the lowest average home winning percentage?,"SELECT school, AVG(CAST(all_home AS REAL)) AS avg_home_win FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY avg_home_win ASC LIMIT 1","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66431,Get the top 3 schools with the most total games played?,"SELECT school, COUNT(all_games) AS total_games FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY total_games DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66432,Find the team with the highest average winning percentage at home?,"SELECT team_name, AVG(CAST(all_home AS REAL)) AS avg_home_win FROM basketball_match GROUP BY team_name ORDER BY avg_home_win DESC LIMIT 1","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66434,"Find the average, total neutral games played by each school?","SELECT school, AVG(CAST(all_neutral AS REAL)) AS avg_wins FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66435,Get the top 3 schools with the highest average winning percentage in regular season?,"SELECT school, AVG(CAST(acc_regular_season AS REAL)) AS avg_win FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school ORDER BY avg_win DESC LIMIT 3","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66436,Find the average total road games played by each team?,"SELECT team_name, AVG(CAST(all_road AS REAL)) AS avg_total_road_game FROM basketball_match GROUP BY team_name","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66437,What is the average total games played at home by each school?,"SELECT school, AVG(CAST(all_home AS REAL)) AS avg_home_game FROM basketball_match JOIN university ON basketball_match.school_id = university.school_id GROUP BY school","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66439,Find the team with the lowest average winning percentage at home?,"SELECT team_name, AVG(CAST(all_home AS REAL)) AS avg_home_win FROM basketball_match GROUP BY team_name ORDER BY avg_home_win ASC LIMIT 1","
CREATE TABLE basketball_match (
	team_id INTEGER, 
	school_id INTEGER, 
	team_name TEXT, 
	acc_regular_season TEXT, 
	acc_percent TEXT, 
	acc_home TEXT, 
	acc_road TEXT, 
	all_games TEXT, 
	all_games_percent INTEGER, 
	all_home TEXT, 
	all_road TEXT, 
	all_neutral TEXT
)


CREATE TABLE university (
	school_id INTEGER, 
	school TEXT, 
	location TEXT, 
	founded REAL, 
	affiliation TEXT, 
	enrollment REAL, 
	nickname TEXT, 
	primary_conference TEXT
)"
66444,"List all churches, their organized_by and the year they were organized.","SELECT name, organized_by, to_char(open_date, 'YYYY') FROM church ORDER BY open_date","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66445,What is the total number of married couples in the 2020s?,SELECT COUNT(*) FROM wedding WHERE year >= 2020 AND year <= 2029,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66446,List all married couples and their church,"SELECT c.name, w.male_id, w.female_id FROM church c JOIN wedding w ON c.church_id = w.church_id","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66447,List all people who got married between 2010-2019,"SELECT p.name, w.year FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year BETWEEN 2010 AND 2019","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66448,What is the count of each type of church?,"SELECT COUNT(*), name FROM church GROUP BY name","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66449,List all married couples and the year they got married,"SELECT w.male_id, w.female_id, w.year FROM wedding w","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66450,What is the count of churches each organized?,"SELECT COUNT(*), organized_by FROM church GROUP BY organized_by","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66451,List all churches and their open date,"SELECT name, to_char(open_date, 'YYYY') FROM church ORDER BY open_date","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66453,List all people and their birth details,"SELECT name, birth_date, birth_place FROM people","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66454,List all married couples who got married in the 2000s,"SELECT w.male_id, w.female_id, w.year FROM wedding w WHERE w.year BETWEEN 2000 AND 2009","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66455,What is the total number of people who got married in the 2010s?,SELECT COUNT(*) FROM wedding WHERE year >= 2010 AND year <= 2019,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66458,What is the count of people who got married in the 2010s and their height?,"SELECT p.name, p.height FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year >= 2010 AND w.year <= 2019","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66459,"List all married couples and the year they got married, separated by gender","SELECT w.male_id, w.female_id, w.year FROM wedding w ORDER BY w.year","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66460,What is the total count of churches each organized?,SELECT COUNT(*) FROM church GROUP BY organized_by,"
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66462,List all people who got married in the 2000s and the year they got married,"SELECT p.name, w.year FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year BETWEEN 2000 AND 2009","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66463,List all married couples who got married between 2020-2029,"SELECT p.name, w.year FROM people p JOIN wedding w ON p.people_id = w.male_id OR p.people_id = w.female_id WHERE w.year >= 2020 AND w.year <= 2029","
CREATE TABLE church (
	church_id INTEGER, 
	name TEXT, 
	organized_by TEXT, 
	open_date INTEGER, 
	continuation_of TEXT
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)


CREATE TABLE wedding (
	church_id INTEGER, 
	male_id INTEGER, 
	female_id INTEGER, 
	year INTEGER
)"
66464,"What is the total regional population of cities with a GDP > 100,000?",SELECT SUM(regional_population) FROM city WHERE gdp > 100000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66465,What is the total regional population of cities in the United States?,SELECT SUM(regional_population) FROM city WHERE city like '%United States%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66466,What are the top 3 countries with the highest average regional population?,"SELECT country_name, AVG(regional_population) FROM country NATURAL JOIN city GROUP BY country_name ORDER BY AVG(regional_population) DESC LIMIT 3","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66467,"What is the average regional population of cities with a GDP > 50,000?",SELECT AVG(regional_population) FROM city WHERE gdp > 50000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66468,What are the top 5 cities by regional population?,"SELECT city, SUM(regional_population) FROM city GROUP BY city ORDER BY SUM(regional_population) DESC LIMIT 5","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66469,What is the total GDP of cities in the United States?,SELECT SUM(gdp) FROM city WHERE city LIKE '%United States%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66470,What are the top 3 languages spoken in countries with the highest percentage of official language speakers?,"SELECT language, percentage FROM countrylanguage WHERE isofficial = 'T' ORDER BY percentage DESC LIMIT 3","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66472,"What is the average regional population of cities with a GDP > 100,000?",SELECT AVG(regional_population) FROM city WHERE gdp > 100000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66474,What are the top 5 countries by average regional population?,"SELECT country_name, AVG(regional_population) FROM country NATURAL JOIN city GROUP BY country_name ORDER BY AVG(regional_population) DESC LIMIT 5","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66475,"What is the total regional population of cities with a GDP > 50,000?",SELECT SUM(regional_population) FROM city WHERE gdp > 50000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66476,What is the average regional population of cities in the United States?,SELECT AVG(regional_population) FROM city WHERE city LIKE '%United States%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66477,What is the total GDP of cities in countries with the highest percentage of official language speakers?,SELECT SUM(gdp) FROM city NATURAL JOIN countrylanguage WHERE isofficial = 'T',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66478,What are the top 5 cities by average regional population?,"SELECT city, AVG(regional_population) FROM city GROUP BY city ORDER BY AVG(regional_population) DESC LIMIT 5","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66479,"What is the total regional population of cities with a pop > 500,000?",SELECT SUM(regional_population) FROM city WHERE regional_population > 500000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66480,What is the average regional population of cities in countries with the highest percentage of official language speakers?,SELECT AVG(regional_population) FROM city NATURAL JOIN countrylanguage WHERE isofficial = 'T',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66481,"What is the total GDP of cities with a pop > 500,000?",SELECT SUM(gdp) FROM city WHERE regional_population > 500000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66482,What are the top 3 countries with the highest percentage of official language speakers?,"SELECT country_name, percentage FROM country NATURAL JOIN countrylanguage WHERE isofficial = 'T' ORDER BY percentage DESC LIMIT 3","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66483,What is the total regional population of cities in the United States?,SELECT SUM(regional_population) FROM city WHERE city LIKE '%United States%',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66485,What are the top 5 cities by GDP?,"SELECT city, SUM(gdp) FROM city GROUP BY city ORDER BY SUM(gdp) DESC LIMIT 5","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66488,What is the total regional population of cities in countries with the highest percentage of official language speakers?,SELECT SUM(regional_population) FROM city NATURAL JOIN countrylanguage WHERE isofficial = 'T',"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66489,"What is the average regional population of cities with a pop > 500,000?",SELECT AVG(regional_population) FROM city WHERE regional_population > 500000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66494,"What is the total GDP of cities with a GDP > 100,000?",SELECT SUM(gdp) FROM city WHERE gdp > 100000,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE country (
	country_id INTEGER, 
	country_name TEXT, 
	capital TEXT, 
	official_native_language TEXT
)


CREATE TABLE countrylanguage (
	countrycode VARCHAR, 
	language VARCHAR, 
	isofficial TEXT, 
	percentage DOUBLE PRECISION
)"
66497,What are the top 5 tours for players?,"SELECT tours, COUNT(*) as num_players FROM rankings JOIN players ON players.player_id = rankings.player_id GROUP BY tours ORDER BY num_players DESC LIMIT 5","
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66498,What is the average ranking of players in a particular tour?,SELECT AVG(rankings.ranking) as avg_rank FROM rankings JOIN players ON players.player_id = rankings.player_id WHERE rankings.tours IN (SELECT DISTINCT tours FROM rankings),"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66499,What is the number of players in a particular year?,SELECT COUNT(*) as num_players FROM matches JOIN players ON players.player_id = matches.winner_id WHERE matches.year IN (SELECT DISTINCT year FROM rankings),"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66500,What is the average age of players in a particular year?,SELECT AVG(matches.winner_age) as avg_age FROM matches WHERE matches.year IN (SELECT DISTINCT year FROM rankings),"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66501,What is the average ranking of winners?,SELECT AVG(rankings.ranking) as avg_rank FROM rankings JOIN players ON players.player_id = rankings.player_id,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66502,What is the average age of winners?,SELECT AVG(matches.winner_age) as avg_age FROM matches,"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66505,What is the number of winners in a particular year?,SELECT COUNT(*) as num_winners FROM matches WHERE matches.year IN (SELECT DISTINCT year FROM rankings),"
CREATE TABLE matches (
	best_of INTEGER, 
	draw_size INTEGER, 
	loser_age DOUBLE PRECISION, 
	loser_entry TEXT, 
	loser_hand TEXT, 
	loser_ht INTEGER, 
	loser_id INTEGER, 
	loser_ioc TEXT, 
	loser_name TEXT, 
	loser_rank INTEGER, 
	loser_rank_points INTEGER, 
	loser_seed INTEGER, 
	match_num INTEGER, 
	minutes INTEGER, 
	round TEXT, 
	score TEXT, 
	surface TEXT, 
	tourney_date TIMESTAMP WITHOUT TIME ZONE, 
	tourney_id TEXT, 
	tourney_level TEXT, 
	tourney_name TEXT, 
	winner_age DOUBLE PRECISION, 
	winner_entry TEXT, 
	winner_hand TEXT, 
	winner_ht INTEGER, 
	winner_id INTEGER, 
	winner_ioc TEXT, 
	winner_name TEXT, 
	winner_rank INTEGER, 
	winner_rank_points INTEGER, 
	winner_seed INTEGER, 
	year INTEGER
)


CREATE TABLE players (
	player_id INTEGER, 
	first_name TEXT, 
	last_name TEXT, 
	hand TEXT, 
	birth_date TIMESTAMP WITHOUT TIME ZONE, 
	country_code TEXT
)


CREATE TABLE rankings (
	ranking_date TIMESTAMP WITHOUT TIME ZONE, 
	ranking INTEGER, 
	player_id INTEGER, 
	ranking_points INTEGER, 
	tours INTEGER
)"
66507,What is the total number of publications and authors?,"SELECT COUNT(p.pid), COUNT(w.aid) FROM publication p, writes w WHERE p.pid = w.pid","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66508,What are the top 5 journals with the most publications?,"SELECT j.name, COUNT(p.jid) FROM publication p, journal j WHERE p.jid = j.jid GROUP BY j.name ORDER BY COUNT(p.jid) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66509,Which authors wrote the most publications?,"SELECT a.name, COUNT(w.aid) FROM author a, writes w WHERE a.aid = w.aid GROUP BY a.name ORDER BY COUNT(w.aid) DESC","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66510,What are the top 5 keywords used most in publications?,"SELECT k.keyword, COUNT(pk.kid) FROM publication_keyword pk, keyword k WHERE pk.kid = k.kid GROUP BY k.keyword ORDER BY COUNT(pk.kid) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66511,What are the top 5 authors by publication count?,"SELECT a.name, COUNT(w.aid) FROM author a, writes w WHERE a.aid = w.aid GROUP BY a.name ORDER BY COUNT(w.aid) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66513,What are the top 5 journals by citation count?,"SELECT j.name, SUM(p.citation_num) FROM publication p, journal j WHERE p.jid = j.jid GROUP BY j.name ORDER BY SUM(p.citation_num) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66514,What are the top 5 domains with the most keyword usage?,"SELECT d.name, COUNT(pk.kid) FROM publication_keyword pk, domain_publication dp, domain d WHERE pk.pid = dp.pid AND dp.did = d.did GROUP BY d.name ORDER BY COUNT(pk.kid) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66515,What are the top 5 journals by reference count?,"SELECT j.name, COUNT(p.reference_num) FROM publication p, journal j WHERE p.jid = j.jid GROUP BY j.name ORDER BY COUNT(p.reference_num) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66517,What are the top 5 journals by keyword usage?,"SELECT j.name, COUNT(pk.kid) FROM publication_keyword pk, publication p, journal j WHERE pk.pid = p.pid AND p.jid = j.jid GROUP BY j.name ORDER BY COUNT(pk.kid) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66518,What are the top 5 domains by publication count in 2010?,"SELECT d.name, COUNT(dp.did) FROM publication p, domain_publication dp, domain d WHERE p.pid = dp.pid AND dp.did = d.did AND p.year = 2010 GROUP BY d.name ORDER BY COUNT(dp.did) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66519,What are the top 5 journals by publication count in 2010?,"SELECT j.name, COUNT(p.jid) FROM publication p, journal j WHERE p.jid = j.jid AND p.year = 2010 GROUP BY j.name ORDER BY COUNT(p.jid) DESC LIMIT 5","
CREATE TABLE author (
	aid INTEGER, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE cite (
	cited INTEGER, 
	citing INTEGER
)


CREATE TABLE conference (
	cid INTEGER, 
	homepage TEXT, 
	name TEXT
)


CREATE TABLE domain (
	did INTEGER, 
	name TEXT
)


CREATE TABLE domain_author (
	aid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_conference (
	cid INTEGER, 
	did INTEGER
)


CREATE TABLE domain_journal (
	did INTEGER, 
	jid INTEGER
)


CREATE TABLE domain_keyword (
	did INTEGER, 
	kid INTEGER
)


CREATE TABLE domain_publication (
	did INTEGER, 
	pid INTEGER
)


CREATE TABLE journal (
	homepage TEXT, 
	jid INTEGER, 
	name TEXT
)


CREATE TABLE keyword (
	keyword TEXT, 
	kid INTEGER
)


CREATE TABLE organization (
	continent TEXT, 
	homepage TEXT, 
	name TEXT, 
	oid INTEGER
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)


CREATE TABLE publication_keyword (
	pid INTEGER, 
	kid INTEGER
)


CREATE TABLE writes (
	aid INTEGER, 
	pid INTEGER
)"
66526,What is the lightest aircraft?,SELECT * FROM aircraft ORDER BY max_gross_weight ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66529,What is the airport with the highest domestic passengers?,SELECT * FROM airport ORDER BY domestic_passengers DESC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66534,Who is the biggest fan of which pilot?,SELECT * FROM pilot,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66535,What is the average number of matches?,SELECT COUNT(*) FROM match,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66536,What are the fastest qualifying times?,SELECT fastest_qualifying FROM match,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66538,What is the country of which location?,SELECT location FROM match,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66539,What is the country of which round 5 of the world?,SELECT location FROM match WHERE round = 5,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66543,What is the least disk loaded aircraft?,SELECT * FROM aircraft ORDER BY max_disk_loading ASC LIMIT 1,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66545,What is the lightest aircraft that can hold 50 kg?,SELECT * FROM aircraft ORDER BY max_gross_weight ASC,"
CREATE TABLE aircraft (
	aircraft_id INTEGER, 
	aircraft TEXT, 
	description TEXT, 
	max_gross_weight TEXT, 
	total_disk_area TEXT, 
	max_disk_loading TEXT
)


CREATE TABLE airport (
	airport_id INTEGER, 
	airport_name TEXT, 
	total_passengers REAL, 
	__change_2007 TEXT, 
	international_passengers REAL, 
	domestic_passengers REAL, 
	transit_passengers REAL, 
	aircraft_movements REAL, 
	freight_metric_tonnes REAL
)


CREATE TABLE airport_aircraft (
	id INTEGER, 
	airport_id INTEGER, 
	aircraft_id INTEGER
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE pilot (
	pilot_id INTEGER, 
	name TEXT, 
	age INTEGER
)"
66548,What is the type of the mill in Paris?,SELECT name FROM mill WHERE location = 'Paris';,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66549,What is the name of the longest bridge?,SELECT name FROM bridge ORDER BY length_meters DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66551,What is the type of the mill in China?,SELECT name FROM mill WHERE location = 'China';,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66552,What is the name of the architect who built the longest mill?,SELECT name FROM mill ORDER BY built_year DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66553,What is the type of the longest mill?,SELECT type FROM mill ORDER BY built_year DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66554,What is the name of the architect who built the shortest mill?,SELECT name FROM mill ORDER BY built_year ASC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66555,What is the name of the architect who built the longest bridge in Asia?,SELECT name FROM bridge WHERE location LIKE '%Asia%' ORDER BY length_meters DESC LIMIT 1;,"
CREATE TABLE architect (
	id TEXT, 
	name TEXT, 
	nationality TEXT, 
	gender TEXT
)


CREATE TABLE bridge (
	architect_id INTEGER, 
	id INTEGER, 
	name TEXT, 
	location TEXT, 
	length_meters REAL, 
	length_feet REAL
)


CREATE TABLE mill (
	architect_id INTEGER, 
	id INTEGER, 
	location TEXT, 
	name TEXT, 
	type TEXT, 
	built_year INTEGER, 
	notes TEXT
)"
66556,What battles took place in 1373?,SELECT * FROM battle WHERE date = '1373',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66557,What was the name of the Bulgarian commander in the 1373 battle?,SELECT name FROM battle WHERE date = '1373' AND bulgarian_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66558,What was the name of the Latin commander in the 1373 battle?,SELECT name FROM battle WHERE date = '1373' AND latin_commander IS NOT NULL,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66559,What was the outcome of the 1373 battle?,SELECT result FROM battle WHERE date = '1373',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66560,What were the casualties in the 1373 battle?,"SELECT killed, injured FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = 1)","
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66562,What was the tonnage of the lost ships?,SELECT tonnage FROM ship WHERE lost_in_battle = 1,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66563,What were the ships that were missing after 1373?,SELECT name FROM ship WHERE disposition_of_ship = 'missing',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66564,What ships were sunk during the 1373 battle?,SELECT name FROM ship WHERE disposition_of_ship = 'sunk',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66565,How many people were injured in the 1373 battle?,SELECT SUM(injured) FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = 1),"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66566,How many people were killed in the 1373 battle?,SELECT SUM(killed) FROM death WHERE caused_by_ship_id IN (SELECT id FROM ship WHERE lost_in_battle = 1),"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66567,Which Bulgarian commanders were involved in the 1373 battle?,SELECT DISTINCT bulgarian_commander FROM battle WHERE date = '1373',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66568,Which Latin commanders were involved in the 1373 battle?,SELECT DISTINCT latin_commander FROM battle WHERE date = '1373',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66569,What were the results of the battles that took place in 1374?,SELECT result FROM battle WHERE date = '1374',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66575,What were the results of the battles that took place in 1375?,SELECT result FROM battle WHERE date = '1375',"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66581,What were the outcomes of the latest battles?,SELECT result FROM battle ORDER BY date DESC LIMIT 5,"
CREATE TABLE battle (
	id INTEGER, 
	name TEXT, 
	date TEXT, 
	bulgarian_commander TEXT, 
	latin_commander TEXT, 
	result TEXT
)


CREATE TABLE death (
	caused_by_ship_id INTEGER, 
	id INTEGER, 
	note TEXT, 
	killed INTEGER, 
	injured INTEGER
)


CREATE TABLE ship (
	lost_in_battle INTEGER, 
	id INTEGER, 
	name TEXT, 
	tonnage TEXT, 
	ship_type TEXT, 
	location TEXT, 
	disposition_of_ship TEXT
)"
66582,What is the total weight lifted by each person?,"SELECT name, SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id GROUP BY name","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66583,Which person has the highest snatch weight?,"SELECT name, MAX(snatch) FROM body_builder JOIN people ON body_builder.people_id = people.people_id GROUP BY name","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66584,What is the total weight lifted by people under 170cm tall?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE height < 170,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66585,What is the average clean and jerk weight for people born in the US?,SELECT AVG(clean_jerk) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place = 'US',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66586,Who has the highest total weight lifted?,"SELECT name, MAX(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id GROUP BY name","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66588,What is the total weight lifted by people under 120kg?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE weight < 120,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66590,Who has the lowest total weight lifted?,"SELECT name, MIN(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id GROUP BY name","
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66591,What is the total weight lifted by people born in Asia?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place LIKE '%Asia%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66594,How many people have a weight below 50 kg?,SELECT COUNT(*) FROM people WHERE weight < 50,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66595,What is the average clean and jerk weight for people born in Europe?,SELECT AVG(clean_jerk) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place LIKE '%Europe%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66596,What is the total weight lifted by people born in Oceania?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place LIKE '%Oceania%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66598,What is the total weight lifted by people under 180cm tall?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE height < 180,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66599,What is the average clean and jerk weight for people born in South America?,SELECT AVG(clean_jerk) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place LIKE '%South America%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66601,What is the total weight lifted by people born in Africa?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place LIKE '%Africa%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66602,What is the average clean and jerk weight for people born in North America?,SELECT AVG(clean_jerk) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE birth_place LIKE '%North America%',"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66603,What is the total weight lifted by people under 60kg?,SELECT SUM(total) FROM body_builder JOIN people ON body_builder.people_id = people.people_id WHERE weight < 60,"
CREATE TABLE body_builder (
	body_builder_id INTEGER, 
	people_id INTEGER, 
	snatch REAL, 
	clean_jerk REAL, 
	total REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66605,List all books with more than 2 issues,SELECT * FROM book WHERE issues > 2,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66606,What is the total number of publications in each year?,"SELECT p.year, COUNT(*) FROM publication p GROUP BY p.year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66608,What are the top 3 most published years?,"SELECT year, COUNT(*) FROM publication GROUP BY year ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66609,List all publications from 2015 onwards,SELECT * FROM publication WHERE year >= 2015,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66610,What are the average citation numbers by year?,"SELECT p.year, AVG(citation_num) FROM publication p GROUP BY p.year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66612,List all books with a specific writer,SELECT * FROM book WHERE writer = 'John',"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66614,List all publications with more than 5 citations,SELECT * FROM publication WHERE citation_num > 5,"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66615,What are the average publication years by category?,"SELECT cid, AVG(year) FROM publication GROUP BY cid","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66616,What are the top 3 most published categories?,"SELECT cid, COUNT(*) FROM publication GROUP BY cid ORDER BY COUNT(*) DESC LIMIT 3","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66617,List all books with a specific title,SELECT * FROM book WHERE title = 'Book A',"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66619,List all publications in a specific category,SELECT * FROM publication WHERE cid = 'Cat A',"
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66620,What are the average reference numbers by year?,"SELECT year, AVG(reference_num) FROM publication GROUP BY year","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66621,What are the top 3 most published years with the highest reference numbers,"SELECT year, AVG(reference_num) FROM publication GROUP BY year ORDER BY AVG(reference_num) DESC LIMIT 3","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66623,What are the average citation numbers by category?,"SELECT cid, AVG(citation_num) FROM publication GROUP BY cid","
CREATE TABLE book (
	book_id INTEGER, 
	title TEXT, 
	issues REAL, 
	writer TEXT
)


CREATE TABLE publication (
	abstract TEXT, 
	cid TEXT, 
	citation_num INTEGER, 
	jid INTEGER, 
	pid INTEGER, 
	reference_num INTEGER, 
	title TEXT, 
	year INTEGER
)"
66624,How many people are there who are at least 170 cm tall?,SELECT COUNT(*) FROM people WHERE height >= 170;,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66629,Which candidate has the highest oppose rate?,SELECT * FROM candidate ORDER BY oppose_rate DESC LIMIT 1;,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66631,What is the date range of the candidates?,"SELECT MIN(date), MAX(date) FROM candidate;","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66632,Which candidates have a support rate above average?,SELECT * FROM candidate WHERE support_rate > (SELECT AVG(support_rate) FROM candidate);,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66635,Which candidate has the highest consider rate?,SELECT * FROM candidate ORDER BY consider_rate DESC LIMIT 1;,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66637,Which candidate has the lowest oppose rate?,SELECT * FROM candidate ORDER BY oppose_rate ASC LIMIT 1;,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66639,What is the average height and weight of people?,"SELECT AVG(height), AVG(weight) FROM people;","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66643,Which candidate has the highest lose rate?,SELECT * FROM candidate ORDER BY (1 - support_rate - consider_rate - oppose_rate) DESC LIMIT 1;,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66645,What is the date range of people's birth-places?,"SELECT MIN(birth_place), MAX(birth_place) FROM people;","
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66646,Which candidate has the highest uncertain rate among candidates born in the US?,SELECT * FROM candidate WHERE people_id IN (SELECT people_id FROM people WHERE birth_place LIKE '%US%') ORDER BY unsure_rate DESC LIMIT 1;,"
CREATE TABLE candidate (
	candidate_id INTEGER, 
	people_id INTEGER, 
	poll_source TEXT, 
	date TEXT, 
	support_rate REAL, 
	consider_rate REAL, 
	oppose_rate REAL, 
	unsure_rate REAL
)


CREATE TABLE people (
	people_id INTEGER, 
	name TEXT, 
	height REAL, 
	weight REAL, 
	birth_date TEXT, 
	birth_place TEXT
)"
66648,What is the total number of cars?,SELECT COUNT(*) FROM cars_data;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66649,What are the distinct continents?,SELECT DISTINCT continent FROM continents;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66650,List all car makers,SELECT * FROM car_makers;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66651,List all models from a specific maker,SELECT * FROM model_list WHERE maker = 1;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66652,What is the average weight of cars,SELECT AVG(weight) FROM cars_data;,"
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66655,What is the list of countries by continent,"SELECT countries.countryname, continents.continent FROM countries JOIN continents ON countries.continent = continents.contid;","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66656,What is the total number of cars per year,"SELECT year, COUNT(*) FROM cars_data GROUP BY year;","
CREATE TABLE car_makers (
	id INTEGER, 
	maker TEXT, 
	fullname TEXT, 
	country TEXT
)


CREATE TABLE car_names (
	makeid INTEGER, 
	model TEXT, 
	make TEXT
)


CREATE TABLE cars_data (
	id INTEGER, 
	mpg TEXT, 
	cylinders INTEGER, 
	edispl REAL, 
	horsepower TEXT, 
	weight INTEGER, 
	accelerate REAL, 
	year INTEGER
)


CREATE TABLE continents (
	contid INTEGER, 
	continent TEXT
)


CREATE TABLE countries (
	countryid INTEGER, 
	countryname TEXT, 
	continent INTEGER
)


CREATE TABLE model_list (
	modelid INTEGER, 
	maker INTEGER, 
	model TEXT
)"
66657,What is the name of the cinema with the highest average occupancy rate?,"SELECT cinema.name, AVG(schedule.show_times_per_day) AS avg_occupancy_rate FROM cinema INNER JOIN schedule ON cinema.cinema_id = schedule.cinema_id GROUP BY cinema.name ORDER BY avg_occupancy_rate DESC LIMIT 1;","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66658,What is the title of the film with the highest ranking in its series?,"SELECT title, rank_in_series FROM film ORDER BY rank_in_series DESC LIMIT 1;","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66659,What is the cinema with the smallest capacity?,"SELECT name, capacity FROM cinema ORDER BY capacity ASC LIMIT 1;","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66660,What is the total number of films showing at multiple cinemas?,SELECT COUNT(DISTINCT film_id) FROM schedule GROUP BY film_id HAVING COUNT(DISTINCT cinema_id) > 1;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66661,What is the date of the first film to be released in cinemas?,SELECT MIN(date) FROM schedule INNER JOIN film ON schedule.film_id = film.film_id;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66662,What is the rank of the earliest film ever to be shown in cinemas?,SELECT rank_in_series FROM film INNER JOIN schedule ON film.film_id = schedule.film_id ORDER BY schedule.date ASC LIMIT 1;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66663,What is the title of the longest-running TV series?,SELECT title FROM film WHERE number_in_season IS NOT NULL;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66664,What is the cinema with the most screens?,"SELECT name, COUNT(DISTINCT film_id) AS num_screens FROM cinema INNER JOIN schedule ON cinema.cinema_id = schedule.cinema_id GROUP BY name ORDER BY num_screens DESC LIMIT 1;","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66665,What is the average cost of a ticket for a special event?,SELECT AVG(price) AS avg_price FROM schedule WHERE show_times_per_day = 1;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66666,What is the cinema with the highest total revenue?,"SELECT name, SUM(price * show_times_per_day) AS total_revenue FROM cinema INNER JOIN schedule ON cinema.cinema_id = schedule.cinema_id GROUP BY name ORDER BY total_revenue DESC LIMIT 1;","
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66667,What is the date of the last film to be released in cinemas?,SELECT MAX(date) FROM schedule INNER JOIN film ON schedule.film_id = film.film_id;,"
CREATE TABLE cinema (
	cinema_id INTEGER, 
	name TEXT, 
	openning_year INTEGER, 
	capacity INTEGER, 
	location TEXT
)


CREATE TABLE film (
	film_id INTEGER, 
	rank_in_series INTEGER, 
	number_in_season INTEGER, 
	title TEXT, 
	directed_by TEXT, 
	original_air_date TEXT, 
	production_code TEXT
)


CREATE TABLE schedule (
	cinema_id INTEGER, 
	film_id INTEGER, 
	date TEXT, 
	show_times_per_day INTEGER, 
	price DOUBLE PRECISION
)"
66670,Which cities have the highest GDP?,"SELECT city, gdp FROM city ORDER BY gdp DESC","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66671,What are the months with the warmest temperatures?,SELECT * FROM temperature WHERE jan > 20 OR feb > 20 OR mar > 20 OR apr > 20,"
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66672,Which city hosted the most matches?,"SELECT host_city, COUNT(*) AS count FROM hosting_city GROUP BY host_city ORDER BY count DESC","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66674,What is the average temperature in winter?,"SELECT AVG(jan) AS jan_avg, AVG(feb) AS feb_avg, AVG(mar) AS mar_avg FROM temperature","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66675,What is the average temperature in summer?,"SELECT AVG(jun) AS jun_avg, AVG(jul) AS jul_avg, AVG(aug) AS aug_avg FROM temperature","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66676,Which city hosted the most matches in 2015?,"SELECT host_city, COUNT(*) AS count FROM hosting_city WHERE year = 2015 GROUP BY host_city ORDER BY count DESC","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66677,Which city hosted the most matches in 2020?,"SELECT host_city, COUNT(*) AS count FROM hosting_city WHERE year = 2020 GROUP BY host_city ORDER BY count DESC","
CREATE TABLE city (
	city_id INTEGER, 
	city TEXT, 
	hanzi TEXT, 
	hanyu_pinyin TEXT, 
	regional_population INTEGER, 
	gdp REAL
)


CREATE TABLE hosting_city (
	year INTEGER, 
	match_id INTEGER, 
	host_city TEXT
)


CREATE TABLE match (
	round REAL, 
	location TEXT, 
	country TEXT, 
	date TEXT, 
	fastest_qualifying TEXT, 
	winning_pilot TEXT, 
	winning_aircraft TEXT
)


CREATE TABLE temperature (
	city_id INTEGER, 
	jan REAL, 
	feb REAL, 
	mar REAL, 
	apr REAL, 
	jun REAL, 
	jul REAL, 
	aug REAL, 
	sep REAL, 
	oct REAL, 
	nov REAL, 
	dec REAL
)"
66678,What is the average height of mountains in a specific country?,SELECT AVG(height) FROM mountain WHERE country = '{country}',"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66679,What is the largest mountain by prominence in a country?,SELECT * FROM mountain WHERE prominence = (SELECT MAX(prominence) FROM mountain) AND country = '{country}';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66680,What is the number of climbers from a specific country?,SELECT COUNT(*) FROM climber WHERE country = '{country}';,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66681,What are the top 5 climbers by points in a specific year?,SELECT * FROM climber WHERE time LIKE '{year}%' ORDER BY points DESC LIMIT 5;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66682,What is the most climbed mountain in a specific year?,SELECT mountain.name FROM mountain JOIN climber ON mountain.mountain_id = climber.mountain_id WHERE time LIKE '{year}%' GROUP BY mountain.name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66683,List all climbers from a specific country including their name and country?,"SELECT name, country FROM climber WHERE country = '{country}';","
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66684,What are the top 5 climbers by points globally?,SELECT * FROM climber ORDER BY points DESC LIMIT 5;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66685,What is the most climbed mountain globally?,SELECT mountain.name FROM mountain JOIN climber ON mountain.mountain_id = climber.mountain_id GROUP BY mountain.name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66686,What are the top 5 climbers by time in a specific year?,SELECT * FROM climber WHERE time LIKE '{year}%' ORDER BY time DESC LIMIT 5;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66687,What is the most climbed mountain in a specific year and range?,SELECT mountain.name FROM mountain JOIN climber ON mountain.mountain_id = climber.mountain_id WHERE range = '{range}' AND time LIKE '{year}%' GROUP BY mountain.name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66688,What are the top 5 climbers in a specific year and country?,SELECT * FROM climber WHERE time LIKE '{year}%' AND country = '{country}' ORDER BY points DESC LIMIT 5;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66691,What is the most climbed mountain in a specific range?,SELECT mountain.name FROM mountain JOIN climber ON mountain.mountain_id = climber.mountain_id WHERE range = '{range}' GROUP BY mountain.name ORDER BY COUNT(*) DESC LIMIT 1;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66692,What are the top 5 climbers by time globally?,SELECT * FROM climber ORDER BY time DESC LIMIT 5;,"
CREATE TABLE climber (
	climber_id INTEGER, 
	name TEXT, 
	country TEXT, 
	time TEXT, 
	points REAL, 
	mountain_id INTEGER
)


CREATE TABLE mountain (
	mountain_id INTEGER, 
	name TEXT, 
	height REAL, 
	prominence REAL, 
	range TEXT, 
	country TEXT
)"
66696,What is the total number of happy hour members for each month?,"SELECT month, COUNT(*) as num_members FROM happy_hour GROUP BY month;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66697,What are the total amounts spent by each happy hour member?,"SELECT member_id, SUM(total_amount) as total_spent FROM happy_hour_member GROUP BY member_id;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66698,What are the shops with the most staff?,"SELECT address, COUNT(*) as num_staff FROM shop GROUP BY address ORDER BY num_staff DESC;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66699,What are the average ages of happy hour members?,SELECT AVG(age) as avg_age FROM member;,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66700,What is the total revenue generated by each happy hour member?,"SELECT member_id, SUM(total_amount) as total_revenue FROM happy_hour_member GROUP BY member_id;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66701,What are the shops that have been open for the longest?,"SELECT address, MAX(open_year) as max_open_year FROM shop GROUP BY address;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66702,What is the highest level of membership?,SELECT MAX(level_of_membership) as max_level FROM member;,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66703,What are the members with the highest level of membership?,"SELECT name, level_of_membership FROM member WHERE level_of_membership = (SELECT MAX(level_of_membership) FROM member);","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66704,What is the average score of each shop?,"SELECT address, AVG(score) as avg_score FROM shop GROUP BY address;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66705,What are the shops with the lowest score?,"SELECT address, score FROM shop ORDER BY score ASC LIMIT 5;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66706,What is the total number of happy hour members for each shop?,"SELECT shop_id, COUNT(*) as num_members FROM happy_hour GROUP BY shop_id;","
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
66707,What is the average number of shaff in charge?,SELECT AVG(num_of_shaff_in_charge) as avg_num_shaff FROM happy_hour;,"
CREATE TABLE happy_hour (
	hh_id INTEGER, 
	shop_id INTEGER, 
	month TEXT, 
	num_of_shaff_in_charge INTEGER
)


CREATE TABLE happy_hour_member (
	hh_id INTEGER, 
	member_id INTEGER, 
	total_amount REAL
)


CREATE TABLE member (
	member_id INTEGER, 
	name TEXT, 
	membership_card TEXT, 
	age INTEGER, 
	time_of_purchase INTEGER, 
	level_of_membership INTEGER, 
	address TEXT
)


CREATE TABLE shop (
	shop_id INTEGER, 
	address TEXT, 
	num_of_staff TEXT, 
	score REAL, 
	open_year TEXT
)"
